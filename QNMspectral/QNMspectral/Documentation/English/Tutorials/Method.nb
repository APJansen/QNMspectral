(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    166528,       3633]
NotebookOptionsPosition[    158960,       3363]
NotebookOutlinePosition[    159397,       3380]
CellTagsIndexPosition[    159354,       3377]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "New in: ",
 Cell["0.0", "HistoryData",
  CellTags->"New"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete"],
 " | Excised in: ",
 Cell[" ", "HistoryData",
  CellTags->"Excised"]
}], "History",
 CellID->1247902091],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->1122911449],

Cell["Tutorial", "Categorization",
 CellLabel->"Entity Type",
 CellID->686433507],

Cell["QNMspectral", "Categorization",
 CellLabel->"Paclet Name",
 CellID->605800465],

Cell["QNMspectral`", "Categorization",
 CellLabel->"Context",
 CellID->468444828],

Cell["QNMspectral/tutorial/TechnicalDetails", "Categorization",
 CellLabel->"URI"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->1427428552],

Cell["XXXX", "Keywords",
 CellID->1251852827]
}, Closed]],

Cell[CellGroupData[{

Cell["Details", "DetailsSection",
 CellID->307771771],

Cell["XXXX", "Details",
 CellLabel->"Lead",
 CellID->218895918],

Cell["XXXX", "Details",
 CellLabel->"Developers",
 CellID->350963985],

Cell["XXXX", "Details",
 CellLabel->"Authors",
 CellID->795871300],

Cell["XXXX", "Details",
 CellLabel->"Feature Name",
 CellID->199739161],

Cell["XXXX", "Details",
 CellLabel->"QA",
 CellID->40625308],

Cell["XXXX", "Details",
 CellLabel->"DA",
 CellID->357121918],

Cell["XXXX", "Details",
 CellLabel->"Docs",
 CellID->35949532],

Cell["XXXX", "Details",
 CellLabel->"Features Page Notes",
 CellID->929432370],

Cell["XXXX", "Details",
 CellLabel->"Comments",
 CellID->240026365]
}, Closed]],

Cell[CellGroupData[{

Cell["Method", "Title",
 CellChangeTimes->{{3.6822629780712357`*^9, 3.682262979834888*^9}},
 CellID->509267359],

Cell[CellGroupData[{

Cell["Boundary Conditions and Eddington-Finkelstein coordinates", "Section",
 CellChangeTimes->{{3.684664722301611*^9, 3.684664733389947*^9}},
 CellID->278927872],

Cell["\<\
To find the quasinormal mode spectrum, we have to solve for a linearized \
perturbation on top of a black hole/black brane, with ingoing boundary \
conditions at the horizon, and normalizability at the boundary. \
\>", "Text",
 CellChangeTimes->{{3.685076272052692*^9, 3.685076317595854*^9}},
 CellID->1685543347],

Cell["\<\
It turns out that Eddington-Finkelstein coordinates are perfectly suited for \
this problem. By Eddington-Finkelstein coordinates we mean more specifically \
a metric of the form\
\>", "Text",
 CellChangeTimes->{{3.685076272052692*^9, 3.685076364432778*^9}, {
  3.685076399193109*^9, 3.68507641057197*^9}},
 CellID->65355837],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["ds", "2"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"f", "(", "r", ")"}]}], " ", 
      SuperscriptBox["dt", "2"]}], "+", 
     RowBox[{"2", 
      RowBox[{"g", "(", "r", ")"}], " ", "dt", " ", "dr"}]}]}], 
   TraditionalForm]], "InlineMath"],
 " (+ spatial part), where f(r) is the blackening factor, and g(r) depends on \
the gauge of the radial variable."
}], "Text",
 CellChangeTimes->{{3.685076272052692*^9, 3.685076364432778*^9}, {
  3.685076399193109*^9, 3.6850764668445597`*^9}, {3.6850764971251574`*^9, 
  3.685076505976898*^9}, {3.685085081781453*^9, 3.6850850825072937`*^9}},
 CellID->374829256],

Cell[CellGroupData[{

Cell["\<\
Consider the simple example of a massless scalar field in a 5-dimensional \
Schwarschild-AdS black brane, which can be written as\
\>", "Text",
 CellChangeTimes->{{3.685075220034727*^9, 3.685075264384363*^9}},
 CellID->1617778002],

Cell[BoxData[
 RowBox[{
  RowBox[{"eq\[Phi]", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "6"}], " ", "\[ImaginaryI]", " ", "\[Lambda]", " ", 
     RowBox[{"\[Delta]\[Phi]", "[", "u", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "3"}], "-", 
       SuperscriptBox["u", "4"], "+", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "u", " ", "\[Lambda]"}]}], 
      ")"}], " ", 
     RowBox[{
      SuperscriptBox["\[Delta]\[Phi]", "\[Prime]",
       MultilineFunction->None], "[", "u", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"u", "-", 
       SuperscriptBox["u", "5"]}], ")"}], " ", 
     RowBox[{
      SuperscriptBox["\[Delta]\[Phi]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "u", "]"}]}]}]}], ";"}]], "Input",
 InitializationCell->False,
 CellChangeTimes->{
  3.681368398127882*^9, {3.682141649875209*^9, 3.682141649876894*^9}, {
   3.685075400141177*^9, 3.685075452147379*^9}, {3.68507550183048*^9, 
   3.6850755029011183`*^9}, {3.685075541297083*^9, 3.685075573138361*^9}, {
   3.6850756100431433`*^9, 3.6850756371397343`*^9}, {3.6850756920232697`*^9, 
   3.6850756939146633`*^9}},
 CellLabel->"In[63]:=",
 CellID->77585105]
}, Open  ]],

Cell[TextData[{
 "Here u=0 is the boundary and u=1 the horizon, corresponding to a gauge \
where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "u", ")"}], "=", 
    RowBox[{
     RowBox[{"-", "1"}], "/", 
     SuperscriptBox["u", "2"]}]}], TraditionalForm]], "InlineMath"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Lambda]", "=", 
    RowBox[{
     RowBox[{"\[Omega]", "/", "4"}], "\[Pi]", " ", "T"}]}], TraditionalForm]],
   "InlineMath"],
 ", with \[Omega] the frequency of the perturbation and T the temperature of \
the black brane."
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.685075220034727*^9, 3.685075264383314*^9}, {
  3.685075350185371*^9, 3.685075360013562*^9}, {3.685075562762579*^9, 
  3.6850755646955957`*^9}, {3.685075699274602*^9, 3.685075729507423*^9}, {
  3.685076540966023*^9, 3.685076581074325*^9}, {3.685085000935109*^9, 
  3.685085050051937*^9}},
 CellID->660767926],

Cell[CellGroupData[{

Cell["\<\
Near the horizon there are two solutions,\
\>", "Text",
 CellChangeTimes->{{3.685075220034727*^9, 3.685075264383314*^9}, {
  3.685075350185371*^9, 3.685075360013562*^9}, {3.685075562762579*^9, 
  3.6850755646955957`*^9}, {3.685075699274602*^9, 3.685075733266921*^9}},
 CellID->205460912],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "u"}], ")"}], 
       RowBox[{"-", "p"}]], "eq\[Phi]"}], "/.", 
     RowBox[{"\[Delta]\[Phi]", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"u", "\[Function]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "u"}], ")"}], "^", "p"}]}], ")"}]}]}], "//", 
    "Expand"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "1", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Normal", "[", "%", "]"}], "\[Equal]", "0"}], ",", "p"}], 
  "]"}]}], "Input",
 InitializationCell->False,
 CellChangeTimes->{
  3.681368398127882*^9, {3.682141649875209*^9, 3.682141649876894*^9}, {
   3.685075400141177*^9, 3.685075452147379*^9}, {3.68507550183048*^9, 
   3.6850755029011183`*^9}, {3.685075541297083*^9, 3.685075573138361*^9}, {
   3.6850756100431433`*^9, 3.6850756371397343`*^9}, 3.6850757500309353`*^9},
 CellLabel->"In[67]:=",
 CellID->2112883632],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      SuperscriptBox["p", "2"]}], "+", 
     RowBox[{"4", " ", "\[ImaginaryI]", " ", "p", " ", "\[Lambda]"}]}], 
    RowBox[{"u", "-", "1"}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"u", "-", "1"}], "]"}], "0"],
    SeriesData[$CellContext`u, 1, {}, -1, 0, 1],
    Editable->False]}],
  SeriesData[$CellContext`u, 
   1, {(-4) $CellContext`p^2 + 
    Complex[0, 4] $CellContext`p $CellContext`\[Lambda]}, -1, 0, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.685075746835863*^9, 3.685075750517177*^9}},
 CellLabel->"Out[67]=",
 CellID->1803722070],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", "\[Rule]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Lambda]"}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.685075746835863*^9, 3.685075750519827*^9}},
 CellLabel->"Out[68]=",
 CellID->1277669438]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "One goes to a constant, and the other behaves as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Delta]\[Phi]", "(", "u", ")"}], "~", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "u"}], ")"}], 
     RowBox[{"i", " ", "\[Lambda]"}]]}], TraditionalForm]], "InlineMath"],
 "."
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.685075755843326*^9, 3.685075781182006*^9}, {
  3.6850759865063066`*^9, 3.685075986509141*^9}, {3.685084940447857*^9, 
  3.685084954196802*^9}},
 CellID->1101258113],

Cell[TextData[{
 "Including time dependence, this last solution behaves as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Delta]\[Phi]", "(", 
     RowBox[{"t", ",", "u"}], ")"}], "=", " ", 
    SuperscriptBox["e", 
     RowBox[{
      RowBox[{"-", "i"}], " ", "\[Lambda]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", "\[Pi]", " ", "t", " ", "T"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "u"}], ")"}], " ", "log"}]}], ")"}]}]]}], 
   TraditionalForm]], "InlineMath"],
 ", so as t increases, 1-u has to increase as well to keep a constant phase, \
meaning u has to decrease, so this solution corresponds to an outgoing wave. \
The other solution going to a constant must then correspond to an ingoing \
wave."
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.685075755843326*^9, 3.685075781182006*^9}, {
  3.6850759865063066`*^9, 3.685076151523653*^9}, {3.685084963030237*^9, 
  3.685084991347123*^9}},
 CellID->967003255],

Cell["\<\
Notice that the solution that we want, the ingoing one, is perfectly smooth, \
while the one we want to discard, the outgoing one, oscillates more and more \
rapidly as we approach the horizon. These properties will help us pick out \
the correct solution, as we will see in the next section.\
\>", "Text",
 CellChangeTimes->{{3.685078203975268*^9, 3.685078204380516*^9}, {
  3.68507832703909*^9, 3.685078403711824*^9}},
 CellID->1933901115],

Cell[CellGroupData[{

Cell["\<\
The boundary is more straightforward, again there are two solutions, now \
corresponding to a normalizable and a non-normalizable mode:\
\>", "Text",
 CellChangeTimes->{{3.685076900603076*^9, 3.6850769455620403`*^9}},
 CellID->489084805],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", "u", ")"}], 
       RowBox[{"-", "p"}]], "eq\[Phi]"}], "/.", 
     RowBox[{"\[Delta]\[Phi]", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"u", "\[Function]", 
        RowBox[{"u", "^", "p"}]}], ")"}]}]}], "//", "Expand"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Normal", "[", "%", "]"}], "\[Equal]", "0"}], ",", "p"}], 
  "]"}]}], "Input",
 InitializationCell->False,
 CellChangeTimes->{
  3.681368398127882*^9, {3.682141649875209*^9, 3.682141649876894*^9}, {
   3.685075400141177*^9, 3.685075452147379*^9}, {3.68507550183048*^9, 
   3.6850755029011183`*^9}, {3.685075541297083*^9, 3.685075573138361*^9}, {
   3.6850756100431433`*^9, 3.6850756371397343`*^9}, 3.6850757500309353`*^9, {
   3.685076948756304*^9, 3.6850769589129353`*^9}},
 CellLabel->"In[71]:=",
 CellID->569349032],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", "p"}], "+", 
     SuperscriptBox["p", "2"]}], "u"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "u", "]"}], "0"],
    SeriesData[$CellContext`u, 0, {}, -1, 0, 1],
    Editable->False]}],
  SeriesData[$CellContext`u, 0, {(-4) $CellContext`p + $CellContext`p^2}, -1, 
   0, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.685075746835863*^9, 3.685075750517177*^9}, {
  3.685076954955833*^9, 3.68507695925511*^9}},
 CellLabel->"Out[71]=",
 CellID->1862883090],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", "\[Rule]", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.685075746835863*^9, 3.685075750517177*^9}, {
  3.685076954955833*^9, 3.685076959257299*^9}},
 CellLabel->"Out[72]=",
 CellID->1312004017]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "The solution going to a constant is the non-normalizable mode, while the \
one going like  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Delta]\[Phi]", "(", "u", ")"}], "~", 
    SuperscriptBox["u", "4"]}], TraditionalForm]], "InlineMath"],
 " is the normalizable mode."
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.685077122217998*^9, 3.685077163541048*^9}, {
  3.685084881284634*^9, 3.685084909047649*^9}},
 CellID->489426323],

Cell[TextData[{
 "This boundary condition can be easily dealt with by rescaling the \
fluctuation ",
 Cell[BoxData[
  FormBox["\[Delta]\[Phi]", TraditionalForm]], "InlineMath"],
 " with a power of the radial variable in such a way that the \
non-normalizable mode becomes divergent, while the normalizable one remains \
finite. In this case we could for example rescale ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Delta]\[Phi]", "(", "u", ")"}], " ", "=", " ", 
    RowBox[{
     SuperscriptBox["u", "4"], 
     RowBox[{"\[Delta]\[Psi]", "(", "u", ")"}]}]}], TraditionalForm]], 
  "InlineMath"],
 ", so that the normalizable mode goes to a constant while the \
non-normalizable one diverges with a fourth power of u. "
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.685077240198839*^9, 3.6850772799224157`*^9}, {
   3.685077386078554*^9, 3.6850773916707373`*^9}, {3.685077529462117*^9, 
   3.685077571872632*^9}, 3.685084871718504*^9, {3.685084914310595*^9, 
   3.685084931699151*^9}},
 CellID->1754192859],

Cell["\<\
We will see in the next section how this helps.\
\>", "Text",
 CellChangeTimes->{{3.685077240198839*^9, 3.6850772799224157`*^9}, {
  3.685077386078554*^9, 3.6850773916707373`*^9}, {3.685077529462117*^9, 
  3.685077571868886*^9}},
 CellID->592404874],

Cell[CellGroupData[{

Cell["Asymptotically flat case", "Subsection",
 CellChangeTimes->{{3.6850776571818132`*^9, 3.685077659919448*^9}, {
  3.6850829212397842`*^9, 3.685082921900975*^9}},
 CellID->1478924877],

Cell["\<\
Unfortunately in the asymptotically flat case, the boundary is no longer a \
regular singular point, as it is in the asymptotically AdS case, but also in \
the asymptotically Lifshitz case, but an actual singular point. As a \
consequence the method used in this package does not apply to this case.\
\>", "Text",
 CellChangeTimes->{{3.685082923152706*^9, 3.6850830434174347`*^9}},
 CellID->664198110]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Discretization: Pseudospectral Methods\
\>", "Section",
 CellChangeTimes->{{3.6846647494851933`*^9, 3.6846647574827423`*^9}, {
  3.6850914428747787`*^9, 3.6850914454501343`*^9}},
 CellID->1481255430],

Cell["\<\
The pseudospectral method solves a (differential) equation by replacing a \
continuous variable, the radial one in our application, by a discrete set of \
points, also called collocation points. The collection of these points is \
usually called the grid.\
\>", "Text",
 CellChangeTimes->{{3.6850915338717623`*^9, 3.685091638101713*^9}},
 CellID->1713154644],

Cell["\<\
A function can then be represented as the values the function takes on the \
gridpoints. An equivalent and useful way of looking at this set of numbers \
representing a particular function is as coefficients of the so called \
cardinal functions.\
\>", "Text",
 CellChangeTimes->{{3.685083260931596*^9, 3.6850833700999603`*^9}, {
  3.68508351395142*^9, 3.685083514146443*^9}},
 CellID->780243156],

Cell[TextData[{
 "For a grid ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["x", "i"], "|", " ", "i"}], " ", "=", " ", "0"}], ",", "...",
      ",", " ", "N"}], "}"}], TraditionalForm]], "InlineMath"],
 " the corresponding cardinal functions are polynomials of order (at most) \
N+1, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["C", "j"], "|", " ", "j"}], " ", "=", "0"}], ",", " ", "...",
      ",", " ", "N"}], "}"}], TraditionalForm]], "InlineMath"],
 " that satisfy ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["C", "j"], "(", 
     SubscriptBox["x", "i"], ")"}], "=", 
    SubscriptBox["\[Delta]", "ij"]}], TraditionalForm]], "InlineMath"],
 ". "
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.685083375569042*^9, 3.6850835158055973`*^9}},
 CellID->225188045],

Cell[TextData[{
 "Using the cardinal functions one can construct the matrix ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["D", "ij"], 
    RowBox[{"(", "1", ")"}]], TraditionalForm]], "InlineMath"],
 " that represents the first derivative as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["D", "ij"], 
     RowBox[{"(", "1", ")"}]], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["C", "i"], "'"}], 
     RowBox[{"(", 
      SubscriptBox["x", "j"], ")"}]}]}], TraditionalForm]], "InlineMath"],
 ", and similarly for higher derivatives."
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.685083581025065*^9, 3.685083604095838*^9}, {
  3.685083644627098*^9, 3.685083765528224*^9}, {3.685083845426908*^9, 
  3.6850839190345716`*^9}, {3.685085581410685*^9, 3.685085587734118*^9}},
 CellID->667655692],

Cell["\<\
Solving the resulting linear equation will give a function which solves the \
original equation exactly at the collocation points. The hope is that as the \
number of gridpoints is increased, it will also solve the equation at other \
points.\
\>", "Text",
 CellChangeTimes->{{3.685091678529213*^9, 3.6850917669747066`*^9}},
 CellID->2034219487],

Cell["\<\
For this to work, the choice of collocation points is crucial. The choice \
which tends to work best and is therefore most often used is the Chebyshev \
grid:\
\>", "Text",
 CellChangeTimes->{{3.685091780635106*^9, 3.685091801123741*^9}, {
  3.685092620333481*^9, 3.685092640890882*^9}, {3.685092677718133*^9, 
  3.6850926784442883`*^9}},
 CellID->1991738820],

Cell[TextData[{
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "i"], "=", 
    RowBox[{"cos", "(", 
     RowBox[{
      FractionBox["i", "N"], "\[Pi]"}], ")"}]}], TraditionalForm]], 
  "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"i", "=", " ", "0"}], ",", "...", ",", " ", "N"}], 
   TraditionalForm]], "InlineMath"]
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.685084144460177*^9, 3.6850842156776123`*^9}, {
  3.68509268101305*^9, 3.685092709895371*^9}, {3.685092853982362*^9, 
  3.6850928562925797`*^9}},
 CellID->1421600843],

Cell[TextData[{
 "For this grid it has been proven that convergence is exponential in ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]], "InlineMath"],
 ". As given these points lie in the interval [-1,1], but this can be \
rescaled without problems. (In fact in the code it defaults to the interval \
[0,1], but the horizon can be changed using the option Horizon.)"
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.685092685484044*^9, 3.6850927695671387`*^9}, {
  3.685092812364613*^9, 3.685092849781969*^9}},
 CellID->616759975],

Cell[TextData[{
 "For this grid, the cardinal functions are linear combinations of Chebyshev \
polynomials ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", "n"], "(", "x", ")"}], TraditionalForm]], 
  "InlineMath"],
 ":"
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.685092911019805*^9, 3.6850929535833197`*^9}, {
  3.6850930042778273`*^9, 3.685093004802834*^9}},
 CellID->988872173],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["C", "j"], "(", "x", ")"}], "=", 
    RowBox[{
     FractionBox["2", 
      RowBox[{"N", " ", 
       SubscriptBox["p", "j"]}]], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"m", "=", "0"}], "N"], 
      RowBox[{
       FractionBox["1", 
        SubscriptBox["p", "m"]], 
       RowBox[{
        SubscriptBox["T", "m"], "(", 
        SubscriptBox["x", "j"], ")"}], 
       RowBox[{
        SubscriptBox["T", "m"], "(", "x", ")"}]}]}]}]}], TraditionalForm]], 
  "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "0"], "=", 
    RowBox[{
     SubscriptBox["p", "N"], "=", "0"}]}], TraditionalForm]], "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "j"], "=", "1"}], TraditionalForm]], "InlineMath"]
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.6850930380194798`*^9, 3.685093166975689*^9}},
 CellID->1630184905],

Cell[CellGroupData[{

Cell[TextData[{
 "Below we show what these cardinal functions look like for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", "=", "6"}], TraditionalForm]], "InlineMath"],
 ", dashed lines indicate the gridpoints, where all but one of the functions \
vanish, and the remaining one equals 1."
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.6850937251783247`*^9, 3.6850937622600937`*^9}, {
  3.685094054416624*^9, 3.685094054489419*^9}, {3.685094208123746*^9, 
  3.685094221771317*^9}},
 CellID->1087114798],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"\[Pi]", "/", "n"}], " ", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "n"}], "]"}]}], "]"}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "[", "i_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"i", "\[Equal]", "0"}], "||", 
     RowBox[{"i", "\[Equal]", "n"}]}], ",", "2", ",", "1"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "[", 
   RowBox[{"j_Integer", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["2", 
    RowBox[{"n", "  ", 
     RowBox[{"p", "[", "j", "]"}]}]], 
   RowBox[{"(", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"m", "=", "0"}], "n"], 
     RowBox[{
      FractionBox["1", 
       RowBox[{"p", "[", "m", "]"}]], 
      RowBox[{"ChebyshevT", "[", 
       RowBox[{"m", ",", " ", 
        RowBox[{"x", "\[LeftDoubleBracket]", 
         RowBox[{"j", "+", "1"}], "\[RightDoubleBracket]"}]}], "]"}], " ", 
      RowBox[{"ChebyshevT", "[", 
       RowBox[{"m", ",", " ", "y"}], "]"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"c", "[", 
       RowBox[{"i", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "//", "Evaluate"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", "Dashed", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"#", ",", "2"}], "}"}]}], "}"}], "]"}], "&"}], "/@", 
       "x"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6850934991255817`*^9, 3.685093512416567*^9}, {
  3.6850935506997623`*^9, 3.685093555178561*^9}, {3.685093615803988*^9, 
  3.685093615896564*^9}, {3.685093647376627*^9, 3.685093647727585*^9}, {
  3.685093683421859*^9, 3.685093685358924*^9}, {3.685093773991596*^9, 
  3.685093777386395*^9}, {3.685093815193954*^9, 3.685094006650169*^9}, {
  3.6850940366696243`*^9, 3.685094042528327*^9}},
 CellLabel->"In[217]:=",
 CellID->1104739231],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
zOmjmHc8Wn/neAKQdkhpevWNIvXoFr5H+QmwK1W4u7J6FKXzopM26iXAyhe2
37qvR1FAibuq0j4eTHvXCA9GjmJg0obLixfiIX95FexDRzF13QMR6pF4uHtq
6VnY0//Faxhfs/wG+inMrV33RnFWMYfzpM8bIPd3HbX4j+DFobXdT+PAbW2G
s8P0CBZ1WkfsvBILd2PM2S0YI6i+IT6B43gsWB3ki9QdJbjg5VrcFgvaZo9z
pXpG8Gm6b0RUWwxs+6Q3PVA5gqpjfCJMjRj4bPXDSiduBDuaj0bcFo8GZtkJ
PXGdEWx+YH9uvjgSLL2axDvTh3HI8dWRkVuhYNSToNKfMowdx6LY4k6Egra8
vfFY/DB279f5eYgnFBTGeILmI4ZRUaviEM3uBazXNPjB/WQY7SOVvieyhUD2
5o6yMybDRH10t+lLPYe/8b3mhRuG0XDrm+UPJ59CZAk1Os5mCBczuDXsfO5D
0aDUpg9iA6gexfaLx9AX9/Coql2M/46GDWbHsgWiMVfa32ZktBujo3iPex1M
wV0tFoX7e7rRgVy5blYrBYOcldY/bOzGvL0cKvrWKXi9ciKVo7Abn4ikOQ1H
p+A2c91hmZBunNLl1jzN+hbdX/IaOx/rxtDz9DFa41vU/B2nvim4C3veKWZU
XU7DvPiHEYbeXaiquzlmzcM0FFPXG4137sJ5rwed+4PT8O/LVa9DVl2YdXC6
RK0kDbP3W5GNjnbho/P4zUP4HfJf3Xs4abgTv/KyBPJ3vcPBqo+iR450Yugt
xXNDx9/j4wt//jsm04mz9R2nf597j9uGVW8ri3Xi3dDXlL/X3qP+ctNHFe5O
5HQqkat6/h5L5ZlqZ2gdKON4vdW89z3xzpK+bhzVgcQrSjXmQQZaPUp57/qz
HVOLt+kER2biCvtkw+OpdnT48vLeZFomxkbIz3uMtKPqFS0z+YJMbM0pU/Zp
bMftDDkF195MPE0b/PY8rR0X79xPntn5AcUvCDPjjNqxOZP31tXED0iViZTH
/DaMvs0aVh2WhdIeqUxGZhu+3PtMWCc5C+825WXwJrUhK+Pa7Y8fs/D3/U6x
G8/bcGkf/5RYcxZyftnKx2XRht5qwRtebcxGuVOxP0w3tOH2bM7MnMfZ+DAs
I8d3pRVzsxwj1AOzsWi06E72j1aMMuzpKH6Vjaf9vo+yDrQS341HObVys9Ho
m3B7em4rNpdlj45Ss9HNMOHzT7NWZDNP4d9wJgdL03LsRc8T9h+BibEGObju
N8poaxB2NkuljeY5GBI79PaNXCtG73A5HeCYg4mDuyP/Y2vFYM9vr38m5GD1
7bcPw7JbUH9Euu/pbA5uLP58iJzSgqLkszqrf3JQf1PVNDW6BeUPmuhlspKw
J5t6XcmnBQdYefWbOEk49UPSaOhSC8a5/hbTEibhFo/3R2RZWzD6BV/O8nES
+uVL1fL8akb5MpHcG0DCJeY7kx9TzchC+XC9TI2EI1fTHhd0N2Ml59EqTS0S
5p5KKVcjNSM0SRTGG5JQ0lXsokRaM1bf4A4PNiZhbG4SlSOuGZUjo6dszUjo
vSdxfcOzZmzj2s7xz4KEBmxv9C5dJbjQ7pjVHRJWnxQeUjJsxg7HFLt2OxIq
O72+L6zTjLURIwtH7EkoRo+JGD7SjM0BH0brHUkYtUtIslKmGYWs7VVZnEnI
aRz9JU2sGU/k5/TseUTCH7VRvXe4mzHXPfXDcXcS3mQVtNVb14xV5NXvBz1J
mP9A+q/lQhO6bN55mP8Jkb/h3lNT35pQc8LtvyxfEu4V2t3A4taE6pwFt0Wf
k5AncNds1Y0m3P2l6GxkEAl/L+3ke27QhPXmEXJLwSSs7dtuIiDdhIX8lxjh
oSQk6Qo97hVowlDVvZ9qX5Iw+uvWhATWJhx/H2c7HUbCW4n81H09jdjU3RvD
HklC/S1862cqG7HZ+de6vwQf896y/zOpEf24LXUHo0go+mOz3qO4RnyZNHr3
0ysSbrDmvq/i34gHBo2vO0eTcL59U8Rax0YsEEuX2R9Dwl71jV9qrzaivEt1
aSPB5fkbeoN1GjElIX+nVSwJM/au/2dwtBE/8gQAleCwaHbRbXsaceSfmZjx
axK6bmA73c/diLzGZuVFBFu5rr2RvNSA31pKd3DFkVB7kjXgJq0BA0fapM8R
LH+Z5YNMawPupIxPehG8vWGlca6kAVvDr5slE7xG5d9c/vsGLBYqePiJ4Mns
v/yPIxtwjMPi6GeC23ctHT31pAHtB8fj3hJMDv1tym7XgJ1/ZpJ9CX7L+sv9
m3ED9j7frnGR4CCHxcTQ/xqwMX2XDx/BjqM/KgzlGvC2eoVROaH38sV52nbh
BmQ/3lViQfB/VbMbhjga0Fr7eB6TyFfmyIxM6o967BXpV7Il+Iasp2dhfz2e
G96oVk/UK0Fyc2tDTT0yb8zObyO4WyRBfORjPXbk9mgaEPXm3XrQ+efreizn
kFZ1IfqhsxnrOP3q8eGUUUcg0S9fjnPCu+zrMfHg+LpAop+/ft0tO/NfPWoF
l0nohZNQbnaF77JsPQq3PuLhI86DDSPkhv22etzW6uZfSZyfvu7sjTFT35D/
kCD/NHG+BFtUzLM6v6FpbPFua+L8natrJJWVfsPe3kpSTSDR30Km4UTEN/R2
mj9z8RkJlz96pK94fMNcBdR2f0pCxQzuv7y3v6HxK9XKMB8SpsfKJh4/Saw/
6L/Fh5iH4bCv8+f2fsMH4WFDV4h52f5cT916yzf0W+0RlnAjYbDb3YkgKgU7
13i2uzgR8/pg5URSEwUtWEp02Ih5ZLENeZFXSMFNPb/3etwnocPlbIWBYAoq
yKxZr2hLQuOTTI+DRyjY/LDhyBdi/sMUPVpOi1JQ8/5oatoVEn47wC1uzElB
X0sJO29TEqqIyNZ5DdTh8ztKqysXSLhn1Y6v1a8Oh2s0+DZpEP399e86zb4O
Z+92iZsT91PUTHDBkmkdBnV+8ItTIeH6oawrew7Wocr298cGjpCQWTr9zrGr
lnhPNms+lCTmu9B9yb+sFntMaI37xEho8ZFL901mLfZe0Eqm7CRhW9KB+SrP
Wmx48kOuhZ+EBd52J7ZK1aL5oMD8HHG/+vw33VzoUoNO55Ub1n3MwXLNqXMK
12pwVu82aX9aDrLoTjZm69agcIJupszrHHxsOF6fIlaD6i9ezpF9c9DpBrU2
uL4aZwfjN2w1ysFb/v2llqLVqL0kKPt5LhvTgvqgj7MaU93/zLmPZeNY6Pev
RotVqHKgZq1YVzZaxvSQdShVODZYvudPcTaaZnQUKDpW4e5rpMFRn2w8W99A
2lBbifzlFfykTdkY2Fx/0De3Ermry+R3/8vC2vZv2StxlbhiuPjHdjoL1fvr
Pvy4X4kuG0YSIhqyUIVZld6/oxJZV+QEJIKyUI7na+LHexXIU6rmen5NFgpc
zA412VqO2x653RFsy8RcyedF6mvLkUIXt9IszUT9PzfHDs2U4aGorG7TrEwM
jN99jLOmDFN3/7bZ/Yx4DzAiBoucylDW4NuhI0qZSHN3kxXuLMUn6yO5n73K
wLvnXkaX7EPsjj/D2HLyPaYvaE9FsiK+NX6465bkexyJWad6t+cr2vefO5a4
+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
a60XV4if/wddM+tv
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
fW9AI8uj1RcJfqMoSmv81oB6IYPmk4Q/nTJv5AdzGvCt4nltF4LFpXZ6/4pr
QIpZ1jUyEY9jolgrFNSA+owPM8sJDhQ4Lr3JowGNL1qV7yfiWbrY577bqgFL
N3Q1nybiPTvrXn5UvwET582k7V6TQY27sNpGtQErq5YnmxL5cRsNdfVY24BW
fOY224j8pfTLFAXyNqCXaMIRNpHv3s7MFTET9egr7GKTQOhhDfWg3af2ekxe
cihGk9DL8dqm7PKyetzW0P27iNATuYhtwYyoR/Xe06J+hN7+5vimLfjWY9yF
2a9lL8iwJ13kj/jFeqI/NPpOPCdDWqxq4v4D9bii+M5W3qdkGAgvnTy+tR5X
yhQKTBD6Xx9iauC8qh7pK6aY+IgMz+64M5/S6zBvfvVHhQdEfV5f0ElqriPm
JP4Hn/3JwHM59Hl+UR2Ka4sd3+1LBk+bTI2+Z3VYvO1S0egtMpw5wPbdqVmH
n+4w/I2Jeg3f40s9LFuHdmVpH7a7kaF+h4j8GaE6vLIvI+uXKxkOyqjW+vfV
YvGttUbGDmTYsnhlNS2oFtcN0K6MnCTyP/vPheFRixLpujpSpmSI4jwrnLeq
xdMmF9rUiH4j2P/JdsvOWmTW7XXYrEcGdhnr/Y2OGqydq02dJfrX1qJ784/L
a1Bf/1zMTaK/OeQImyRk1OANtWCj70T/a0naMVnlV4PMq3e/X5QhQ2HAFR0p
pRqc2Fee7y1Ehgf6LErRrW+YdiP6rktfOZANJ45rnPuG6MEOj+0sBx6T8aZM
k2/obRqnXEwrh7sWYw0pct+Q+82qr7C6HLxc6TXPGqpx4V+AXd6ncrjw+HuZ
o2w1JoQ76bz1LofUp73QK1SN+z7bJ9z3KIfhsJ5Sy5kq3Cvp9MToYjk4xnSV
HKurwkqfEeEYq3KwSm8r3HOjCvOa7tE1ifPmv4bG7OU1lRjn1Xfl6p8yeEJp
2BmYW4lyax7Z/Josg5rW+syF+Eos7FP7dZ5ZBgbfaz9OXatEFUGxPSu6yuAg
uyrt+4ZK1LyostMsnzgPxUoTc65WIEPRpnb4YhlImmeGnZUiY3e9fNvlIIRc
xZBig6VkjOz9TM65hnBi7vzwLk45arWkONNsEJ683rxP6Fs57tuhPJKqjrAw
GvGj2KscY8Z2dSX0lgLj3h1V6fYyVHnYd6F+Wym4H38R/XUbovSij8mlDyWQ
Nm08EbkEcczf00orrAQGY5bpuneVokTi4LlhrxKwHPYekQkuxX6+ownUwyUA
t+00/Ue/IksvSlCo9wuIpWxv1Xtfgk9KedYv8H2B3F9VojXyxTgnb69trlsE
oenJ5INzRWgzFyRhL1sEl+z8buY3FqHgrGq3HjFPyVfv60n2KkJh1d0+kVgI
UZEZqfdqCjFTKs3iok4h+Gi8OLD78me8+63MsE/1M+h52lx6TcpDyos++fjZ
PHjXQ382FpiJ1FAb0sjGbOi+u+ZNwu5MfCLDkTHgZIGIzNHsk4OfcL4wovt+
chZ4OaTRiuATnhnJlj8pmAVH6G5ST+Yz8NaSqaf/UT/BKJuTqOzxAZVmDYuG
zmSAMu886ZL1W6zqNtkkqJsKtiel83rORWD6+ieiMjNRUCR0p4188yXUtay6
IzoRhXsGl8jcP5MFCm4n39YQ96ct3C9z2uQiWOWtYWD8GNEopavR9AwZfr3y
vU/dVY3ch5muVUTdtutZh+cbVWP0hQeL+4k+YPLJO/SpYzWO7tixa1smMScc
TGkWf1GNjwv9I5Yuq4Bo8ZNb73GqsaZxq3VhVgVUjx34mPnhGx79fXN0s0AV
aE8vnMsWr0V2t/H9aOkqCGC7rP2sVItRXzetF1WvgvXBN8Y/HqxFRkDtsb82
VXBGyOy6i1stBglvzGrPrYLNp3Vy+ctrsVqu8maIXTU8/q2szHGrQwMT8aUz
+d+g6sn+6vvZ9RjquPznXO032PZ79n0fuR47b/L8WPj+DTIP7Hu8ra0e3V6z
iwX5a2B68Xf/4zliPafOU9qyBkpbYnUuHWrAzhcPBg//qoGwP59H0xob0K19
ujxcsw4ejoeUWXU0Iok5nvXKuA5Gr52+dnSkEf8uDCbE29UBZYQruGmWOLe2
Um+nBtXB96BNT0LXNCHp1qddxe11UHaGT/6yeRP+Xe+aNOBVDzE3X+msbGjC
5/Yd/mqfG+Df+c2jGunNGDShA4yGBpjJdVO+WNiMvreT/8UNNoCLOmXp/epm
dH95xUdApBF40xt5rAeb0fTb0ht9zo1QNB16zmolBUV2qp1/Kt4EtUHmNpNA
Qf6SSAU9pSYoUY3llztCwQXDP0OzB5rgwdi3R3r/UZDtVO1w7mIT1DzaR7M4
Q8GmKBsr7bIm6H059KPiKgVDFx6bjF5phvdLzLOz4ygYFMJe8fpBM5hNsgoY
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
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1: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
Fv7///eBiYnpWNn069L/A+bM5ko=
     "]]}, 
   {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1: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
m54B/P/3yUFfX+jA/75P/n9UtwJU
     "]]}, 
   {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1: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
pIv68bzBlqG/b1mg+SxLQDGvH0sujh57k8ACxX6fA2pZ/ahf1bVKOpkF28NE
r5x414+XeOQCd31gAfOXLfVKWD8yVh6tsitkQWQJPfqtQz96lJ1usGlkwWWP
GK9D9v3Y+fJej9UPFkgdPG3XZNWPj84V/TJqZUFRauEBLlPCbpditNTFgt7w
55Vu0I8R5ISe8BEWvD+l9ZFXvR93xWd58Y+zwHndr9A0pX6c4dLTfDTJgtXe
ly379vUjz503Ow9Ms2Cvg8Kc/haifh6JgtoFQk+JkQ46bz/WrnYJqV1iAbkv
Bn3W9ePWCp9YyjKhVzqXoNNKH17b5ZipwjYN0iKuA4kzfejZG7VBaNU0UCK7
PraP9mFTRV4Ai+B+nwwd3aY+/N0pPOG/Zhpc54U2elb1ofXXsMaT7NPAfuNR
ZyalD/3Vr/asXjsN+8xMXLa/70NBn1JnSw7CX22Jxtm3fZgLpKW/BJ/S3sv1
LLQP6x1isqM5CX+yS3Ez9/swQLviUy4X4S/pioOUSx/yenvNq6ybhqitdcqX
r/ahiqalWzbBUsEqqyIs+jB1t+IeCe5pKF6TUFtzpg9Thpv4XhJ86t666H/H
+lDXZpvyDMH9TNcryof7MPHBWITReiKeXbeco3wfCu8XUyQRzN55bClBsg/v
XM/mZRAcdTqzonVbHyqp+skobCDiVWwN3cDXh+So0CAngovUfS9pr+3Dp14N
BxMJNsqa3Oux1It+vRqiDQT3S5rOfmL1onJUt9kcwa5vSkuHhntx2Tm/YxMP
EW+TVKBwZy+eF21L3Utw1NNQ09MNvSircaZKmWCp5SURv/JeZFdSPaRBcJGL
3VQRuRdNTdKX1Ak2HK0rmM7oxSpK5WZFgvsuHXq8J7kXH1z6/ESUYNemhFOX
XvfiRUbU6XX/i6fHvS0suBcvsBLvjhP5RJW40ase9yItad1y2f/qO9iTteLR
i1lcawbD/ldf6vEHB28S+f6gSV8i2HBX1onrV3px7mZK+06Ce8OFN8eb96Lr
zxZGG6GXy7rHvc1Gvai7M/VG4P/09J5K49bpRZ8LjmbK/9NzzvSOlmovfv/k
ltVO9KOoT2rDR7FefF5elM9F8AONVZ9ithJ6PNtzKZbor+brDqMA3l7MrYx1
3U/wF+PAl1eXetC/4fnSQWJ/+GbayptO9+D+7MVbGcT+0d1w+LvOSA8qqdlc
FiO4qmKSX7SpBy9Q5TPmif3oL1aes7G6B79yfthsRrC+91uTvyU9+MFIZymL
2L/1qkZRXWk9WLlP6NxZYn83f8gQjnrUg7vFOW7qEvMRxfWs6Il7Dy5Y75Eb
/MsCM3srCzenHpQaMUyWW2FB5y6+2DMXelDMXpyXtMiCgVAXkfUKPRhjvf3c
1E/ivGKeLFvcQ/CDEK0+FgvsDMRsx3b0YGqmz50KBgvG2H8kVXD14MnxVdWO
xLwz3ZX2+vR34w5BhRCRfhZkNW+ovtnajUGwrJbRwwIXBfo1y9pu/JuhfeYA
cX7MTUSmqxd248Kocst64nz5Y/lb9tfLbrSczK+Uo7GAS7dIyQG6sXxD1nOR
HBZQE8JazJW7cct9Be3RTOK8XHG4e2J/Nz68mpVD+siCjQXbCyWEupHLiL/7
ZwoLBKUfHu5jdiG3UHjTv1csEOfT0jaJ68Ig4/0TrfdYECw/4OkQ3oUqa8sS
/e6wYOGMb46PfxfKGcmZ7HFhQW1oucQn1y68QT5XonmNBbc3n+TkONGFbFaU
GxWmLKgUNK4tYHViluXy3SNyLJA/NMteP9yJ2e/bNvDtY0GMWYTmcEcnNjn+
4GkWZ8Gt6NYMvvJO4r0u6+ZBYRZs3WYRej26E0PLhB6cWcMCh51257cf7cRT
EbUW3C1MaNZc+1JBpRN1Q7v2cDQw4cjld1Un9nciQ21L61w1EzbHj6neFuhE
0mtxtg8UJlBEnLbXjXdg4IFFy/tJTOCVuNvvFdaBrusPyeXcZMJnaX+HwaF2
vOgwjgV/GLD7uzV5f0c7RmxGDZ05BrxwV+O6U9+OMj9GN32bYoB9+UQKJ7kd
60+docf3MGDrZaMBmeB2PN9jwt9QyoCHofzm7qrtaJu2PonbmwF6C2+PbQhq
w3vLJXflieeHvopsERWVVjw2/+gff/UkPDi3qKsq04oC7D3qKaWTsHVA67q6
WCs2t8bKHsibhDPLDdlHeFtRQuDueenESfiiyNQ+MdKC1CI239L7k5AQL21v
HtWCarOeH+xkJ8H2XlKa53wz7tJLXNcdOAF0mUhFzP+BJW5DHdvkx2GTV5qK
3KrvmDgYE5swRQcZFZZMymwt/mwXb3kSNQiPdRmNZI8qpEhY/7n5tgcETDJC
Lgh9xQktXcNqsVb4PF+xsVqiCJtup/XUFtZDShc9aPxJBtpe0Bf+y/oClmd3
5HZdicDVqr2iBXIpMDX7S+1OeTiuKHAm6jxOhgdRDcgrGY58b1KkZdqT4G2X
L+3oSCieqcsx4n+cCLm0porT34NR3opywK0oHjLnboiPdT7BChtSlPHxSPBp
lmre/k0T04PT73BQjYDMfb/l651wYITzvbfOTcQEWYEfmWIRYH/+wzGfc0n4
9Exm49uGCFBmP5YhPpOEJlFDtLv7ouDYBcf5OdkUnBY1/CrdEw11wQf2FMe/
xz1qOzPDdOOgk+uzRYrjR6zJsdLNDkgGSZOXDfj9M2pUyHzb258MeUbQaiac
g1mti0fjVFJgpifgUYZ1DkYthsPzoRTQFHrp8IqZg3ZQrW6v+R5kdew3mXLm
4T+qvILwzzT4MlCUfkOmAJUHV+16ZJ4Jevpb2r10i1GuyOynfFomXFQ/Nhfo
XYx7wj6V9y9mgm3jjT8WRcW4nvRROcEoC1IfKUUYHqDg8hnz7n/MLOALGfC8
KliCPVmZ+1DhM/x0P/DTpaMU450vl2sW5EL0rsIxfeEyfHtpXUZkXy4IdFl2
bD5YhtF6ua8YnHkQ5useUGpYhiEi3I6x5nlwRkxGkOxdhj6NeZtWFvPAvbXo
mvZwGdrI81hRNApgrdzEtcT3X1F8unhR/SsZwly6rL2FyvFBnc6TOQYZbG4Z
CZ8+UI6t6TTeDOEiuJYRSF06Xo6B9l3ioi5FsLSYvGHkTjlOdy4ZcYoUg4Nn
Rs36pnIsrVBL/PGQAqGk46fCHlfg1qQymaA0CqwYcT4VeV2Brj4nC463UODS
R5VXgRkVKHn4Qi1ZpgSOuQUfnWmvwBdZHvPxXSWwbZdn7EaZSrz4pkD/hhqC
Np/oKl9aJeZ6QIukPcLKd6nHdb2VyHu+yqovBOGo4XT73M9KLONru208hrBt
/vuqNqEq3KJz//Rbgy8ge2Xl0rhNFd4vjLnnu/QFKL0usidYVXgyqaPulPlX
4LtftXGOWY3TfhlXK5y+giXnE0mPlWqMvvb43+HHX6HwStzbjvU1OCYrq7Av
4ytc0O6kKEnVoH+hT8Qa9m/wpGitjKFVDVbX7bUozPwGha1bjq+pqkHnrOVZ
uYpvMHE2UcfqRw1uDf/+IqXzG0jFVg9H99XgNfP7pWFry2G13yvJlN81yDVU
L+pkUQ7zMUbyYnuoeGLhzpgoZwUocrbK5jygIrNT/1H0jgpQ4F81PPmUilEl
u7dtVKwA6QzOV6tDqTjiW2OwfKkCXv8R5KEmU/Epz87M1s8VkIAwXUalotz0
zxNG1RUgxUrTmfxBxdamyv5vPRUw/WR7zUw3FfdEO/Nnc1WCmoz507dMKlaK
ld95frkS5KuXIiz4aHhz7Wve1bcrYd63Qtt9Kw0Fx5zeewRUwoPcq5YuIjS8
+kmowz63EuSWNBfY5GnIoeqoocVdBYznbxODjWh4zIh/za+8KjCW/7PW0ZeG
wTbrfi7WVIE6p+Nrbn8att9h6/vbUwUVch8cg4Jo6BDHLOLiqAblW3oTGtHE
ehbVdcf5akhdNBDX/UjDtjVfrUUdqmHdht0+f7NoKLKVfGqPVzVcPltj/jaP
hjla76Xl31VDXoN1rG8p4T/08aDOfDUENtmYLtXTUPSdZ6Medw0IHzzq+r2J
iFfkUmq0qwbYbHYavmil4fKgVYzZ8RqoG440/9RD5P/7vP+lizXA1wZvNw8Q
+aw/ddfmZg0wyleh5TDhT0nD2DGKWP/qTXnsBOFP76CWc3oNFHKsIYczaJh7
SVruTmkN2HuSMp2maXjcbyu390gNRNmbVNX9ouHL1xsXHi/VAD3t3tK5BSLf
Txwj/rxUSHv0+1zpEuGvda4sTIUKK+4NcfCPqG9iMvOVPhUWfhclnl9Vi8t/
B2PfXqYC7zfRmbNravHY5s7nJFcqbHhxO0phbS0G7/1+791TKngsH3z9i6MW
2w5X//chhgoTGdNr4rhqUeQMmmZlUMFmn0G/NHct5nh8UihqpcIM+4ctMxsI
/y+Sd+MEFZzatHxkeGvxOOkNT/lfKgifjHxisLEWX+aF/anmp0GKWPT+03y1
2F4TMF63hwYuv/S8D22qRdFen7YmdRpkCxQEsPPXosOMe0XbKRq4RqwyzSc4
h+NWTrctDSrUzCYNNxPxtl0lDdylQZ7X/Plqgo8dsHw5EkiDk89kE6W2EPXo
mDycjKOB/46LbU4Et5sZOE5/poHtu3G2aIJFb2hf+FVJgzTJC/veE+zgo3Zi
qZMGA7LKFm8Izo2QV/7HpIF8nzDpNsErqXvF2dfUgkr/57UHCT5esmvTOqFa
qDQrDm8l4r/8LvCPZ38tVIysmFoR3E7fwOCHWhggmZjVEfmLLq3pEjpXC3rr
0xJF/lcf75/qHf/Vgu2GOe0LRP05YjP5ovdrwYOlqeNO6LOsMp6852UtnL0Q
l+FJ6HfcoD9sfxLhT1sj5Aqh70urNh/5glqgzhjNKvDU4tMpDRiprQVnpnJi
9fpa9LqXuPJmsBbG5w10tYh+3eXgopxdqIXmh8Jj0UQ/b4Y7eXLy1kH3osbb
JqLfV0V+qJaI18FA9/VbDPZavPxJ9berWh3wB15zHl9di6eq1tzutauDBH37
Q35/if1pcl0xwrMO9B5d2i65TMMjA/XTJ0Pq4G2u0PV3izSU+/PaKa+4DuJa
sryM5mjIe0D+vxf89UAvbtI6MEbMPyVSUluqHuw3loh0E/PxV+/P0G/NemJe
FUYciPlh2lZaX7leD06hu2zkOmlYH3XpovqXerAcvtx2ikrDSvGvW6db6mHC
5HzShkoalmbtbUuZrIcSxcKWj2U0zKDOnNsk1ABc6z5kRhQS8/jX32jMqQHS
pDW42VNo+PQ5c33c4wb4vHu8szWehl5bTajnXjeA38rIqxcxxHmmuPsEljfA
SsLR7aSXNNybc1GExtMIsYG50s4eNEy6F/QvZWsj1B9N0LrkSsPdWl96fcQb
4ezi57r9N2goVCcZq6LWCFwfpSPuWNGQc3RaONGOuD48tTJPl4aPP4kvPrjV
CMr5AQGoScN/bufbzTwbgS1f69wnFRr+ZqNE8YQ0wpHVbrrKUjQc3fZs873i
RmiM7ktcWEfDqlM7ec7wfwfFzfvyLKupuEVuQNB1x3dwmG1WPPaFitY8KSIR
e77DzNKkqUAhFZdoMkrt6t9hX1Uu7dZ7Ksqc1LCwvvIduNz2KG30o2KIjkWa
c+53aO3bJMyhQcWLqq+PhZ5vgqeP7BdPvK7Bd0KWp3Osm2DFo/bHleAanJ0X
udDi0ASVQRuvOTyuwRd5qTeEvZtgg4o4u6pTDaJiYTjpfROsYm763Qo1KCHb
NpC90AS2s76mBweqkSEq4NUU8wMmzq8eHN5Sjar3SS5lyT9AjO94VClnNfo2
y9pnZfwAfS8a19OlKhR8dtww+OsPuBsh49zbV4VHpty36U/8AE22Z1CQVoUv
8zvzy9SaIdrbmrJVvQoVDBJYWe3N4DJ1bceOU5V45/Z+m5eCreBnlaBscKIc
BblZlPOiraDwbktgtlI5FsZ/3rpLphWWzA795RQrx2WqWuPHo63w+3T2R7/l
b+grqgfUG0Qlsqz5yqxvGFxvt3Ptt1aY35HC4SH4Dd9JxXV43moDL709xoZt
ZdjWzWd8tbodEqVFxQ9fL0XrexqjnIZd4Lsjq1ZxKAe/7T8U+G1tL3iKJRfP
WiTgnnWUsWS9fvCpbqyOYj2CmSo5h0SjfhAw82IL3fMYSp+SJuON+0Gkh7/n
56UncJ79GTPmUj/kSW46NVj1FPz+nZ0Lce4H6Y2Gny5EPYfhX6P/HkT3A5vl
65dagWGQOLhZyHSsH1pSqYlXKt/ATdLTaGNGP3y5nrGTx+wtqFsvCp+Z6Qc/
HZ5Y09G30NTTu8NguR+sb6YolXHEwaqONLGjfANgG6DR4iGSANYNICerOgBf
OTIXhc4mwk6K47G1/gMwobGh4E/AO9givLR0M2gAPH2NwtS+v4MNd/2z2sMG
IP2EgNLBre9h+UDK9o+xAyCW73vBPOU9dCb1/jTOGQB9KUcRa0oqRD0/G5fQ
S1zfn6gl2JMOvBaHfh9WHoSdMzfNPo9kAEdhxccU9UGQ/lxYViyRCStbTGw3
ag3CtlVdK3dsM2Gq3rluUH8QOiW9k/50ZwJVOz0pwHoQPj59ayX6XxY8k955
pu35IKzLCBAtOZMNbEur01wHB8G+SOC8GnsOWA91zHqPDoJ/A+W53o4c+FKb
dSRoahBSM9eIKCjlgE/85eb384NwNVN1NuhKDvzTLfrXzT0ERRIlSm5fcuDv
S5fzJw4OQf+ct0Kzay5cvqdHMlEdgl+/ftre8M+FUtvdUzaaxHp36aPdsbng
pVz36MGJIbB+eTFWuzoXVjqlPmVbDIFxqQXf3u15sCzZv2bHkyGYNok9q0bO
g0sbC07tCxginhcH3mnV5gFlIei1SvAQpARyi+/qy4MHtMMHzkYPQarOgJIF
ez78cX518elHws4xqt9lmA9Lxaeyp5uHwDfPTau/JR8upkgur3QMgWJ7UCGM
5ENR8PLx9X2Ef0oV2+35fLhnk94tOT4EMwGpny8KFsACBweXxcoQGDVFee0y
KYDfZ0suV0gOw4TaPbdbVQXg25HZc2T/MJhyMpSVWwuA1ybxUqH8MCi3841V
DhfAHudnFz8cHoYYi49VRqsKwST47PnQs8PA5WyhPnqoEPoFdFu4zYYhNe32
Ee5jheAYq2Ly5NIw+MVbhy2cLQTfj9uN3f8bhvSv1n0qjoWQRaUbWT4chsHQ
dEHVN4WgYdxe2+o7DIxGRnzOu0Ko6qAanPEfhjw3mFrMLoTescyTOuHD0F94
L2ikqhA2cHoe25c2DPZ0Ehz5WQjRwTfKEzOI/MYCZHj/FIK4oJXOjtxh4G+4
fSWVnQzqkrpHN+IweJrSPA4LkeG6Dq/mr+ZhCBLNb+lUI8MclY1ys3MYjO4V
Jv85SgYf41n1sb5hcPXecGHkJBmibdpVuyaGQZrP+5jwBTJIjFMLTKaHQf+C
xTUbazJkOpeo1P8ahhXXtcfd/iNDpXeiUhkbHaJn6dxzt8lgzBmZo85Bh2ur
nvTZ3idDT/Azxdz1dNBqwpNvHhHxY2/IvxekQ1NYZMm1IDKIUVRkgmToELTD
yeBOIhkydPZ94FCkA9vVs7MH3pNBjbZd2ucQHc6Yl83nfCDDmU42KTdtIp44
bVEolwzdNrPvpk7QYa09F+t3ARn+G6dLXjWiQ3Xl1v2kYjJ4LVDFL5jTQXlv
59XTxHsjt09JYpMlHXyWVlmZVJAhkjNL1PAKHfS0JoPFqskg8jIxoeIaYd+S
P0umkuGjYORuuEmHhOTewG11ZFCNexZX6Eb4f6JprNtAhnJJz52K9+iweg2X
3qHvRH6fbrz94EUHyYeNDrNNZOhSstou+YQOEzlPyR7NZLi6qLzRL4AOrvq3
o8tayDBdsmENPZgOXFsNY1taycS5NDSvG0GHQW6B6tw2MrCfKJpIfk3oySMn
bNVOhuD1ob3s8XT4dO5UaDPBwo3/NdklE/ql+SkIdJAhOeJIZXkaHTy+aPwR
IVjugkCRRCaR30Pl6d/E+sKdU5+e5NJB8dhz/hiCtQe/kobJdKAb5dhxElz7
7nWkLtJBc+LBOBDxzRydA5LLifXtm5J1iPwGD5x4yE6lQ0/I/Ct+Iv8bcztd
7BroYBTBXfPxBxnmC+fsypvpsFLkf5ifqN/nIc1copPo1yPOOe1GQn/tRMMn
fYR+F+79PlJP6M9xT2t4mA5Fv2UMOGoJ/WmnlXQn6KBNqpuLriFD+ss9Usks
OnA/vLI0X0kGJZOV7ey/6BAzcM5WpJwMpVubN9ot0cE4yeagQBkZfpAe/RZf
OwKFo3myNkVkuHzVfPIx9whknTe/WphPhjHpA31DG0dg9ZvGPV2fybCc012Z
tG0EGHU8to/TyfDUI6dojcgIeKzdy+J6R4ZNmoEZVyRHIE8bpS6SyLCn8lCU
uPwI+NqrUK1ekSErkDfwsfIISI06ntgSRszfafrDIfUROKNX/ybiBRlOt4fZ
Jx0j8nn3a2HBhwweEwwlcYsRiD5hOHiWmJ/VmeVSj61HIDaxxO0qMV9Bbm92
DNmPgGWOgO4JYv4Sl/XYk5xH4OHWgm4nfTLQeJN/iD0dAZEyl8Qz0mQ4/8Oz
yvf5CGhd3dRTLUqG/ldniwdDCHuUaRuPMDFvIv8SE9+MwLG+IuO/HGTYdfCi
q1j2CCQ8FXa7318IzmZ8m8S6R2ApW090IaAQbFMPxEgOjMCKy30jPu9CMF08
Jb5vZATS95avXnErBPU3Qcry0yNw54WKuYllIazt4754hH0UGv0mGMuyhRBz
dW3SRZlRGOu4X69HnLcvCiRkLiuMwrHxjOc55ALw5tLNs1EZBZHhtSpzHwrA
Lt236prWKAzuSc7//bIADjD/Td41GQVnv9Xq3OcLoPzOklL4g1FI/LR+4XZn
PuRXCpdGPRoFT6/MVQbUfEgTUjsR83QUKsprshfI+RBMdr9AChmFOxxF3l3R
+XBhZe5hZvIo9A89PfLVJB+YT1iVtNpREHDpapCvyAPhiGFz9p1jkHxi+9mA
gFxQfbxb8LbYGPE8cd+6kbg/nne9+GNo7xgkeH06zbDIhbAzjUbfFMcg8DBf
SppsLmzgoWj76o2BSOQfWcUG4v7qFy7DdnsMpN2jn+Zy58CwuzbbMnUMUh7R
1u2zz4YMi4T3sx7jIMK5jeeX0wdQahNf4vAah87fXrZvDn6AYuP3htsejwO1
5J2u0GI6VJ/M+KkVNA4pt2eWQh+nw9AhyuFg0jjoX+S5mxSVBlu3tDdIUceh
6H7sfHHee/Ct3bhguX0CAsFqs0h3EphpeutVl0xA5B727bl9r6D718jGr18n
IM/W8sAL21dgm3GqrbhqAqzFudZco0fBjd27rmZ+J+zJMaIKk5Hgu6rkcRR9
AhxevdJQ/h0OGRVLpXY8k8Dm9C3QkT8E2E/dVV5lOQkOn9vYbb76QCBH7/KS
zSS0rOFZkx7nDRvxWPncVWL9idA0d/JD2CYvcG7MeRKkS9JWDfy8Bwf4c50b
nhD25p7mwpuucLH154fYj5NgyhCT5lwwhOzLTmLqy4R/haDLe6Y90DZvemfC
qimQvsNkXGr0xC0bbgtzcE6BadHO11YZD/Au2ZOvadMU+IR/PNmg4IPqW/z/
Xt87BV9mVldMtD/GrzWJna+NCd5sUFE9HohuInta/5lNwa8HO18UVDxHCfe0
7/aWU+Cgfl1MKeEFPpXIqla4RrD/ozo8E4wG3iX5NQ+nIGW/XCg2hGCzUnvY
Yirhz6VVXeN3OPo9twi2ypiCoroEPR3zCFQZ7A2oyJmCyNUegzaFERj9ku4T
WkrES3h2q+NOJFpOzNzc10ysD+nba0GPwpF4HoML/wh/wiFfR8Nf46v5kOPI
zgB5r/U/WMOvUc9oi7YkNwMm2gwo3UoxmL60Te3nFgaIyH6eM/seg7dMpfYG
SDOgIlJPw335DS5w66whmxL2ZNns/7bGIT+TN+LrRYLjjCe3GMfh/u+dErVW
DAixzX33NjAOL79yPd53nQHURZ8j8gtx+E08MWCtFwM8D028F6qIx26Om9s2
PmaAwEHPXL1f8Tg/rvZhqz8DLtYpvtnFn4BSWd9r94cxoN9K31kREjBYYxWf
8TsG0A9p8mWEJmDq7roEiw8MiBGL3PUhOQHLVr9WsM9iwMM/27n/5ifgXLX8
OY8iBljH5tyK70hA3o/LQ4+QAQ5fqgcmxhNw78vq28/LGSB7dIvo08UEvGhq
HRVXT8T3WR5NESThbVWZvak/GMRz161LeyVIGLR9oSC7nQEMwwr3GXkSvvv7
Ta+4h9BzdvjjWk0Sfhl42VE+SMSrN3Ky0iNhR7mFQ/0oA4JuCOz7a0zCmfd7
/7RNMWDt4dFT/ZdIuOH57POBn0Q9g2sM2a+SUPIm7picZ0B0itaLazdJeOTs
809zfwh9kMNz/V0SmiuZHfnLxoQUNPaafEBCFyHxBk4OJrgyctg4H5MwcIlp
tWk9E/QTDP675E/C5J6i6W18TLgTWys48YKEJV+ePpIQYILlPU/XjBAStiYZ
88ttY4L9tFT3+3ASTj/dlXRoNxMiTxzObY4kIbfDxMGjEkw4k5Z04eArEoob
5Zfr72OCntfgvq8Ea8j7mprIMaGzce0jb4LPbz41YnmQCWtTUsnXo0joPC/s
/p8qE9TNZmS8I0gY0EHndNFkgvFipGJpKAkTKdnRntqEPfW7iGQwCSnxD/c9
OcGEwF9Ohp8DiPx8TxYFGTIhT6WEy+4JCVn2AgavzhLxJ2Leq3qRkOvkQFfC
eSY0bnC8J+dOQjGZTzfSLZgwfU+4TucWCQ9vvLeSY80ELh3h6buEviYzusEl
9kyQ3mInV0nof7OFb3eVAxNCfO81HSD686ywO7PxFhO+Ol+W/HychAlvUrU6
bzPhi8PbmwbqJCzyuv196B6TuI9pzS3KkHBKd8Ps/GOiH/JPKl5uJCGHVPtj
tgAmsO2tjXT7l4C71ydv4Q5mwtYNtR/smQlo/P2wys5oJkyY/CA51SQg9+H1
ZZRYIh81i8BdOcT+Te40uJTEhBneAJnXbxJQ3uOezZsMIr9tf3IGriXg2IDe
lHouE+RfucWlGyVgvMFW904yE+rMFgwPKhD7e3fBC+EKQq+bhnWzY/FY6f9U
iEwl4pUa+NunxuPDGdNE80Ym0BXJEdr28ThVMVfwqovQ22bNIem2OKy5oTgk
MMOEYyZH0ne/iUWf1lU3834T9dfTtl06FouqWt8XTFYIf/+ogZ1Tb/HdZmfe
CC4WCER02fkffItPij6p8e9mAXWLVfPm+BjUkHhYni3BAn2B48q1ijE4G2R4
+qw0Cy7WL/K+/fYabW0m7UKUieurWl7c6I5GLa59IbyGLMhLzAbViShccFnY
lnGWBVp2voJbrkZhZldVipEZC+xPH33X1RuJuzKvFr+wZYFDfNxnoaoIXDZN
HuG+R6xXPZP/ziUMc9HNJd2LBabSpRk6zaHouE9n+eQT4nr6ddv4g6HYuTyw
KeAlC9jaXqovNL7EgqTdmpzviHwTpOzPmQTiTR5W1bsPLPgirjyrMuyPe9xL
jY9ns6Al4577YadnGKFvec2PQsTfxW/j4fAEXX/GhK/5QcSTLO2ZEnmA0hYO
u5LaCY5hmMs2euBAuVqadi+R39uUpJ/Od/BMdHvpo3HC7u0rqs/jhFyrU0+K
sliQbn7jv6p5e0RH9+Yvc4Tdgyd2i58l3m05bmW9RHCFJ+VZmRH+///fwdTU
dCj9kFPp/wFniSVW
     "]]}, 
   {Hue[0.8503398874989481, 0.6, 0.6], LineBox[CompressedData["
1:eJwtm3k0lO/7x7UpEqWIPkSWSCokIbokRUqLkC0iVLa0qGizlCxlC1lK9kTW
oewXky372En2scyMmakoSfye7zm/v+a8zr081/V+v+/7Oc8fs8P2uqH9Sg4O
DuFVHBz/+90LgrTlZRYaGxufm7+Rcvj6H0n/PwsEa9rrGZF8IJekuPPnHAu9
zIOuX0wNByVZA9sJOgvZfy1tPgckwcFNT/qbeli40Wy4h/N8PmiNfW+IyWFh
29lNeksTVWD4rDlzvzUL7bXXiTpsocDLI19P7DFnoZXPmyuFIRTo/Ds1udOY
hQ5yR+5qcreDidtqqW0nWWj765TvwmI7WJgdes1xkIXDnRio3tcJdrvfP2/m
ZeGLZyPbL7v0wt3WJy5XKpjIYy63pXHdEDyn3+mZLWKid39rTMPtIUhae+2I
D4mJZf+Mh34PDUETGAi8SWdicJaLHctsGCRyBcrbw5k4uV2X9kd2BFpC03gO
X2HiqdOVaT9JozD+IfpOow0T+R9/qgwZG4U/9YHDppYENzgO1vOPgdSK6wW3
zjFRyvhg2ma3MfC8cdDy/SEmOvPfGxPYOQ47Deszt2xk4uguN01xLypouJYI
JHEz8YfAonbxeyqcC/zweN8aJuqlkA7OtVPhATn0vP7CDG7YT7O5IDUB7Upm
fx+PzyB1zanOFvIEPNxM06cXzWD99oHz/cxJ6OxcT6uymUF3Xfn8vjU08LYr
rMi0nEFjPuV5Twka7J21ehl5YQa5J7N7Ow/TwH9zvsY1gxk03GTpTbpDA01D
05CNajNot85hs9QYDdJaU5StN86gauVMDW8OHc5bn+Y6sX4GI0ghh8zr6MDB
+v1NiXMGtWb44myH6GDOe/IZ5yIDDfhFd2byMoDP4Htf1iQDXeZ+1Es4MuBe
g+bjxQoGjvBlpU5smQFp88nzE8UMpJ2JExbfNQPt06GybQUMzI/wertNcwbk
ucYpyRkMLNlEo563m4ER3UCpk1EMXHww6T6YMwP6Nd1fYlwYeJX6lBZ0iAm/
jbzifa8y0OeGc9nsSSakjO+65XKZgWV7RxIlLJmwvOqhyBEzBuqJZCa13GdC
gbbk9SkdBia4cxi6FjFBtPL6loMiDIxV7Y1fKcOCJv4Dt9W3MnCb51BvzH4W
eNovdGjyM5DymyK1CCzo5n76UmcdsV+oS7eEKQtCjWP5DWfpqPe5qnPpKQsO
p1vfNGbRsdPaqGM2lAUzC1LtpjQ6xnieSP8UxwL9hJww62E6npXeUpiSy4JV
9OqNLk10LH446CbRy4J8zUA3tzo6miZIqT8dYcGl0DNtt8h0vLfUFfmRxoKy
A/0hnkV0bJpbOfx0kQV3vFi8/il0tJt7YMnkZYNUR4Fr0Fs6+v78u/YbPxs6
pD1bgmPpOLwjoJskyAaFxtXBkaF0bKc81tu2nQ3TAts2JD+g4/U5cdfm3WyI
vjrknHaXjnJv68Q59rHheGlK0/ubdCS/U276T4kNSZf2Pc+9SsdfNZx3eVXZ
cJY0SyddpqNMpEAmVZ0Ny2tKTn6youOXI4ePpGmywTJTZ32FER3N+x8ujmmz
gXuJy6nqDB0bXpYZ2xxjQ/HZ1oZqfTrS2uw86nXZIPjLLLBRi45mb0KeGZ1i
Q7WeGK3lEB39yUWpHqfZcDNu/ES7Ch1dk6Ln/M+yoVXrOlefPB25RoXCHIzY
8Oil8rUBGToKGg3xHTBhg/zEn/ohCaL/3PSdzAts8A964j8hREctx2FvcQs2
qAyemJreTMfLXHPzMZZsoCrw6c3w0tFT0sxl6SIbtLtj1s6upiO3dVa+/yU2
sGWtr/xepqF1WnVhtg0b3t6XqltYoGEEemyrtGXD6ZbpnUtzNLTJK/pTdpkN
i+I5fiu+07C+5KJzqh0bMm7dnljNoGG16YEgD3s2mNaqHV83ScOGk4uuag5s
4BReTl0/SkPTN9YKVIILnarX8H2jYUzq4uSDK2xQFXdVTOuhIdnlI4v7KhtK
Orde1Gyn4brSy2+9CdYMqPLvbCLqMVYUHCG4UtOpwKmOhiJOKrd2XSP6+bFl
eCWZhnKvbneZE1yTVrE+toyG/vQeC3eC9SyuHlT8RMN78yrSHgQ38PFfrs8j
9u8yPOtAsEF1abD1BxrelOn5q0Fw2z37kl9pRL97zI//I55nuIdv4kUiDVWq
LU+/I7hrpGiT9GsaGtzQVzpEsGmUrWZZFA1tHT02FhP99OvzXDsfRsPyN3Jr
dxB8cbkwghZEQ7+SAOVbRP/DJOtKbz8arlTL+phD6GV7lYsh5E3DIduozG5C
T6oIaWvufRq6WSgqThF6X6VYHtW9Q8NZGWP7ccIP2lPO64NuNKz89Nm+kfDL
RT031t2JhomMXWff/M9PplktjwMNF5PEtM2t2TB3IUv0kAUNt4vk5kcSebjH
c+FEuzENR2s3OW8h8rJQyeF+7SwNHTtCkx6ZsYFDzqjp1TGiX8WQvwJE3nwG
//3eq0XDHf57TY8SeVzz8p1krTqhr+XuNEtDIv+LC56z+2iocSQm4DyR5xe5
KWlBcjTkv//EVJHI+0b70+0S0jTsiawK+nuCDQItibvObaMh34h2mDFxXsQT
9HqzVtNQMPWikuQh4jwa/Vh1bHka2Yp2h68Q51Ga6/W+gT/TKH21ITT6ABvk
brL8uFnT2FSheu8zcZ4P6EQduNI3jR99q8w0JdlQNA82Sx3TmHnnXiJTjA3q
WdPPI1umkenoxxMswgYtQc3xz5+n8eC35OJXAmzQnxoLF8+eRq9ER4c+TjZc
eq7I7vOZxpu5fX/Mm4j7siDcr/khMV73KV2xmgWRAz9Fqu5No/g4ZTujlAUN
8h9PpLtOo9LIFNeGTBbsb1ZPvmM+jQ6vnd1X+bOAk1fHZLPSNObRz/BNarBA
XCWVwblnGoU9oX4DcR8fsuL0XZCZxtzLDUPbdrHALbs+Z0R0Gje9Cmya2sKC
vtMGXLlc03i67MQqUzoTPoSYlJ0amUI386nStJdMqP30yVBrYAqZGkrbjvsz
YWRIaHp/zxSaurqea3nABEGFrwL/NU8hw9KZGmPPhMdt1teni6Ywq0Swd4cK
Eww3XZPwC51CH+v3CoIdMzAfft8fgVgfN6cR+Y8BkyJVtOPqU6jjbPHLicmA
7jROgxblKUyKlvouP8QAUknYpm+7pjC0X9jKtZIBrqPvYhc2T6H0lpWzP70Z
MKbY+eHA1CQKqNoGKqxgQEubPCUzdBINW/4rjftOg2TeQeHokQnkzVFtl0me
gtf6ijc7Aqj46tVw4sGkMfBxtrm368Q4TjF2b/C+/w3ur8q4e3NmFIP2ha/y
3tYBNl6tUt3pI2i5b7wu/2g1mPS9PfwteQSV+twMxFZUg76Sm+l4/Aiqiz46
/KHiMyiPb3z+I2IEC6qUJmTUP8M6PcOfvN4jeGF7d9d7JTJk83VV6ZqN4Mrp
nZ0/d1XC3/h+q2KuEfw3+aFs3K4IIsup0a8dh9E/3fnw6uoksLoX++ig/TDq
B/pGCzUkguz+M3bt1sN41vhR/XhbApSkF+1bZzyMxwoTA09VvYHBl0G1t2AY
u5bvueVtigIZR8VZ/S3D6PV1Sc939D7c3LMQ/+P+ELZ9vsGzSiQKVydfdpS9
MYReKutXPxh+hVFCzQesHIbwWJCI1fXkGCxdldD05ewQiiuk/iVLvcHV/ccW
EqSHcI8GU+8ZdxJG+YUZn2kdRMe9n1xGutKxZEiW54PEIObdkl6OoufjA40V
WbFCg1gbresWdoKEmjF9BgG8g6i4UMXY/46ElYaBIQ4L3zAqWKLKzaYA62ro
/Dvav6GZjdLfOkohdmZmC0d5f8MAn56vg4lFyLyrLOM1PIDUMA3qmeVyzO3k
qXftHkC/0IEH+wwr8IYi9erFpgHk/SfoW5hSgbO0yAz1ogFcl762rEAP8e/F
33vmQgbwX/XtQDheiet0SpQdYQC3NAosx3tXoeRGLW2j+K/4bd9FtZTuzxis
MOLp+PIr+h7c+t3932ecP+tD8vL/ihuXztfzS1VjU1i1VNbNr5h//Whvlls1
3t58Yi2n7lf84F74+traGqwVNGz6xOrHfpPXx/7I1aKjqJ3Jf0f68ewXn9Zg
/Xrs1FwToqjSjz/izx394liPh63S6nR3E+MPH+u0Btbj5rdTqrcF+vGAnMS6
ww31WCbu8l/zdB8GlDYZvDv+BXml7gw/Cu9Dz4AXUjkHGjBfzt9xdKwXn29t
62phNKIY5VLx7r5e9De1kePnbMLnd9XWubf0EueJtiQp1oT21bTUtcW9aLdw
1ZB0tgmFrAxG5IN70XZ0Z6d3XhM+DOM3vavai/yvSepT15qRdpCeVrmnFysr
g9qEvJrRZPDzHJdkL5YYl78VimpGhd3uL19v6MVwsw2iflXNOFrd01I12oO8
VuFLwoItqDf/+hjPix5M3yYvpvixBQvj3SOMfXqwV3ONr8WXFpQ4dnos/m4P
6nmJLBgPtODfsGUvRdsedNQvtyxd0YrZu23LTA4S+/lejTyh34pbrGX2J450
40PF9Ue921vRew2HD627G1X37lggjbYiM7O3bX9TN/JvrSv79KMV6+YDXGs/
duNtmsN5Ya429AxnvKcHdWP9+u3f78u04VBNnriKSjfKRb/xnLRuwwfn/+io
ynfjiYcZqv85tKHQiNY1dYluZPBuXnXIuQ3PLrbmHebtRk7jx/2H77VhpRJT
W3eiCzftfmdnGtKGlpUHrpwY6MIo7r0mMxFtOG/wMOhkexfuJImHusa2ocI1
ns4zFV1ovZ978UBqGya8lbM3jepCP9B/0Vfchhp7bgaYP+/CJ0u6cZSKNuwt
Kc6y9OlCe145hY+f23Bjt96vS65d+D02gPdYcxt681x5du14F0qtgceeQ21o
65H83vNXJ/oW+Jmf5KDgEie9+QGjEwWTwt7xraZgbITSj0ejnah09Pxy5VoK
tudUqfu2dGJ8muR3Gi8Fj04MNQaldaLrk7kWSxEKDt+SYb943YmHN9+xDRSj
4IMV17eEhneiat3XY6kSFCwQWbKMeNSJz6ufiyXLUlDqvAjztUkn9vY3CFbu
p2Dl8GX+t6c6cY+k1w4zFQpaumaqJGp3ol6c+echVQpGBKg/Tt3bibpVn9iF
mhRU2OqT/E6qE2kejsFrtCjYlPKl7v22Tmy3TZrU1qbg6krTjdmcnRhXfOG7
33EKJhgkKOcudqCR29GCF3oU1Pg6aZr/owP3dIZe8NGn4O1fdxI/DnYgr563
3YHTFNz4pKKmqLMDRcNah3+eoeCHTZy0koYOjBvvsk04R0GqfKQSfuxAtgPp
zWcjCso9SmVOZXag5k0/AzMTCrq2FmbwJ3ag4e+G1f0XKEgSr3XQiOrAlBvp
rcfMKDh/o1vCIagDRy+fLXltTtTzeWIwxKsDY/SW2gYtKOi95XdssXsHos9v
MZ6LFOT+tHXzhksdqJrHHy1rTcEz62RbVYw70NGJ3bf1EqGPmWrQJf0OlJ0K
ffqD4N4MPd1A6MB7ex3fFdlQUHTRdFWBcgcOUP6edLSloK3BNfy2qwP3jrU8
XnuZgmnxHvfXinWgxYj7mVCC6ayAg4pbOnBXxvO61XaE3kdif5pzdaCEU9Gs
HcHu4Rk5T5ba0Sr83VguwSVjJU7ZP9vRATclThG8pNwo0zvVjtsLPqnx2BN5
8fs6tmKwHT8cu1zyH8H+PfS3uzva0dFgct9WgptkFy2M69txNEbs3RKxfpMn
j9Dj8nasH2LLtxNs0ijSmZ7fjgsZei1hBMeK7Altf9eOAWdEozUJHnLRPLX4
uh3b+11edRH1S6HBup3h7fh4tXafGcFXN1pVn3nWjgViGY4NRP9ZNq5eHg/a
UZoHTWUI/pH/SCP5RjuqySTluhF6qawOmW9yaEdtzYeP0wg97xu/Lfhl0Y6x
nj7t9YT+lWk5buLn2pFlyfjYY0XkbR7l9Y+3452Uf2odhF8nTrRN3TrUjnLH
VlwrtaRgcOxwyhuFdvzPVP9cKOFvO519qU66HT/yKHMYEv5v1Vwh+n1bO+6M
3eHLQeQjYWhHpM6adsyhlalLEXmiKiidc12g4GCFaWDM//Lmo70hmkXBbrfO
sb+GRL6kLj+l91GQIvOG9ozIa+21FPfwbAqmnrtfXaFLwfWlBYplyRQ0nJoY
enOMgmd5amao0RQk+5vfdDxKwb5sqr2aLwUvffPc33SYgoyfO02Gidwe/yiU
QVIm/D92kJ/bgMjheu4VHEqE/1G6LfuJczZotaSpvo/wW/Xq8WfyFLzy7Xvi
vV2Ef4/eq+xdQcENDoFx20Up6PdRtn7j7zZsrd/Xt3kbBReY78x+MtrwYrMw
6Y8gBUet0x4U9bYhtzvr2quNFMw/kkzWzm3Dj05bZUVWEXWveXP6AnHvDvib
CRtT27BWU2RYzbgNjSI3hpiNtKH6nbgbIifbMOrunMWZb20oMRkTMaLShivP
xMvxdbXhz/qofifeNpyVz5ocJu5HGeEdzRz3W9HFRvBsTzxxXwaKsWscWnGN
okzzrxjiPl4Q3Rxk2IqBiyGX1kW2Yf3ANjMBuVbMPVKysCKoDa8mbKHu6mtB
ednrZ87eacMMmXX/DA+24PjuVFE7/TaUV2HJp/5swvGnhyUfUFrRYe/jx8Xf
mtBAzaj0wudWfLuTr725rglXuJvrCBa2Eu+hfXd/xTUhee+GdI3oVvz927VK
V6cJ/3UY7lO62IrkYqYxLaIR1/y5KTIw0oKmmsxH+1Qa0LTgW+T6nmYMP/CI
clS8AUUVO+V9a5qxcQ+vlCl3A8reMfo4QmrGw9v3fvEa/IKqPy5KGIU2o+Sy
y+Z2vy84wqc7vUmvGZmVM+9u99RjMOlM+AZSE/rqzLQV36vDXlOzrqm7jUjW
Y5xRvlyHp2LuLw9cbkQOA3pLtkEd9vt+nCk704gPjKebkiXqcFfPRJiWTCPe
caDWv2iqRa5T5mbmXQ141f9bpY14LZ5QU5r4sacBTzU153LVV2OWexcrhFKP
AkbZoWZbybhp6tuU8nQN5v+q4auXKsGCjxf9LDkqMfUr9cX0k2xcIRK5r/9x
Pl48J1Lw9XIELpw6MVfGFY3F3Pe7yO4voXDZcSsvOxIS9gh05EhEQEaTo2Jp
VhT4nc1pe90aAQJ7526tdXoFRlFjjXd2RcGw02au++PRwN5xiiz3LRr6P9/J
KW+Pg51qojnhOvEQGrHjnGBLAnwhWevkBaTAxkvWaibX0+DA6Irt3qY5UP+4
4NWiVy7sLbnwXeF9DhjV7PsQlpYLO8Ozqof/5ECidyRwN+XC+sQPBxIMcuHe
NpZvqmAeLJ41HVhm5sIHjQWmd0YefMvN2YWK+ZDhVL+xoikf3rpZVWt+KoCq
a+KF7xYK4LUlV3bkUAFwZ54q9xIphGi9glczawuhIbPEV/1wIYSKczu9MS0E
n9O7/p7xLgSvtsJN//4Uws7BqGscnB/BRmGDdZnGJ3Cp+mXowPUJJNmlf9TJ
xSDcJ8tf87sIHjQffTI7Uww3hxrE+YSKoTujkTdbuAT8i+5/UVQthkD7r5I7
bpSATuWrKI57xcDuXzBYK14Kcn5/JqvmiqGiRi2p42EZZKiqqZCnS8A87pO+
sxrC3FfJRlVSGRTcgy5pewTGh+OmN1rKgNekznooFOHcSZam13QZVG3suW04
hbCpnN0lLlYOW47eP/P6ZCU4OnNHO/mXw/2iWA+fhUr4WNQ0s+18BZxI7ms+
bUqGZrMDW/zqEdhPsx1qXMjgWfPdnmsQIfqq7/IhXzJwDSTwXP5JfFnu2aO4
K5sMz3UnYpp4K4m+vCJWrf4MHST332tVK6G+WcaiKOczNAW1jof4VYJb7uLP
vTWfYelK0P6VoZUg9JLyPLX/MzxhdztZx1TCVdP7FeFrqsHqVVpQf2YlrBtr
2eFiQXz3SV7Y29FaCbrz7lM71tbAz5qKW42bq4DZr+8dLVIDwpuvfaf9VwVR
5WLb+JRqwN+LvXtOsgomfL6cXLSsAbsL8q1f9leB3wbRnO78Glh5oefVLcMq
qJWodg+yqoW8nmWsC6oC1zUxvCtv14Lf2zzV8PAqEJxyeXcvoBZoAoXGujFV
4JC1tc++oBbSlQ08bqRVAaeqk4YWdx3cU7t2vgar4JgB/6q5wjrY92DvgiOz
CoJtuL7/+VIHz+6t3e/zswp63TmGlr7VQZGseofffBU4xjNL1nHWA/O/H/qm
K8kQzGq4KWJSDx9Pf5MUESBDzyrypR2O9WB97WRyvDAZxIWKT+98VE/kTjqY
dzsZSFrv5BTS6qFAWPv9x51k6A3zHT36qx7kKLd5ZQ+SYUeaZ5se9xcQKpBb
KXiIDI4lNyoMtn+BBe3t174fJsPiqHXsheNfYO/Nz5Fux4n5yhqGTlEEBziH
hhoR8/X2a7llfIGG9A06tAtkKLCU2+te8QVqFz3uKFqQ4fhTIe7HE1/gWmqk
lb8NMb97tipcpQH0zY5cNyVyQ6LRc17pN8CSq8ap7W7E85ZG37y2aoCh3uOf
KDeJfmUoHml+DVBcp6O14h7R76H6K5mxDXCjosT2oSfR71k0zs1uAMFJHZHJ
B8R+97IUS7obQKFCw8rXm9jveYoY0hpgS0YSvZDI5fHEuA3VSw1A1tiwrfsp
oceXgOnmnY3QZuFjNxRAzN/mkDhypxFMj4n9Ewgjw7F9F0MmAhuB68KdocJw
op6jRg/p8Y1gX37T42gEoYezttlcbSP8sK8alnlF9OelprvQ3wjhS44Fj6IJ
PSIUDiwzG0E6/OqpzzHE88u3b+La2gRLGtndAq/JEEIRWN6wuwk+jlW1Sr4h
6qHyzPBDEzi/qYwViyf2X1j1dev5JjC9qnyI6y2xP+/fepErTZBZVFgwTDBJ
4sfHHfebYKU7nTstgahfZTplZ0gTdP0IPGKWSDzv5HD47uQmGPhxwXKB4BDr
Hi+FT03w7I2UdUASGfwYGjDR1ARhgevWbkwmwyOPpH9xo01w4KHQDW+C73Cu
Kzs33wT+ei5J3wh2feniuZa3GdKj9idIpZDBQbxDtVyyGSTGMq+bEGyVpfr7
plozHHKXE7xFsIl6fKHsmWY4Zr41xpPg03Wrbg/aNUOjNfOfM8HHja4pRXg2
Q+0G0Ncn+PBIC/tEaDNUJ3zw5SdYxVU5Zzm1GeZXMXNqiOfv/RvjUljaDKca
mzsvE7zTf3m3E6UZrPbIzTOIfrYL2NPEJ5vB/d+smA3BgkkN6d2LzeCcut+w
kuifd5/Clef8LRAothzBTTBnWaS0tmwLmLF9mUDot6T3d+y3Zgs4iq+0v0To
+6vrUlLW+RbgUWleciL8YNrWXrp8rQUW9p4i2xJ+TbB2iwk/boH1nn8KdQg/
Bx+EfWuJaIFstu3wpjgytERZmqtXtsDWwpWzLkQeaiXJQuyuFigKLaQtRpGh
IlemJ5XeAqFpovvvRpIhu+HH+U1bW2Hhd3/nHiJvaRdM+evkW+HxRl0Nx1Ay
xI+Xtz3QboVIvqhN4cFEHpf8DaZcWqEv+5tESiDhZxBzfbxvKzCS/FyC/Qk/
hYwazse0wq2tt47a+RH+KYnpYnUrHN9zIqedOB8yJHPxxg1tsLPD3ar0LhmS
PV4spwq1QUKvVv9KdzKIaVUOekm2wXPrJDEV4jxubZZ+o6LWBverimUuOZNh
7SRbOMmuDZY6Tgp8tiaDb5bknwfX20Cu1LTmmiUZlm+Z9F7wbAPSrTU+i8R7
4zdHWdSG0DZwGpLWmThHhsltzzZ7lLbBJ+WJsUZtMtSdFt1wlp8CUTYbwibF
ybBl74jgTREKuN/N+ZooQoZLG1LFI3ZSYHCHlM5JITIsNMor96pT4GDwm2An
PjLIn9CwuHSZAjxBnjOji1UQetTivVsBBcgPh0UKOqtgQEKMFF5BgehbNZJ2
rVWwa+VYWUE9BWgiXK2rGqqAXOnYNj9AAelzMir8xH09p+n522tNO3hTV2k7
p1eBuWrMsTCTdsgzqjMWvVcFaVsvniFdagd9OYeJxhtV8POXuFmXYzuYjOjn
ODpVwfPCdGfhx+0gten9Rg+rKkClopeJ79rhefqQZP/RKpDa0zOSN98O3O7X
dD+ur4KZHQKP2mM7QHPrjx/bifef6v3EG1UpHbAYHNi6yb8SfDr32Odmd8Dg
kSHyr8eVIPjs+Klgcgfcu7xd6NX1SjjMuLtNn9YBWk9XpyudroSQj/0fq9Q6
4RDpa9/gukpQPJnAyu3thHKJrEOkqQp4kCI/9na0E040xpw80VUBtf+KuoMZ
nfBvYqtpbVUFmOdSyp05umCOT7LWPbYCfARWPZeV7QK/zReiPuhXQMeQvWzC
3S649C9LNyStHNxv77YJEewGhcNHfnafKgNBblaZyY5ukO1JUo5QLoOit/lC
2+W7YWf0atJBkTJYbFBr+3CkG4zqpxmK9FLw2aEHDc7dIJr3as3vZ6UQ3GIn
uuZzN9wJ/S9+pKwE0mTj+zyv94Dqi9fs3QLF0DOw0dChvhe4o1sP3n9WCJc8
NCbXnvoK9gyFMprPB/i8+2Dg5zWD4KXPmk3FV7CTq2wqRW8YBDg9zJ0NPfFH
3V7HJAOCA3OmZv97gBV+ifS3hsOQsc06pmr8IZqsfsaMtRwGRz+V53wlXvh0
+dxsqNswNNj2nu/VeYLjc5PLD6KJcV5rawXdIEwa3bzVeIpYbxldT7sfgaJl
TsfW+I+A8UsSCQoScIvwwoLrixFY8Ov+XTmdgDx3/HN7w0fA/dg+6maxRFzc
l/rfhzcj8E1mPmBPQCL2Jw9+NyQR64vLM2UskjAq6Fx8wuAICG31vDk3l4y8
Fgd/HzowCiUXJqZ+rH6HnEU1H1LVRyH965btwsrv8N8WI1s+rVHwEjncufby
O2S0uDWP6o+CavfNLM3Kd9ignZEccIkYP1Pkt+peOj6TEz3bEzQKVMvcI2UD
75FjYeX7m6Oj4GEwscjv8QEvjfX9fDw5CmrTtcGS8R+wsin38AvGKPgkXM1Y
JH9Ar7dWne9+jYJ98IritTxZuKxTsjzAPQaKBmPd9+OycCnkhonu/jGwuvNy
Ni8nG6089BKNVMegsH6VszIlGytsxRg2mmOQ1FLg9uBHNj460Oz9QHcMcl/t
dbJUzsF//bJZeRZjsFAwvv9CYQ4uSg+vEnkyBgoBk/nrTHLRku/T6V0BY3D7
8sopul0uls2/iFEJHoO3BtpPc2/l4oPGQ/vORY9BHMfe1G+hufjX7ZW534cx
KPgCmjVfcnGh9HQeu3MMXjgtmRQdyEPzVOnFf31jUPtX9k26dh6WBC8eXz80
Bq6ZAXweZ/LQwyZjQHp6DL5NsPaWXM3DeU7OdRb/xuBnSZJ5aUwe/j5XblUj
PQ4dm2fn3s/loU9fzrfDu8dBLVrj14MV+chrk2RZpDAOLWJJBrs25ONOt2fm
mYfGwZFLLHeDVD4aBZ8zCTs3Ds+9k7asOpuPwwI6XdwXxqHyDP+bePN8dHqj
YvTEchwyuDYO8dvno8+H/wzvXhmHphXyx5565GNuA9Xg4sNxSLebfB2SkI8a
hr1N3T7jEOp94CfzfT7W9TWcPOs/Dsfqft7aScrHwamcE0dfjoO9RWyeaE0+
8qz1PLbr/TiM3K8y2j2Zj9HBztVJ2ePwpVRcWZ+Vj5KC1kdFCoh61reXa/3O
R3VpnSN8SKzvzo4o4CThtaO8mnOd45C4NaO8UJKEsw0cZa7945Aid8QiVI6E
XoY/1aeGxiG7Ik5JW5GE0Ta9ql9p4xCgzG+x+zAJax8nKVdxUEEhwUuV34SE
hmsjSeqcVFh9k6mbakHCb8HPlArWU+HwrnwFPhti/zfOCu8EqXCRh2l7xYmE
EmUq8i/kqbCysHeX7CMSZh/dlcmpRCX0rhlx8yGhWuN/cl4HqZBdaiAZ6kfC
s/0csre0qXBH2VncMJiEAzY/0xi6VJA7cqpxNoyEV6ap0g4GVDC6dXHQJZKE
j+YbJM1MqVA5lrF9LI6E3F7lSe0XqfC94LLmUDwJI9fm7jh1mQofr+q+y0sk
oXhIUkLNVSoI2dQam6eQ8INgpBi4UsG9Olq7L42EqvHP4otuUWFbQ8WVve9J
WC3tKarkQQXn1d5olknUl+X8OvMRFUyy3XQsskj4Vdn6P+knRD1zV74r5ZDQ
4c8BvqcBVLA14TzVl0tCdjnPKmowFfxKQ/Uu5JPQ02fsl04EFY79+DX6gUTC
1boltJQYKsyluWztLyBh8PqwwdVvqbD03nV0sJCEwm1X2u1SqHBVpVir9CMJ
UyIO11a/p0KfiuG+659IuNdMoEQqhwoLQU8yFwguEmVkPSmggp7hSP7FIhJq
j5ITx4uJemS0jkYT3JQWE6mDVCDfQPMMgi84uQWkVFNBJLX690uCR/fpPlzd
QIXqwEUhY4KdZ0Vv2LUSej21KJ8h9v9VNGtX3UmFrD7R8YsEez1sNJXqp4L+
bN3zVKI+bu2kU0+GqGCcu/NTNVF/JKeH1vg4FXLfnLlcSvQn3nhGWYdGhUd6
iWEBRP8ZITtlU1iEX48/a+8j9FE2+vff6jkqqLx5d/cDoV+FUCef3QIVyr74
K64g9NX7lrGqepkKUnqMG3sI/TsSvX9LrpmAB8WJ6oqEP1YOpnRf7gn4Z//5
BQ/h35TcvqExvgnQe/LRBQl/F0kDtcnbJsBfe/tQJpEHv3ukklXiEzDl0X2H
SuRlk2Zg9mXpCTAfnnz3i8jTztqDUZIKE1AoMEZ9S+QtN5A30PfABIiK3/p7
MJyE6meoD8fUJ2De5n3pOyKvZ3rD7ZOPTUAG77uzvM9I2P/6mtmqkxNwwNJL
YY0vCe1stAwun52AehUpSgdxHu7RZpQlLSZgpsPAdd6dhCtzqmV9L03AqLz5
vdM3SPjiVpzImP0EHKcctnrgTMKkRb3VyW4TkC3BNWBtS8JG3pQOCb8JOOV5
3+/4KRKadHjW+QRNwJPc3+ctj5Nw+NW50tHQCaiscNbW1yLOp/hyUlLcBJyV
G8jI3k/C7fvNb0rkTYB7pUhvrBAJ038rOPh8JPSQcuu7uYmESmVrzUdLJ0Do
+0VjSW4S6h4rPJJUOwHkXj72hr/56HZh4yaJgQlQOh0mu/5rPtqm74uVHpmA
mxFK39Q68tH4z2nJXRMTMDxl+OJ4I3E/xb04oMCeAPukDfwLJfm4Zojb/PDq
SdBPrxVujM7HWIc1yebyk3DsKst6x+l8fP5JSt5KcRLYLoOKKjr5+HidTqGN
yiTMxftRd6nno12GT91VrUnYGN+vnC2dj/uYy/Q7RpNgezjNRP5vHla7Lyi/
fEDsF6+bypuQhx9rhSuivCfhx4v6eeGIPHy/VU031m8SVpruM1vjn4fBxXfN
EkMnweWBWuSD63lo9m/2YU7KJPzjmjdjaeQh8wmrtrFpEtqDxlcvUHJROGLc
dLXoFLAvd5mnNuSgqq+Y4G2JKXA06Prqlp6DJjfNO8ZkpoCjrKlu/mkOhp9t
M/isNAXmax4Lg1YO8mwo0/bRm4LCbE3b7LxsXHr6Up7j9hRIc14xueSfheN3
tTkWG6ag/3hIqd/aTMy2SHj389401JytFA64nIrKPZILnI+mwVPY0iFOJRVL
Dd+d2uY7DdSwibWBXKlYfyL7u9aLadg4+pBnKTsFxw6WHQpOnIYDAqmxBvPJ
KLSlt1W2YRrMTfrMvz9JQp8mvvmL/9GAIz9Y0WjzW7yg+VivvpwGw/sWLv1X
Ho4DcxN8ZDINBO6nk4wswtE2+3RPaR0NMjxv/g76E4bOYtsdcig0qLSoOfTn
QBj6rCj3jaLSoGvbBGv0Yghm1yxU2G2gg9fTpZwpnQBcffrOgRUX6WCsZWPA
uOyJgZyDiws2dODwvEltpd5DPjxWPetAh4zLfyKMr97FbQoC56fc6NB1tPWi
1fXbuI+/wK31CbFeO1aPn8cFzbu/Z775QKyXWhLHnuOYZ+Uiob5IBzld9uv4
vFtgW8gWTVjBgAwd0QW7Pe6whee2MOdaggMv2Hu/uwN3ij03tm9iAIdePk9s
lAeob/FfuibDALm6y50XrB8D+UtSf4whMV5z91PqiadwS3xn9/IFBmhpqDHk
5p+C1N33FPuLDIg81s0RkeoHflK59YpXGVDZPAnLi8/g5OPyj18eMqDL/Lnw
pzeB0KncG/4nnQH6Yby/vZNC4GmQRbB1NgPUTYo++W0PBZXRwYAaEgM8XzRw
CzmFQnQI1SusggFtR2bub14ZBhdpP1x3dTKgf/qEgIxMOEy83XDSbJkBoQEq
874nI+DVr9DjuHoG2jJmRs49jwA9gy3a0twz0B/GktNuioCMhW1q37fMgHqX
wM7HJyLhurGsTIAcMf9so6yYWhTMcx9dVWw8Aw3+0zWhtFfAz+SNIJvPgL6C
ncRPoWjYTemXarKeAeMEbhXX49Fg9erm8aFrM8CRMLs/NT4aPksmBax5NANa
f6SHOo/GwACn6zY+X2K9wC7zUscY+DWtlinkT7BgTt670BiQzaU07Q6fAfsB
dUv/vhgI1lix0TBtBgRStMelrWMhXaw5wSKT4NHW6N8PY6FqZYyifS6xf/KK
otK4WJitVzh/r2QG5LYun9nUGQu8HxbHvHEGjpHetL5hxoJMSP3toOoZqNF9
Use/Lg7MjS9FxbfMQMLqI5s/HIyD26ryMukdM3BvRYR5o0EcvPhv/lNe7wzY
nt+54ottHKQtfdYr/TYD2lJJnkl34qByJKSvenQGIjccUTUOiIO+agvHlskZ
cBlsSB+MjYMf72T+9jBmQNwjQlUjM474Lv4ZNPJ9BhwTH51zKokDaVcUof+a
ga6mWfNr9XFw+FxQ1uxfwp9levH+rjgwVb5weImDCVpRI211w3FwY6tk61pO
JiyI9S9L0OMgcIFpvWk9E2L3XUrRno2DlG8l7G0bmdC201dYajEOyiv9vKUE
mGDA3/2peuVr6E425N+7jQnqt127dqx7DWy/7ckHxZigum2sRpXnNXA70vYf
kWKCG1O/n5PvNUgafKzW38WEDPIhm4CNr0FDwcfYaC8TuOW/pJUTbLL59MTF
/Uyg6fvOJhDz3X4J372iyoT0t+5hChteQ0Afde0NTSYIDEiTr3G9hqSyvGhP
bSasSAuvP7H6NZS9fbjriS4T/L2Uxpv/xUG3z4mSF6eY8Nrnx7mfc3HAshc4
+eocE+ZUD5z6xIiDdSdGviaYMMHLgcK9dTQOJOSznDMsmLA0sPEzX3ccHOLz
+Ee6xISVR3PexRN6Gv3QCS63Z4LjbO9UZXEcuHZtFKtzZILhx10Ft97HwbOi
gZy260zIispULngVBwlx6Vr9t4l6y7rCHz+Jg5JHtyljHkxQkwiabb8eBx02
WrYzj5gg+ED4YaZZHDB0eH7+8mXCL/ZBA07tOOCU7fXlCGBC+/Qa32HZOBBb
n7KFO5gJid+51A/yxoEh5ZCKaDTh57mG56eJfHIfWl9V9oYJlGA391N5RJ5T
+k9aJjNB5bXTM9PnsaBwz8MmLpsJ5f/9wECNWJga0WOoFzCBayEsPX1TLLw9
KXS3v5jozzTzcPV4DPCKfXouXMMEUTHrhrEnMVDr77e1uIHQw0DdZuhcDDz8
YZxk2saEXn2eqTqRGGDUzH569ZUJowGp/ac/RMMXZ6UxgR9MGO6PXCrLewVe
3StcC38zwbhibiDd5RWoalHmjf4R469UrlnLvIK0zW68EetY8PBu67b/IqLg
SUmWGr8YC0R5T42eM4wEDamH1XlSLHDZ/O+U0GIE/Hxx6sw5ORaE9j4T9EuO
AFsbul3oARZwfBxrPkZ/CVrrdoXynmLBgaovm3suhsP8jflt2edYsHBIoc9s
NgxyvtalGlxgAfeJg2+s/cNge45D6XNbFvTfXfl2JD0UFo1TJrg9WODelLTB
M+oFFOCtGxmPWKC/Oqo4I/Y5OO06unjiCcGWdnejYoKgf3FkU0AICwp1j/B4
PAuAT8limmvTWBBpXkW9KPEUXDew6tIyWeDI3Ztu/tcXdt6tMDyexwLjBopV
TYsPROhfvPq0jOCTZMdyOy+4+T325aoOFmRsClg6Hn0H5Cwctyf3EuMTirt+
M2/BSLXae+1BFtAs9/uOq92As9G9Fd7TxHjAvNQp0yuwbmX6iR0sYr01eien
2QA63e2snCXYdN3RtOILcKfruPWlBWL+kcP+9TRd+P//XwAHB4eG74Mrh/8P
6VtZnA==
     "]]}, 
   {Hue[0.08640786499873876, 0.6, 0.6], LineBox[CompressedData["
1:eJwtm3c8lf/7x1VGCYkUZWWFVIiKD10qZZSGUCErVIqkCNkroyQhyc5KxrFK
nFz2ONl7ZZ/j2Cohqb737/H4/eXxfFzX+3XN+32f+w97Le7pWm1kYGAQ28TA
8H9/D8LO6X//FlBxk+XPv/8W4N4v0cBfawsYOz7L8LdyAUgFchI/fi7g2Ijq
mlrAAshL6ljQZhZwaD5u8QX7Ahzd7tff2LOA0Utngg2F5kFt/Bvlde4CWjv3
ZhtdmAXdJ03vD5suoFVLwo3GYTq8PDGgdcBwAQMOpu6fyaRD52/6pIT+Au42
5x/VcKKDgT2j2O6zC9jOaGJYwk4Ho2v/xTIcXcDgd7scPWASLPe/e9rEsYA+
ygzsRjlUeNTiZ3uzbB4d1znsJYvH4OmMU89S8TxerPR4MxAwBskst0/4FMyj
jw6J3qo/Bo2gwxOXMY8LN1K2eC+NggiJ53N7+DxmffPU/6YwCs1haWzHb87j
n9i06SrfYZDQrX+/g3MeB1/LfePk6QcVuxKeZNZ5XH+27aZMZR9cCs7yPMQ0
j199hNPL7vWBW2XYZe21OczrF6KdbuyFdvlrvz0n5tDwP3GOzuAecOee1p4p
nsNbho7HIgW6oLNz63SF+RzKRQpp0aNawduyqOy98RzqPajdlGLQCgeXTF5G
XpnDDXzfzcg7WyGQO1/lts4c6jCuh26SbQFV3avPOZXmsEbKxiRbtQnSWlIU
TDnn0GFbiG+DawM4U1Q918tm0ebcWNT3R5Ugbjh5mfZpFot/9pveZK+E9qkw
ydbCWSw3zLvi87YCZLZMtL3NnMXNXykBGW3lMKoRLHY2ahYT3TxJZ++UgXZN
d8Nr21mc5rBcbzhaDALl93Yc5Z9FfY9tPw84vYNGLsWHyrtmsYuyPOS/NwNc
rdY6VLlmkcHYHnhb0qCb1f+l+uZZVPzprTMhmwJh+jFcukszqH9mzb1SIB42
zVRz2jbOoHRbfC6Z4gdTPLvZ37oR9pWvkVr01xh9a/hu2qMZpHA/60hnjcUz
pSmN7xxmsPxJzwUOqXhMNjv0lHSL8Be5ErLhQBIav1ffWqZH2H9/dnA9k4ot
ave29MnMYMmpOmMBgWwsulPNtO3rNHJ93CW/ll+Ex4Tt5NJ6plGeMe94rMQH
LOncdV21fRqPsbr3Kr7+gOWqdwrv1E2jdu4GGb3HH5GyjetGfd40Bv+dfWh8
+BOOFJiWewdM462VUs3wB2S0uLVlltd7GrM3bKiX6yEjlb9gF+nxNDpOi97o
V/qM0/7M94bsp9E/eeHo2fXP+PNKtsB/RtMY7jem1uCIyLq+5rp0aBpTXV72
bheswGeklLQQ6WmUyNovYqNZgZxW59tFxAm79IGbFxwqkKc5SerS7mk8wFX0
vbK6AoUTNXuzGaex83fBTWPLSlRUj1K82TeFfjee21BCq7B4Fcz/dkyhxLVm
r0P5VaicPfU0snkKjy8fzJDqqkK1naoTVVVTmBi+LDrMV43a9PFw4ZwpJKdf
CzOOr0azp3KLfT5T+FTj0n6OiBp0LQwPaHIn+KlqGHduDUYO/uCvcJ7C6u9C
IZUNNUiR+aCVYTeFscGfGgX/1uDhJuW3ToZTODKw5eiARS0yc6gbcMtP4WxV
w6ti/joUPpI6y3xgCoOyf23yl6/D/0yYfdf2TWGlt/X2DZp1aJ9TnzsqMIXz
hyB4i0Md9p3X2ULaMoVpwmbHrSvrMOu5AfncKB2j27cqJ+rVY+3Hj7pqg3Rs
vrwUGm5Vj6PDvFOHe+jYrW6iq+xUjztlB3j2NNHxpyTp+fuoevRsNb03VUxH
OZ6pKsHOeoxZLWf6WkDH7RMidrVj9VgoLBLbmkPHxZg8A4lv9Ui3n6j/mELH
rMMnz3CyN6Du9tsiAWF0vLp4QTvqRAPeVaIUu4TQ0Slh6eWW8w34xHz/BdsA
Ojr6NgweNWxAct7cYz03Op5O21Jfe78BxXUdukRu0VHNR9TtY1wDqrl23Nl5
g47zvZLH2DIa0DBZYSOrCR35PO1SBfMbMPT78sFvl+nIL3WL7l7TgKvhjwMR
6NgnzKV3aKoBJ/krps8o05HXo6Za6nsDdqcx6zQr0NGFQnPqW2vAgpIX279K
0ZFpLU3DcCsFk9V7HliK0ZG6Hq0kw03BsGb+7hlBOubZJ3AX7aag3Vh6zBo3
HXWEJUXnJClofHdu3ZuDjmP8flJxhyh4dlnedMsWOg7qZHxiOkJBSdYyUd6/
k8iaH8Oz8SQFd0VsCkhYncTPN5tyozQoyCyoRZf4MYlZ0S/sqecoOC7XmaVI
n0Ttv8r/8g0o2F7Kt+3z2CT+iuB+LW9EwfLTpvfVv06iV5blN1tTCua2pHR8
6ZnEW8lWtlY3KBh/bVrxcvskmugxOPDdpODT8UPR/Y2TOKLWdiPYhoKPbR3X
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Epilog->{
    GrayLevel[0], 
    Dashing[{Small, Small}], {
     LineBox[{{1., -2}, {1., 2}}], 
     LineBox[{{0.8660254037844386, -2}, {0.8660254037844386, 2}}], 
     LineBox[{{0.5, -2}, {0.5, 2}}], 
     LineBox[{{0., -2}, {0., 2}}], 
     LineBox[{{-0.5, -2}, {-0.5, 2}}], 
     LineBox[{{-0.8660254037844386, -2}, {-0.8660254037844386, 2}}], 
     LineBox[{{-1., -2}, {-1., 2}}]}},
  ImageSize->500,
  Method->{},
  PlotRange->{{-1, 1}, {-0.2717963283414486, 1.025751466932197}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.685093555473051*^9, 3.6850936163663597`*^9, 3.6850936480426807`*^9, 
   3.685093778410561*^9, {3.685093871946858*^9, 3.685093963666316*^9}, {
   3.685093998433321*^9, 3.685094007083309*^9}, {3.685094039141971*^9, 
   3.685094042800355*^9}},
 CellLabel->"Out[221]=",
 CellID->208643455]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Boundary conditions", "Subsection",
 CellChangeTimes->{{3.6850776571818132`*^9, 3.685077659919448*^9}, {
  3.6850829212397842`*^9, 3.685082921900975*^9}, {3.685092779786171*^9, 
  3.68509278182087*^9}},
 CellID->2112455044],

Cell["\<\
Assuming one has done the rescaling in the previous section, there are now \
two solutions near the boundary, where the one we want remains finite and the \
other diverges. Since we represent the function as a sum of the cardinal \
functions (shown above), and these functions are all finite, this condition \
is implemented automatically by the choice of this set of basis functions.\
\>", "Text",
 CellChangeTimes->{{3.685095048306057*^9, 3.685095143039904*^9}},
 CellID->10743530],

Cell["\<\
Near the horizon the solution we want (the ingoing one) goes smoothly to a \
constant, while the one we do not want oscillates more and more rapidly \
closer to the horizon. Luckily, again our basis functions match the behaviour \
of the solution we want: they go smoothly to a constant. So the correct \
solution is automatically picked up.\
\>", "Text",
 CellChangeTimes->{{3.685095048306057*^9, 3.685095209807514*^9}, {
  3.6850970266562023`*^9, 3.6850970897062397`*^9}},
 CellID->1738386601],

Cell["\<\
Hence writing the equation in Eddington-Finkelstein coordinates and working \
with a Chebyshev grid will implicitly solve both boundary conditions, we do \
not have to worry about them further.\
\>", "Text",
 CellChangeTimes->{{3.6850970990677977`*^9, 3.6850971689653263`*^9}},
 CellID->1886024033]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generalized Eigenvalue Equation", "Section",
 CellChangeTimes->{{3.6846648127142897`*^9, 3.684664816906106*^9}},
 CellID->1062523101],

Cell["\<\
The simplest type of quasinormal mode equation is of the form\
\>", "Text",
 CellChangeTimes->{{3.684749321026819*^9, 3.684749329260311*^9}},
 CellID->1528765870],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["c", "0"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Phi]", "(", "u", ")"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["c", "1"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Phi]", "'"}], 
      RowBox[{"(", "u", ")"}]}], "+", 
     RowBox[{
      RowBox[{
       SubscriptBox["c", "2"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Phi]", "''"}], 
      RowBox[{"(", "u", ")"}]}]}], "=", "0"}], TraditionalForm]], 
  "InlineMath"],
 ","
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.6847493325254793`*^9, 3.684749407283175*^9}},
 CellID->1636640841],

Cell[TextData[{
 "where each of the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "i"], TraditionalForm]], "InlineMath"],
 " are linear in ",
 Cell[BoxData[
  FormBox["\[Omega]", TraditionalForm]], "InlineMath"],
 ": ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["c", "i"], "(", 
     RowBox[{"u", ",", "\[Omega]"}], ")"}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", 
       RowBox[{"i", ",", "0"}]], "(", "u", ")"}], "+", 
     RowBox[{"\[Omega]", " ", 
      RowBox[{
       SubscriptBox["c", 
        RowBox[{"i", ",", "1"}]], "(", "u", ")"}]}]}]}], TraditionalForm]], 
  "InlineMath"],
 "."
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.684749408479035*^9, 3.6847494888575487`*^9}, {
  3.685084376093367*^9, 3.685084376862753*^9}},
 CellID->1395168574],

Cell[TextData[{
 "When we discretize the radial variable using the spectral methods as above, \
",
 Cell[BoxData[
  FormBox["u", TraditionalForm]], "InlineMath"],
 " becomes a vector and the derivatives are represented by matrices."
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.684749516186462*^9, 3.684749558601472*^9}, {
  3.685078896645976*^9, 3.6850788982324057`*^9}},
 CellID->721735607],

Cell[TextData[{
 "Very concretely what we do is first to collect the powers of the frequency ",
 Cell[BoxData[
  FormBox["\[Omega]", TraditionalForm]], "InlineMath"],
 " in the equation. For each of these we compute the discretized coefficient \
of each derivative of the function ",
 Cell[BoxData[
  FormBox["\[Phi]", TraditionalForm]], "InlineMath"],
 ", then multiply it with the corresponding derivative matrix and add them."
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.684749571949778*^9, 3.6847496941430264`*^9}},
 CellID->1310912195],

Cell["\<\
This brings the equation in the form\
\>", "Text",
 Deletable->True,
 CellChangeTimes->{{3.684749571949778*^9, 3.684749697788455*^9}},
 CellID->739824142],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["M", "0"], "+", 
      RowBox[{"\[Omega]", " ", 
       SubscriptBox["M", "1"]}]}], ")"}], "\[Phi]"}], "=", "0"}], 
  TraditionalForm]], "InlineMath"]], "Text",
 Deletable->True,
 CellChangeTimes->{{3.684749699146349*^9, 3.684749724650077*^9}},
 CellID->544592701],

Cell[TextData[{
 "where the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "i"], TraditionalForm]], "InlineMath"],
 " are now purely numerical matrices. Explicitly,"
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.6847497268205023`*^9, 3.68474974235052*^9}, {
  3.684749774821732*^9, 3.684749784062748*^9}, {3.685085531326931*^9, 
  3.685085534506287*^9}},
 CellID->1659568876],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["M", 
    RowBox[{"0", ",", "ij"}]], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["c", "0"], "(", 
      SubscriptBox["x", "i"], ")"}], 
     SubscriptBox["\[Delta]", "ij"]}], "+", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "1"], "(", 
      SubscriptBox["x", "i"], ")"}], 
     SuperscriptBox[
      SubscriptBox["D", "ij"], 
      RowBox[{"(", "1", ")"}]]}], "+", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "2"], "(", 
      SubscriptBox["x", "i"], ")"}], 
     SuperscriptBox[
      SubscriptBox["D", "ij"], 
      RowBox[{"(", "2", ")"}]]}]}]}], 
  TraditionalForm]], "InlineMath"]], "Text",
 Deletable->True,
 CellChangeTimes->{{3.6847497268205023`*^9, 3.68474974235052*^9}, {
  3.684749774821732*^9, 3.684749784062748*^9}, {3.685085531326931*^9, 
  3.6850855360154123`*^9}},
 CellID->1698227968],

Cell[TextData[{
 "and similarly for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "1"], TraditionalForm]], "InlineMath"],
 "."
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.6847497268205023`*^9, 3.68474974235052*^9}, {
  3.684749774821732*^9, 3.684749784062748*^9}, {3.685085531326931*^9, 
  3.685085546705195*^9}},
 CellID->1446509982],

Cell[TextData[{
 "In this form the equation has become a generalized eigenvalue equation, \
which can be solved using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s built in function Eigenvalues."
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.6847497268205023`*^9, 3.68474974235052*^9}, {
  3.684749774821732*^9, 3.684749810620026*^9}, {3.685085556431541*^9, 
  3.685085563238483*^9}},
 CellID->1307832486]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Extension: coupled equations, higher powers of \[Omega]\
\>", "Section",
 CellChangeTimes->{{3.68466482083107*^9, 3.684664831113942*^9}},
 CellID->443200371],

Cell["\<\
The above can be easily extended in a few directions.\
\>", "Text",
 CellChangeTimes->{{3.68474988249019*^9, 3.684749895958984*^9}},
 CellID->2121721600],

Cell["\<\
Firstly, if we have a coupled system of equations, say:\
\>", "Text",
 CellChangeTimes->{{3.68474988249019*^9, 3.684749913760371*^9}},
 CellID->378303749],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["c", "0"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Phi]", "(", "u", ")"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["c", "1"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Phi]", "'"}], 
      RowBox[{"(", "u", ")"}]}], "+", 
     RowBox[{
      RowBox[{
       SubscriptBox["c", "2"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Phi]", "''"}], 
      RowBox[{"(", "u", ")"}]}]}], "=", "0"}], TraditionalForm]], 
  "InlineMath"],
 ","
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.6847493325254793`*^9, 3.684749407283175*^9}, {
  3.684749919427993*^9, 3.68474991943209*^9}},
 CellID->141532321],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["d", "0"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Psi]", "(", "u", ")"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["d", "1"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Psi]", "'"}], 
      RowBox[{"(", "u", ")"}]}], "+", 
     RowBox[{
      RowBox[{
       SubscriptBox["d", "2"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Psi]", "''"}], 
      RowBox[{"(", "u", ")"}]}]}], "=", "0"}], TraditionalForm]], 
  "InlineMath"],
 ","
}], "Text",
 CellChangeTimes->{{3.6847499264077663`*^9, 3.6847499401733847`*^9}},
 CellID->1425289929],

Cell[TextData[{
 "we may simply join the two functions ",
 Cell[BoxData[
  FormBox["\[Phi]", TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox["\[Psi]", TraditionalForm]], "InlineMath"],
 " into a single vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"\[Phi]", ",", "\[Psi]"}], ")"}], TraditionalForm]], "InlineMath"],
 " of twice the size."
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.6847493325254793`*^9, 3.684749407283175*^9}, 
   3.684749919427993*^9, {3.6847499585415707`*^9, 3.6847500178037024`*^9}, 
   3.684750051357712*^9},
 CellID->21938408],

Cell[CellGroupData[{

Cell[TextData[{
 "We split the equation into coefficients of ",
 Cell[BoxData[
  FormBox["\[Omega]", TraditionalForm]], "InlineMath"],
 " as before, but now the matrix ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "0"], TraditionalForm]], "InlineMath"],
 " above becomes"
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.684750054428851*^9, 3.684750095640644*^9}},
 CellID->236731165],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"\\!\\(\\*SubscriptBox[\\(M\\), \\(0, 1\\)]\\)(\[Phi])\"\>", \
"\<\"\\!\\(\\*SubscriptBox[\\(M\\), \\(0, 1\\)]\\)(\[Psi])\"\>"},
     {"\<\"\\!\\(\\*SubscriptBox[\\(M\\), \\(0, 2\\)]\\)(\[Phi])\"\>", \
"\<\"\\!\\(\\*SubscriptBox[\\(M\\), \\(0, 2\\)]\\)(\[Psi])\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.684749196538405*^9, 3.684750164540104*^9},
 CellID->1629887900]
}, Open  ]],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["M", 
     RowBox[{"0", ",", "1"}]], "(", "\[Phi]", ")"}], TraditionalForm]], 
  "InlineMath"],
 " is the coefficient of ",
 Cell[BoxData[
  FormBox["\[Phi]", TraditionalForm]], "InlineMath"],
 " in the part of the first equation that contains no ",
 Cell[BoxData[
  FormBox["\[Omega]", TraditionalForm]], "InlineMath"],
 ". The matrix ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "1"], TraditionalForm]], "InlineMath"],
 " above gets a similar modification, and we can solve the same generalized \
eigenvalue problem, but now with matrices of twice the size."
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.6847502431807747`*^9, 3.684750327182548*^9}, {
  3.68507895948779*^9, 3.685079009381372*^9}},
 CellID->224534168],

Cell[TextData[{
 "Further, we can generalize it to an equation which instead of linear in ",
 Cell[BoxData[
  FormBox["\[Omega]", TraditionalForm]], "InlineMath"],
 " is an arbitrary polynomial in ",
 Cell[BoxData[
  FormBox["\[Omega]", TraditionalForm]], "InlineMath"],
 ". Whether coupled or not, the procedure above will bring such a (system of) \
equation(s) in the form"
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.6847503572530117`*^9, 3.684750430105092*^9}},
 CellID->1378548966],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["M", "0"], "+", 
        RowBox[{
         SubscriptBox["M", "1"], "\[Omega]"}], "+", 
        RowBox[{
         SubscriptBox["M", "2"], 
         SuperscriptBox["\[Omega]", "2"]}], "+"}], "..."}], "+", " ", 
      RowBox[{
       SubscriptBox["M", "p"], 
       SuperscriptBox["\[Omega]", "p"]}]}], ")"}], "\[Phi]"}], "=", "0"}], 
  TraditionalForm]], "InlineMath"]], "Text",
 Deletable->True,
 CellChangeTimes->{{3.684750432205535*^9, 3.684750484333363*^9}},
 CellID->1077128890],

Cell[CellGroupData[{

Cell[TextData[{
 "We can rewrite this into an equation that is linear in ",
 Cell[BoxData[
  FormBox["\[Omega]", TraditionalForm]], "InlineMath"],
 " and acts on the vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      RowBox[{"(", "0", ")"}]], ",", 
     SuperscriptBox["\[Phi]", 
      RowBox[{"(", "1", ")"}]], ",", "...", ",", " ", 
     SuperscriptBox["\[Phi]", 
      RowBox[{"(", 
       RowBox[{"p", "-", "1"}], ")"}]]}], ")"}], TraditionalForm]], 
  "InlineMath"],
 ", with a matrix that looks like, for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "=", "3"}], TraditionalForm]], "InlineMath"],
 ":"
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.684750615809765*^9, 3.684750684720119*^9}, {
  3.684751530058791*^9, 3.684751539876614*^9}, {3.684751589393778*^9, 
  3.684751631267837*^9}},
 CellID->61825957],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SubscriptBox["M", "0"], 
      SubscriptBox["M", "1"], 
      RowBox[{
       SubscriptBox["M", "2"], "+", 
       RowBox[{"\[Omega]", " ", 
        SubscriptBox["M", "3"]}]}]},
     {
      RowBox[{"-", "\[Omega]"}], "1", "0"},
     {"0", 
      RowBox[{"-", "\[Omega]"}], "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.684751581526142*^9},
 CellID->1959208299]
}, Open  ]],

Cell[TextData[{
 "The first row represents the actual equation, while the other rows enforce \
that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Phi]", 
     RowBox[{"(", "i", ")"}]], "=", 
    RowBox[{
     SuperscriptBox["\[Omega]", "i"], "\[Phi]"}]}], TraditionalForm]], 
  "InlineMath"],
 "."
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.684751635435709*^9, 3.684751684684124*^9}, {
  3.685079035371941*^9, 3.685079046554841*^9}},
 CellID->1227876],

Cell[TextData[{
 "Note that ",
 Cell[BoxData[
  FormBox["\[Phi]", TraditionalForm]], "InlineMath"],
 " here might already be a combination of several functions, in the case of a \
coupled system of equations."
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.68475069082848*^9, 3.6847507144684143`*^9}},
 CellID->2029057168],

Cell[TextData[{
 "This generlizes straightforwardly to arbitrary powers of ",
 Cell[BoxData[
  FormBox["\[Omega]", TraditionalForm]], "InlineMath"],
 ", with the first row representing the actual equations, and apart from that \
identity matrices on the main diagonal and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "\[Omega]"}], TraditionalForm]], "InlineMath"],
 " on the diagonal below the main diagonal setting ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Phi]", 
     RowBox[{"(", "i", ")"}]], "=", 
    RowBox[{
     SuperscriptBox["\[Omega]", "i"], "\[Phi]"}]}], TraditionalForm]], 
  "InlineMath"],
 "."
}], "Text",
 Deletable->True,
 CellChangeTimes->{{3.685077723008621*^9, 3.6850778001791687`*^9}, {
  3.685084857543036*^9, 3.6850848614379187`*^9}},
 CellID->323162344]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.68466482083107*^9, 3.684664831113942*^9}, {
  3.6847524665246477`*^9, 3.684752468242528*^9}},
 CellID->1035524837],

Cell["Some excellent reviews on numerical relativity are:", "Text",
 CellChangeTimes->{{3.684752472443664*^9, 3.684752494798904*^9}, 
   3.684753182698015*^9},
 CellID->1460668628],

Cell[TextData[ButtonBox["P. M. Chesler and L. G. Yaffe, Numerical solution of \
gravitational dynamics in asymptotically anti-de Sitter spacetimes, JHEP 07 \
(2014) 086",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://arxiv.org/abs/1309.1439"], None}]], "Text",
 CellChangeTimes->{{3.685090813698454*^9, 3.685090828963521*^9}},
 CellID->1140688258],

Cell[TextData[ButtonBox["O. J. C. Dias, J. E. Santos and B. Way, Numerical \
Methods for Finding Stationary Gravitational Solutions, (2015)",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://arxiv.org/abs/1510.02804"], None}]], "Text",
 CellChangeTimes->{{3.685090868852984*^9, 3.685090884688878*^9}},
 CellID->682858425],

Cell[TextData[ButtonBox["P. Grandclement and J. Novak, Spectral Methods for \
Numerical Relativity, Living Rev. Relativity\[NonBreakingSpace]12 (2009)",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://relativity.livingreviews.org/Articles/lrr-2009-1/"], 
   None}]], "Text",
 CellChangeTimes->{{3.685081213805132*^9, 3.685081219151606*^9}, {
  3.6850812607796507`*^9, 3.685081267160859*^9}, {3.685081385560378*^9, 
  3.6850814040381603`*^9}},
 CellID->1664822869],

Cell["\<\
and the standard reference on spectral methods is\
\>", "Text",
 CellChangeTimes->{{3.684753244326166*^9, 3.6847532498488197`*^9}},
 CellID->2096338536],

Cell[TextData[ButtonBox["J. P. Boyd, Chebyshev & Fourier Spectral Methods, \
Courier Dover Publications (2001)",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://www.springer.com/us/book/9783540514879"], None}]], "Text",
 CellChangeTimes->{{3.68475329970779*^9, 3.684753325796701*^9}, {
  3.685081547607626*^9, 3.685081554273788*^9}},
 CellID->1979089624]
}, Open  ]],

Cell[CellGroupData[{

Cell["More About", "TutorialMoreAboutSection",
 CellID->23220180],

Cell["XXXX", "TutorialMoreAbout",
 CellID->1567025153]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Tutorials", "RelatedTutorialsSection",
 CellID->415694126],

Cell[TextData[ButtonBox["Introduction",
 BaseStyle->"Link",
 ButtonData->"paclet:QNMspectral/tutorial/Introduction"]], "RelatedTutorials",\

 CellChangeTimes->{{3.684761065067959*^9, 3.684761073265926*^9}},
 CellID->731816627],

Cell[TextData[ButtonBox["Simple Example",
 BaseStyle->"Link",
 ButtonData->"paclet:QNMspectral/tutorial/SimpleExample"]], "RelatedTutorials",\

 CellChangeTimes->{{3.684761819739996*^9, 3.6847618313972063`*^9}},
 CellID->498253685],

Cell[TextData[{
 ButtonBox["Extensions",
  BaseStyle->"Link",
  ButtonData->"paclet:QNMspectral/tutorial/Extensions"],
 " "
}], "RelatedTutorials",
 CellChangeTimes->{{3.6847609803643503`*^9, 3.684761005586635*^9}},
 CellID->1415367576],

Cell[TextData[ButtonBox["Method",
 BaseStyle->"Link",
 ButtonData->"paclet:QNMspectral/tutorial/Method"]], "RelatedTutorials",
 CellChangeTimes->{{3.6847609803643503`*^9, 3.684761051155002*^9}},
 CellID->145118313]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Wolfram Education Group Courses", "TutorialRelatedLinksSection",
 CellID->415694148],

Cell["XXXX", "TutorialRelatedLinks",
 CellID->415694149]
}, Open  ]]
}, Open  ]]
},
WindowSize->{925, 851},
WindowMargins->{{-167, Automatic}, {Automatic, -1080}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "TutorialPageStyles.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 325, 14, 24, "History",
 CellID->1247902091],
Cell[CellGroupData[{
Cell[907, 38, 68, 1, 29, "CategorizationSection",
 CellID->1122911449],
Cell[978, 41, 81, 2, 70, "Categorization",
 CellID->686433507],
Cell[1062, 45, 84, 2, 70, "Categorization",
 CellID->605800465],
Cell[1149, 49, 81, 2, 70, "Categorization",
 CellID->468444828],
Cell[1233, 53, 82, 1, 70, "Categorization"]
}, Closed]],
Cell[CellGroupData[{
Cell[1352, 59, 56, 1, 19, "KeywordsSection",
 CellID->1427428552],
Cell[1411, 62, 45, 1, 70, "Keywords",
 CellID->1251852827]
}, Closed]],
Cell[CellGroupData[{
Cell[1493, 68, 53, 1, 19, "DetailsSection",
 CellID->307771771],
Cell[1549, 71, 63, 2, 70, "Details",
 CellID->218895918],
Cell[1615, 75, 69, 2, 70, "Details",
 CellID->350963985],
Cell[1687, 79, 66, 2, 70, "Details",
 CellID->795871300],
Cell[1756, 83, 71, 2, 70, "Details",
 CellID->199739161],
Cell[1830, 87, 60, 2, 70, "Details",
 CellID->40625308],
Cell[1893, 91, 61, 2, 70, "Details",
 CellID->357121918],
Cell[1957, 95, 62, 2, 70, "Details",
 CellID->35949532],
Cell[2022, 99, 78, 2, 70, "Details",
 CellID->929432370],
Cell[2103, 103, 67, 2, 70, "Details",
 CellID->240026365]
}, Closed]],
Cell[CellGroupData[{
Cell[2207, 110, 111, 2, 106, "Title",
 CellID->509267359],
Cell[CellGroupData[{
Cell[2343, 116, 162, 2, 43, "Section",
 CellID->278927872],
Cell[2508, 120, 323, 6, 40, "Text",
 CellID->1685543347],
Cell[2834, 128, 335, 7, 40, "Text",
 CellID->65355837],
Cell[3172, 137, 707, 19, 41, "Text",
 CellID->374829256],
Cell[CellGroupData[{
Cell[3904, 160, 240, 5, 40, "Text",
 CellID->1617778002],
Cell[4147, 167, 1207, 32, 29, "Input",
 InitializationCell->False,
 CellID->77585105]
}, Open  ]],
Cell[5369, 202, 924, 26, 43, "Text",
 CellID->660767926],
Cell[CellGroupData[{
Cell[6318, 232, 297, 6, 23, "Text",
 CellID->205460912],
Cell[CellGroupData[{
Cell[6640, 242, 1101, 32, 45, "Input",
 InitializationCell->False,
 CellID->2112883632],
Cell[7744, 276, 724, 22, 43, "Output",
 CellID->1803722070],
Cell[8471, 300, 342, 11, 24, "Output",
 CellID->1277669438]
}, Open  ]]
}, Open  ]],
Cell[8840, 315, 535, 16, 24, "Text",
 CellID->1101258113],
Cell[9378, 333, 992, 26, 75, "Text",
 CellID->967003255],
Cell[10373, 361, 451, 8, 57, "Text",
 CellID->1933901115],
Cell[CellGroupData[{
Cell[10849, 373, 247, 5, 40, "Text",
 CellID->489084805],
Cell[CellGroupData[{
Cell[11121, 382, 1057, 29, 45, "Input",
 InitializationCell->False,
 CellID->569349032],
Cell[12181, 413, 611, 19, 43, "Output",
 CellID->1862883090],
Cell[12795, 434, 343, 10, 24, "Output",
 CellID->1312004017]
}, Open  ]]
}, Open  ]],
Cell[13165, 448, 463, 13, 41, "Text",
 CellID->489426323],
Cell[13631, 463, 1023, 24, 75, "Text",
 CellID->1754192859],
Cell[14657, 489, 259, 6, 23, "Text",
 CellID->592404874],
Cell[CellGroupData[{
Cell[14941, 499, 186, 3, 39, "Subsection",
 CellID->1478924877],
Cell[15130, 504, 411, 7, 57, "Text",
 CellID->664198110]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15590, 517, 209, 5, 43, "Section",
 CellID->1481255430],
Cell[15802, 524, 368, 7, 57, "Text",
 CellID->1713154644],
Cell[16173, 533, 406, 8, 57, "Text",
 CellID->780243156],
Cell[16582, 543, 921, 32, 47, "Text",
 CellID->225188045],
Cell[17506, 577, 853, 25, 46, "Text",
 CellID->667655692],
Cell[18362, 604, 355, 7, 57, "Text",
 CellID->2034219487],
Cell[18720, 613, 369, 8, 40, "Text",
 CellID->1991738820],
Cell[19092, 623, 581, 21, 32, "Text",
 CellID->1421600843],
Cell[19676, 646, 535, 11, 57, "Text",
 CellID->616759975],
Cell[20214, 659, 403, 13, 23, "Text",
 CellID->988872173],
Cell[20620, 674, 987, 37, 36, "Text",
 CellID->1630184905],
Cell[CellGroupData[{
Cell[21632, 715, 505, 12, 40, "Text",
 CellID->1087114798],
Cell[CellGroupData[{
Cell[22162, 731, 2541, 76, 137, "Input",
 CellID->1104739231],
Cell[24706, 809, 114213, 1893, 319, "Output",
 CellID->208643455]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[138968, 2708, 229, 4, 39, "Subsection",
 CellID->2112455044],
Cell[139200, 2714, 493, 8, 74, "Text",
 CellID->10743530],
Cell[139696, 2724, 505, 9, 74, "Text",
 CellID->1738386601],
Cell[140204, 2735, 308, 6, 40, "Text",
 CellID->1886024033]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[140561, 2747, 139, 2, 43, "Section",
 CellID->1062523101],
Cell[140703, 2751, 172, 4, 23, "Text",
 CellID->1528765870],
Cell[140878, 2757, 776, 27, 23, "Text",
 CellID->1636640841],
Cell[141657, 2786, 806, 29, 27, "Text",
 CellID->1395168574],
Cell[142466, 2817, 399, 10, 40, "Text",
 CellID->721735607],
Cell[142868, 2829, 548, 12, 57, "Text",
 CellID->1310912195],
Cell[143419, 2843, 164, 5, 23, "Text",
 CellID->739824142],
Cell[143586, 2850, 376, 12, 21, "Text",
 CellID->544592701],
Cell[143965, 2864, 384, 11, 23, "Text",
 CellID->1659568876],
Cell[144352, 2877, 903, 30, 26, "Text",
 CellID->1698227968],
Cell[145258, 2909, 346, 11, 23, "Text",
 CellID->1446509982],
Cell[145607, 2922, 422, 11, 40, "Text",
 CellID->1307832486]
}, Open  ]],
Cell[CellGroupData[{
Cell[146066, 2938, 167, 4, 43, "Section",
 CellID->443200371],
Cell[146236, 2944, 163, 4, 23, "Text",
 CellID->2121721600],
Cell[146402, 2950, 164, 4, 23, "Text",
 CellID->378303749],
Cell[146569, 2956, 823, 28, 23, "Text",
 CellID->141532321],
Cell[147395, 2986, 760, 26, 23, "Text",
 CellID->1425289929],
Cell[148158, 3014, 597, 18, 23, "Text",
 CellID->21938408],
Cell[CellGroupData[{
Cell[148780, 3036, 391, 12, 23, "Text",
 CellID->236731165],
Cell[149174, 3050, 914, 21, 44, "Output",
 CellID->1629887900]
}, Open  ]],
Cell[150103, 3074, 813, 24, 61, "Text",
 CellID->224534168],
Cell[150919, 3100, 494, 12, 40, "Text",
 CellID->1378548966],
Cell[151416, 3114, 626, 20, 26, "Text",
 CellID->1077128890],
Cell[CellGroupData[{
Cell[152067, 3138, 871, 27, 43, "Text",
 CellID->61825957],
Cell[152941, 3167, 907, 28, 56, "Output",
 CellID->1959208299]
}, Open  ]],
Cell[153863, 3198, 477, 16, 24, "Text",
 CellID->1227876],
Cell[154343, 3216, 327, 9, 40, "Text",
 CellID->2029057168],
Cell[154673, 3227, 799, 23, 58, "Text",
 CellID->323162344]
}, Open  ]],
Cell[CellGroupData[{
Cell[155509, 3255, 166, 3, 43, "Section",
 CellID->1035524837],
Cell[155678, 3260, 180, 3, 23, "Text",
 CellID->1460668628],
Cell[155861, 3265, 357, 7, 40, "Text",
 CellID->1140688258],
Cell[156221, 3274, 328, 6, 40, "Text",
 CellID->682858425],
Cell[156552, 3282, 470, 9, 23, "Text",
 CellID->1664822869],
Cell[157025, 3293, 162, 4, 23, "Text",
 CellID->2096338536],
Cell[157190, 3299, 361, 7, 23, "Text",
 CellID->1979089624]
}, Open  ]],
Cell[CellGroupData[{
Cell[157588, 3311, 65, 1, 72, "TutorialMoreAboutSection",
 CellID->23220180],
Cell[157656, 3314, 54, 1, 22, "TutorialMoreAbout",
 CellID->1567025153]
}, Open  ]],
Cell[CellGroupData[{
Cell[157747, 3320, 72, 1, 72, "RelatedTutorialsSection",
 CellID->415694126],
Cell[157822, 3323, 226, 5, 22, "RelatedTutorials",
 CellID->731816627],
Cell[158051, 3330, 231, 5, 22, "RelatedTutorials",
 CellID->498253685],
Cell[158285, 3337, 236, 7, 22, "RelatedTutorials",
 CellID->1415367576],
Cell[158524, 3346, 214, 4, 22, "RelatedTutorials",
 CellID->145118313]
}, Open  ]],
Cell[CellGroupData[{
Cell[158775, 3355, 98, 1, 72, "TutorialRelatedLinksSection",
 CellID->415694148],
Cell[158876, 3358, 56, 1, 22, "TutorialRelatedLinks",
 CellID->415694149]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
