(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    259685,       5165]
NotebookOptionsPosition[    250217,       4858]
NotebookOutlinePosition[    253122,       4934]
CellTagsIndexPosition[    253041,       4929]
WindowTitle->Extensions
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["Q N M SPECTRAL TUTORIAL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Overview\"\>":>Documentation`HelpLookup[
       "paclet:QNMspectral/tutorial/QNMspectralOverview"], "\<\"Simple \
Example\"\>":>Documentation`HelpLookup[
       "paclet:QNMspectral/tutorial/SimpleExample"], "\<\"Method\"\>":>
       Documentation`HelpLookup["paclet:QNMspectral/tutorial/Method"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"RelatedTutorialsSection"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"QNMspectral/tutorial/Extensions\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["QNMspectral/tutorial/Extensions"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/QNMspectral/tutorial/\
Extensions.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$8026], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "QNMspectral/tutorial/Extensions", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[CellGroupData[{

Cell["Extensions", "Title",
 CellID->509267359],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{
     Cell["Computing and viewing eigenfunctions"],
      "paclet:QNMspectral/tutorial/Extensions#17448368",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> 
            Association[{
              "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
               "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> \
<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.0-c060 61.134777, \
2010/02/12-17:32:00> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmp:CreatorTool=Adobe Photoshop CS5 Macintosh \
xmpMM:InstanceID=xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A \
xmpMM:DocumentID=xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A \
stRef:documentID=xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
     Cell["Numerical Background"],
      "paclet:QNMspectral/tutorial/Extensions#724119334",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> 
            Association[{
              "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
               "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> \
<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.0-c060 61.134777, \
2010/02/12-17:32:00> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmp:CreatorTool=Adobe Photoshop CS5 Macintosh \
xmpMM:InstanceID=xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A \
xmpMM:DocumentID=xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A \
stRef:documentID=xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
     Cell["Coupled equations"],
      "paclet:QNMspectral/tutorial/Extensions#1227182867",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> 
            Association[{
              "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
               "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> \
<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.0-c060 61.134777, \
2010/02/12-17:32:00> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmp:CreatorTool=Adobe Photoshop CS5 Macintosh \
xmpMM:InstanceID=xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A \
xmpMM:DocumentID=xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A \
stRef:documentID=xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
     Cell["Higher powers of the frequency"],
      "paclet:QNMspectral/tutorial/Extensions#1672305947",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> 
            Association[{
              "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
               "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> \
<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.0-c060 61.134777, \
2010/02/12-17:32:00> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmp:CreatorTool=Adobe Photoshop CS5 Macintosh \
xmpMM:InstanceID=xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A \
xmpMM:DocumentID=xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A \
stRef:documentID=xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]}
  }]], "TutorialJumpBox"],

Cell[TextData[{
 "In this guide we discuss several extensions of the ",
 ButtonBox["simple case of a massless scalar",
  BaseStyle->"Link",
  ButtonData->"paclet:QNMspectral/tutorial/SimpleExample"],
 " in ",
 Cell[BoxData[
  SubscriptBox["AdS", "5"]], "InlineFormula"],
 "."
}], "Text",
 CellID->502995283],

Cell["\<\
We first show how to compute the eigenfunctions in addition to the modes.\
\>", "Text",
 CellID->135622400],

Cell["\<\
The package is directly applicable to coupled equations, perturbations on top \
of a numerical background, and equations of higher order in the frequency. We \
discuss all these generalizations below.\
\>", "Text",
 CellID->1916731237],

Cell["This loads the package:", "MathCaption",
 CellID->1825449234],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<QNMspectral`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1373894796],

Cell[CellGroupData[{

Cell["Computing and viewing eigenfunctions", "Section",
 CellID->17448368],

Cell[TextData[{
 "We continue with the equation for a massless scalar perturbation in \
Schwarzschild ",
 Cell[BoxData[
  SubscriptBox["AdS", "5"]], "InlineFormula"],
 " used in the ",
 ButtonBox["basic tutorial",
  BaseStyle->"Link",
  ButtonData->"paclet:QNMspectral/tutorial/SimpleExample"],
 "."
}], "Text",
 CellID->932219416],

Cell[BoxData[
 RowBox[{
  RowBox[{"eq\[Phi]", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "3"}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["q", "2"], " ", 
        SuperscriptBox["u", "2"]}], "-", 
       RowBox[{"9", " ", 
        SuperscriptBox["u", "4"]}], "+", 
       RowBox[{"6", " ", "\[ImaginaryI]", " ", "u", " ", "\[Lambda]"}]}], 
      ")"}], " ", 
     RowBox[{"\[Delta]\[Phi]fin", "[", "u", "]"}]}], "+", 
    RowBox[{"u", " ", 
     RowBox[{"(", 
      RowBox[{"3", "-", 
       RowBox[{"7", " ", 
        SuperscriptBox["u", "4"]}], "+", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "u", " ", "\[Lambda]"}]}], 
      ")"}], " ", 
     RowBox[{
      SuperscriptBox["\[Delta]\[Phi]fin", "\[Prime]",
       MultilineFunction->None], "[", "u", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["u", "2"], "-", 
       SuperscriptBox["u", "6"]}], ")"}], " ", 
     RowBox[{
      SuperscriptBox["\[Delta]\[Phi]fin", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "u", "]"}]}]}]}], ";"}]], "Input",
 InitializationCell->False,
 CellLabel->"In[1]:=",
 CellID->165628634],

Cell[TextData[{
 "To compute the quasinormal mode functions ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["\[Phi]", "n"], 
   RowBox[{"(", "z", ")"}]}]], "InlineFormula"],
 " along with their frequencies ",
 Cell[BoxData[
  SubscriptBox["\[Omega]", "n"]], "InlineFormula"],
 ", we simply set the option ",
 Cell[BoxData["Eigenfunctions"], "InlineFormula"],
 " to ",
 Cell[BoxData["True"], "InlineFormula"],
 "."
}], "Text",
 CellID->262088086],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"modes", "=", 
    RowBox[{"GetAccurateModes", "[", 
     RowBox[{
      RowBox[{"eq\[Phi]", "/.", 
       RowBox[{"q", "\[Rule]", "0"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"60", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"120", ",", "0"}], "}"}], ",", 
      RowBox[{"Eigenfunctions", "\[Rule]", "True"}]}], "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 InitializationCell->False,
 CellLabel->"In[2]:=",
 CellID->1911878601],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.137804`", ",", "Null"}], "}"}]], "Output",
 ImageSize->{116, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->148385296]
}, Open  ]],

Cell["\<\
Now modes contains both the functions and the frequencies. We can still use \
the same functions to show the frequencies:\
\>", "Text",
 CellID->1547154726],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowModes", "[", "modes", "]"}]], "Input",
 InitializationCell->False,
 CellLabel->"In[3]:=",
 CellID->657976911],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, 
      {RGBColor[0, 0, 1], PointSize[Large], AbsoluteThickness[1.6], 
       StyleBox[
        PointBox[{{-1.5597257968594547`, -1.3733378716334368`}, {
         1.5597257962512536`, -1.3733378721426939`}, {
         2.584755759070081, -2.3817869999640666`}, {-2.584761161589142, \
-2.3818004075182126`}, {-3.572358665793206, -3.346554396602073}, {
         3.5978388498989493`, -3.37818635013427}}],
        FontSize->30]}, {}}, {}, {}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0.},
    BaseStyle->{FontSize -> 30},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox["\"Im \[Omega]\"", TraditionalForm], None}, {
       FormBox["\"Re \[Omega]\"", TraditionalForm], None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->600,
    LabelStyle->{FontSize -> 30},
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{-3.572358665793206, 3.5978388498989493`}, {-3.37818635013427,
      0.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   TagBox[GridBox[{
      {"\<\"n\"\>", "\<\"Re \\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(n\\)]\\)\
\"\>", "\<\"Im \\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(n\\)]\\)\"\>"},
      {"1", "\<\"\[PlusMinus] \
\\!\\(\\*FormBox[\\\"1.5597257968594546718`9.025881632681429\\\", \
TraditionalForm]\\)\"\>", 
       RowBox[{"-", "1.3733378716334367908`8.970610773993151"}]},
      {"2", "\<\"\[PlusMinus] \
\\!\\(\\*FormBox[\\\"2.5847557590700809271`6.017032967056268\\\", \
TraditionalForm]\\)\"\>", 
       RowBox[{"-", "2.3817869999640666201`5.981516375916267"}]},
      {"3", "\<\"\[PlusMinus] \
\\!\\(\\*FormBox[\\\"3.572358665793205823`2.013716018251464\\\", \
TraditionalForm]\\)\"\>", 
       RowBox[{"-", "3.3465543966020732114`1.9853588512013238"}]}
     },
     AutoDelete->False,
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]}], "}"}]], "Output",
 ImageSize->{834, 398},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->844144415]
}, Open  ]],

Cell["Now we can also look at the eigenfunctions:", "Text",
 CellID->815983778],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotEigenfunctions", "[", 
  RowBox[{"modes", ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<u\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[\(u\), \(4\)]\)\[Delta]\[Phi](u)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 InitializationCell->False,
 CellLabel->"In[4]:=",
 CellID->1788956318],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQl8E8Xbx8N9yamACoiIKHJfigqCiCIgCHIoKih4IKIURK2i1AOrCPUg
ihSlglSw+oeqVCloQQpUXqpGLWKQigUKFAoUCAQaaGHf5+lMN5tkk2yS3ewm
fb6f1U9JNrOTye785pl55nlaPTJ1xMTKJpPp2ZrwvxETXug3ffqEGSMbwD9G
xzz75BMxjz82KOa5x594fPqNj1SBF9+rZDKNgfPxbyHymUgQBEFUYPRWIf1R
sRHUbc+KUDF1SzNsxdQtzbAVU7c0w1ZM3dIMWzF1SzNsxVQvLUKpCL+1YSum
bmmGrZi6pRm2YuqWZtiKqVuaYSumbmmGrZjqpUUo1AiBQi0WBNRogUItFgS+
G+38+fPnKiTwxYNutAoCNUKgUIsFATVaoFCLBYFsox07duzZZ59t2bJltWrV
qlY8atSo0aBBg0GDBq1bt055o1U0qBEIgohWDh06hB6Po0fn5ub6NouimBMn
Tixbtqxx48ZLlizxfJckQKBGIAgiSrHZbFddddXUqVP1rogh2LdvHwwJVq5c
6fY6SYBAjUAQRJRiNpvHjBmjdy0MxA8//NChQ4cLFy5IXyQJECT7B/WuCEEQ
hJoMGjTo22+/1bsWBgIU8NJLLwXDUHDdOa53vfSHGoEgiKikR48eFotF71oY
C882IQkQqBEIgohSunfv/uuvv+pdC2Ph2SYkAQI1AkEQUQrpoCekg7JQIxAE
EZWQDnpCOigLNQJBEFEJ6aAnpIOyUCMQBBGVGEsHS0qKS3wTjlqQDsoSSY1w
4IBQVKR3JQiCiAyMpIMnlwwz+adTv7ETZyxZtfWYZppIOihLBDRCYaFgNgs9
eggmEx7VqwtXXCHccIMwZYqwf7/elSMIwqBEng46mbbtpCb1qAg6mJ+ZHB+f
YPZCQkK8OdVS6voRQzfC9u3CwIFClSpcAS+6SKhfn//Njho1hJgY4eBBvStK
EIThMKwO9hvWzxN3JRy28JgG9agAOlialRjjJ/FwbIrN9TPGDSmwdq1Qrx6K
XbVqwrBhwv/+JxQX4+vw/927hY0bhfvuEypVwhNq1RKmTxfsdr1rTBCEgTCm
Dg4ze9naX3Jy25qFUjmcs1V9JRTbJHrjydhSYv3I4MQYGR3Up7K+WbCAm4Eg
dj7WBP/6Sxg5kqth9+5kGBIEIRJhOlhGyZ5VnUSzcc4m1esR/fagwxpXbvWl
5+Tm5cqQV+huNBmuEc6fF6ZN49OeM2cKriFh5fn9d+Hqq/H8K68UrFbtq0gQ
RAQQiTooCMXLx4pCKD81emzPtvVrVjHWbLLsOVasvB5Rr4OOvPRyoy+pUPGn
DNcIzzzDnWGSkwP41JEjwo034gcbNsQpU4IgKjzRp4PFezbNkPO3GTtrxQFl
LqZRr4MFWYlcBxMyS/2fzjFWI6xejZOc1aoJGzYE/NkzZ4R77uHOM19+qX7d
CIKIKCJSB09anDLoOi+6Z80cny6mE5UsJ0a9DuYk82nR+LQ85Z8yUCMUFAiN
G6OQzZ0bZAnnzwtTp2IJVasK69apWjmCICIMg+rgwh3eTio5tm2WxFFmxqo9
4lvFO5ZINW/GkjU79hzYs8uyfNZY56ud5hzwV49o10F7avnqYIolz5qVlmhO
iI+Pj4uLTzAnZ1ryvFmIRmmECxeE229HCRswQNGaoA9efJFPkO7cqVLlCIKI
PIypg2C4LVm+fIkrC+fMmjjWdetEpzmH5T8+dpPrHOiB9WanPq73o4RRroOO
vISypUHvOyYSrUUyYmiURpg9G8WrSRPh0KFQiwIZHTECS2vTRjimxRYcgiAi
AKPqoAL6zZDuoy/ZtVx8xyw3+7l1jmhtLvG9/z66dbC0MNPf1kHUwuxCdyk0
RCNYLDiTWamSsGaNOgWePi107YpS2L+/EJ6wfQRBGAzfOrhpk9C5czDHlClB
1EWpDg4bNtG8Yqublu1ZNUM0EmVH9sXbFooFuH/YX5sYQgJUwpaTLNG7uNQs
a6HN7nDYC3KzEqWbCmNTjbh/8I47ULOmTlWzzH37hMsuw2InTVKzWIIgIgTf
OpiVhdEZgzimTw+iLhId7DRrzab1a9asX79+zaoVS2aM7SSVwfV7ZMbtloUS
ER02dpgHkhnVYZYKrIO5aQnlUmfOdd8jaM8wO43FlBwXJXSzGMNY5XIyM1Gt
GjRQfw7zl18w1AwUvmCByiUTBGF4jDkvOmzhNrf3drk4gnZasct9P+C2heXO
MJ2koilvUCqxB/Xv9jWk1GEHI1DuHecW+4mxKS47zfVvhF69UKri4zUp/Msv
eeC1f/7RpHyCIIyKQXVQbt/ErhXTJFo21s2mc+qgl9ikIp06TavI9qA/nKFH
Y5NdfgWdGyE9HXWqcWPh1CmtLjFhAl6iZ0+hVPmuSoIgIp4I0kFBKF4xUaKE
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
jI2NTcrMl35Y5UZ47TXsx59/Xs0yDQhYd/A1mzfHTSIenDolfPih0KaNU9fA
4uvTRxg7VnjgAeGee4Tbb8fJlbZthUsvxS2JjRqhkdili9Cjh9Ctm3DtteiR
Kn62Th0M57ZsmeBweF6KIAivkA56Er066AuJv2hY8vDedRf23f/7n5plGhAw
9jp0wG+6eLH05d27cemgfn0uYS1bCk8/jbOdd9zBt1QqP0AKW7QQmjZ1vgJy
OW2aYJV3dyIIwh3SQU8qvA6GxV+0SRPsskEPop7PP8dvCkZd2Uro2bNCXJxQ
tSrXrF69hMmT3WdEQTljYlA5V61CV7Xt2zFEzZkzuBr455/CmjX41ptvwi+C
y4WVKjk/WKUKz3fBjt69heRkMg8Jwg+kg56QDsqeoGYj7N2L3fQll6hWoJEp
KeGesampFovQsSP+Wbky7i8Eq61ZM65ZYNNBA3/5ZcCuL0ePCt98g0V164bF
stJq1MAkHuzv5s2F+fNJDQnCK6SDnpAOyp6gZiOwHPSDBqlWoMEBHTKZ9l1+
AzMDW7cWHnrIabh16iQsX45qGTqHDqEfaZcuTpMQBJH9AYJLakgQspAOelIx
dTCvPO9SfJr264Oxsdg1v/KKagUam5ytZ4qqNIav3L/S+vvvR18Xpk19+qDb
rBZs24ZZLy67zDlfSmpIEN4wmA4OE5VLInjOONtB62AQ8WSkr1QEHfSL6E6q
QlkszcR336lQlOHJyMBdki+b4uEr/3X5AGYSduwo/Pyz5pcuLcUp0549uQiK
s6ZXXRVtKT4IIhQMpYO7VpQnThq2RGLBFS8vjyLquX9wR/l7Yz320RfvWMI/
NnZJcPagdDNdUF8oqlCtES5cEOrVw+740CF1CjQwX37JtzY8MPi4vXJd+Kt7
Jctzz4XbIvvpJ/REFbccsj9uvz2aY/kQhHIMpYMGgexBWVRrhB07sBe+4gp1
SjMwH37ITbA77xRq1RISTM/BPwpvvVev+vz2GyYHZjrI/l+lCjqmHj+uV40I
whCQDnpCOiiLao2wdCl2wSNHqlOaUZk5k5tdbKMkHDGjDlyoVh2l8d9/dazY
tm2oy9JtGpdcIixahGY6QVRMSAc9IR2URbVGAAsEOt/Zs9UpzXiAoLA0vFWr
YixQZnwtWFD23qOP4r8NcDv98APfwSEet96qrz4ThG6QDnpCOiiLao3Qpw92
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
    "], {{0, 398}, {600, 0}}, {0,
     255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{600, 398},
  PlotRange->{{0, 600}, {0, 398}}]], "Output",
 ImageSize->{604, 398},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[4]=",
 CellID->1050139078]
}, Open  ]],

Cell[TextData[{
 "By default all modes are plotted, but this can be changed with the option \
NModes. For more details see ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["PlotEigenfunctions"]],
    "paclet:QNMspectral/ref/PlotEigenfunctions"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->2038277146]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coupled equations", "Section",
 CellID->1227182867],

Cell["\<\
For simplicity we consider a trivial case of two 'coupled' equations: we \
simply take the massless scalar equation from above at two different values \
of the momentum:\
\>", "Text",
 CellID->1262710064],

Cell[BoxData[
 RowBox[{
  RowBox[{"eq\[Phi]Coupled", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eq\[Phi]", "/.", 
      RowBox[{"q", "\[Rule]", "0"}]}], ",", 
     RowBox[{
      RowBox[{"eq\[Phi]", "/.", 
       RowBox[{"q", "\[Rule]", "1"}]}], "/.", 
      RowBox[{"\[Delta]\[Phi]fin", "\[Rule]", "\[Delta]\[Psi]"}]}]}], "}"}]}],
   ";"}]], "Input",
 InitializationCell->False,
 CellLabel->"In[5]:=",
 CellID->436716337],

Cell["\<\
We stress that these are of course not actually coupled and it would be very \
unwise to compute them together instead of separately. For illustrational \
purposes this is perfectly fine however.\
\>", "Text",
 CellID->1468183492],

Cell["\<\
Practically the computation is done exactly the same way as for the uncoupled \
case:\
\>", "Text",
 CellID->1954203515],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"modesCoupled", "=", 
    RowBox[{"GetAccurateModes", "[", 
     RowBox[{"eq\[Phi]Coupled", ",", 
      RowBox[{"{", 
       RowBox[{"60", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"120", ",", "0"}], "}"}]}], "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 InitializationCell->False,
 CellLabel->"In[6]:=",
 CellID->1191201591],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.238456`", ",", "Null"}], "}"}]], "Output",
 ImageSize->{116, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[6]=",
 CellID->1822410046]
}, Open  ]],

Cell[TextData[{
 "If your computer is slow enough (otherwise try increasing the precision) \
you will see a temporary message saying that because we are dealing with 2 \
coupled equations, we have to use a grid of twice the size. For more details \
on how this works, see the ",
 ButtonBox["guide on the methods",
  BaseStyle->"Link",
  ButtonData->"paclet:QNMspectral/tutorial/Method"],
 ". This temporary message can get annoying when computing a large number of \
modes at once, to turn it off one can set ",
 Cell[BoxData["$QNMQuiet"], "InlineFormula"],
 " to True."
}], "Text",
 CellID->673335852],

Cell["Now we get the spectra of both q=0 and q=1:", "Text",
 CellID->833824238],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowModes", "[", "modesCoupled", "]"}]], "Input",
 InitializationCell->False,
 CellLabel->"In[7]:=",
 CellID->2076168276],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, 
      {RGBColor[0, 0, 1], PointSize[Large], AbsoluteThickness[1.6], 
       StyleBox[
        PointBox[{{
         1.9543308830224282`, -1.2673272636318889`}, {-1.9543308831426398`, \
-1.2673272637578221`}, {
         1.5597257952323313`, -1.3733378722785072`}, {-1.5597257952788441`, \
-1.3733378724980454`}, {-2.8802756442599557`, -2.2979417569215608`}, {
         2.8802756929453106`, -2.2979429927053885`}, {
         2.584762514868119, -2.381778876109436}, {-2.584755704035312, \
-2.3817825043670413`}, {-3.6131063014204394`, -3.3613170257930527`}, {
         3.604715379644417, -3.409144249604808}}],
        FontSize->30]}, {}}, {}, {}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0.},
    BaseStyle->{FontSize -> 30},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox["\"Im \[Omega]\"", TraditionalForm], None}, {
       FormBox["\"Re \[Omega]\"", TraditionalForm], None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->600,
    LabelStyle->{FontSize -> 30},
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{-3.6131063014204394`, 
     3.604715379644417}, {-3.409144249604808, 0.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   TagBox[GridBox[{
      {"\<\"n\"\>", "\<\"Re \\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(n\\)]\\)\
\"\>", "\<\"Im \\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(n\\)]\\)\"\>"},
      {"1", "\<\"\[PlusMinus] \
\\!\\(\\*FormBox[\\\"1.95433088302242818912191069102846086025`10.\\\", \
TraditionalForm]\\)\"\>", 
       RowBox[{
       "-", "1.26732726363188885621013923810096457601`9.886182787356825"}]},
      {"2", "\<\"\[PlusMinus] \
\\!\\(\\*FormBox[\\\"1.55972579523233134679571776359807699919`10.\\\", \
TraditionalForm]\\)\"\>", 
       RowBox[{
       "-", "1.37333787227850723233757435082225129008`9.970610774363264"}]},
      {"3", "\<\"\[PlusMinus] \
\\!\\(\\*FormBox[\\\"2.8802756442599557474`5.0435547523251545\\\", \
TraditionalForm]\\)\"\>", 
       RowBox[{"-", "2.2979417569215607742`4.945459717279918"}]},
      {"4", "\<\"\[PlusMinus] \
\\!\\(\\*FormBox[\\\"2.5847625148681188101`6.017034168515742\\\", \
TraditionalForm]\\)\"\>", 
       RowBox[{"-", "2.3817788761094358385`5.981514960953786"}]},
      {"5", "\<\"\[PlusMinus] \
\\!\\(\\*FormBox[\\\"3.6131063014204394257`2.0151195980798335\\\", \
TraditionalForm]\\)\"\>", 
       RowBox[{"-", "3.361317025793052693`1.9837483342153273"}]}
     },
     AutoDelete->False,
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]}], "}"}]], "Output",
 ImageSize->{848, 398},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[7]=",
 CellID->2103020695]
}, Open  ]],

Cell["\<\
It is perhaps instructive to look at the eigenfunctions in this case:\
\>", "Text",
 CellID->1550212365],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"modesCoupledEfs", "=", 
    RowBox[{"GetAccurateModes", "[", 
     RowBox[{"eq\[Phi]Coupled", ",", 
      RowBox[{"{", 
       RowBox[{"60", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"120", ",", "0"}], "}"}], ",", 
      RowBox[{"Eigenfunctions", "\[Rule]", "True"}]}], "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 InitializationCell->False,
 CellLabel->"In[8]:=",
 CellID->253589195],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.317338`", ",", "Null"}], "}"}]], "Output",
 ImageSize->{116, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[8]=",
 CellID->1923651675]
}, Open  ]],

Cell["\<\
Now we plot the eigenfunctions corresponding to the first mode, with the q=0 \
one on the left and the q=1 on the right:\
\>", "Text",
 CellID->480644219],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"PlotEigenfunctions", "[", 
    RowBox[{"modesCoupledEfs", ",", 
     RowBox[{"NModes", "\[Rule]", "2"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<u\>\"", ",", "\"\<\[Delta]\[Phi]fin(u)\>\""}], "}"}]}]}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotEigenfunctions", "[", 
    RowBox[{"modesCoupledEfs", ",", 
     RowBox[{"NModes", "\[Rule]", "2"}], ",", 
     RowBox[{"FunctionNumber", "\[Rule]", "2"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<u\>\"", ",", "\"\<\[Delta]\[Psi](u)\>\""}], "}"}]}]}], 
    "]"}]}], "}"}]], "Input",
 InitializationCell->False,
 CellLabel->"In[9]:=",
 CellID->1841952292],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
tCRC/jaz2a08ljat88AD9LLzvPM0OBQ04Stfoe0wbBh57TXWoUCbefllcuCB
9NdrzBjy0ENkcJB1QO2GYWnpLbM5V7fFGRKiCbHcXdr8wBtzT8fcyEJpCQDA
HCelZSYRqrQBicnqF3TOjoWEbvUKJR4vLCFrCsSrrForJuJRQQj1hGJi6So5
4rbkei3Dyu9r0Dr5PUeWLGn2UNCE+++Xe5YsFtahQFvasoVce638S3b22eSD
D1gH1FaY91pWYjJb7Q6PLxAWYknFpAsxJC8fZ/NFGQWvN5SWAADMcVFaJkPl
7ssq2TzhssdtgZgvt/aO2aO+L5yKePJxCVUqy3h+aozFWzLFJ125vlrt51pi
zxEOvPUW7ayU2uELX2AdCrQ3r5fstx/9VRs7lnZf4l+9RhjWLJl0Kh4TegJ0
lR5zDSvD7hzt4/IGQkLYK+cdT6m7o+0IpSUAAHPsS0vFNh80K1pdISEWj8Wi
UaHH77Fbh6TS0h2IraHYjNLkjxf1NmYC+WVdbVVnsihGNJlc6rGz+XvL3XTJ
oOIVYpt9G+efT68z77uv2eNAo7Zulae67r032bGDdTTQ9pJJ8u1vy92XZ5xB
Vq9mHVA74KdmSSd6aD6ppcbMpx2LMxCKxBIi4wUMWo+fZgIA6FiMSktrRO7p
Ez2KDkuzs0ed+sRYyKl4jrf0zMdWEBUjkezKmk/wFRZ/HzoTUwx6PR4P/ROM
Fn4g5i9UzzZvWPkeRcFfeJGhEy1J862zZg3tLRs7FnuOMDRtGr3GHzGCtgaA
Tl58kRxwgLxo1L33kky7FxUtxlHNkl9R3OSMZ0gqGY+Egl6302apOnCWsljt
LrdPSLbn7wNHzQQA0Kl0PhXnJxXurBDTAYcyG5rLL5OueKalxPDUFhEjbmV4
bn9IiITcdkXMVt+QYFLh/GOmIbMm405ldjfbfcFwJNzjcQ6ZYOqPFY+sbbZ1
brqJXlvecENTB4Em/OQncvfRE0+wDgU6zZYt5Hvfk3//TjiB/POfrAMyMJ5q
FtGdSzO+opSRkQrNaCjodzvtlopjZ13h9tySJP8GWQcCANBxlFlGz9eNB/Pb
RZpUN1lLLRtbkHTlllwPFA9PbaGo39FdlrU4P6cKO1QWbXaZSVZcp6jb5BNK
5PqmWkcUye6706tKbKfOyMsvy9f1V17JOhToWH/7G5k8We44/+lPyaefsg7I
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
    "], {{0, 377}, {
    1225, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1225, 377},
  PlotRange->{{0, 1225}, {0, 377}}]], "Output",
 ImageSize->{1229, 377},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[9]=",
 CellID->1666872900]
}, Open  ]],

Cell["\<\
The q=0 eigenfunction vanishes, as the first mode corresponds to the q=1 \
case, as you can easily check from the decoupled equations.\
\>", "Text",
 CellID->2092352079],

Cell["\<\
Note that the functions are ordered lexicographically, so to see that \
\[Delta]\[Psi] corresponds to the second function,\
\>", "Text",
 CellID->1656846637],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Delta]\[Psi]", "[", "u", "]"}], ",", 
    RowBox[{"\[Delta]\[Phi]fin", "[", "u", "]"}]}], "}"}], "]"}]], "Input",
 CellLabel->"In[10]:=",
 CellID->260342505],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Delta]\[Phi]fin", "[", "u", "]"}], ",", 
   RowBox[{"\[Delta]\[Psi]", "[", "u", "]"}]}], "}"}]], "Output",
 ImageSize->{121, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[10]=",
 CellID->1152485965]
}, Open  ]],

Cell[TextData[{
 "Finally note that although we set NModes to 2, we only see one \
eigenfunction. This is because they come in conjugate pairs. By default only \
imaginary parts which are positive near the boundary are plotted, for more \
details see ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["PlotEigenfunctions"]],
    "paclet:QNMspectral/ref/PlotEigenfunctions"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->497916690]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical Background", "Section",
 CellID->724119334],

Cell[TextData[{
 "Again we use the same massless scalar in Schwarzschild ",
 Cell[BoxData[
  SubscriptBox["AdS", "5"]], "InlineFormula"],
 " as an example to keep things simple. "
}], "Text",
 CellID->291408648],

Cell[BoxData[
 RowBox[{
  RowBox[{"eq\[Phi]f", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Delta]\[Phi]fin", "[", "u", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "\[Pi]", " ", "u", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Pi]", " ", 
           SuperscriptBox["q", "2"], " ", "u"}], "+", 
          RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Lambda]"}]}], ")"}]}], 
       "-", 
       RowBox[{"3", " ", 
        RowBox[{"f", "[", "u", "]"}]}], "+", 
       RowBox[{"3", " ", "u", " ", 
        RowBox[{
         SuperscriptBox["f", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}]}], ")"}]}], "+", 
    RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
     SuperscriptBox["u", "2"], " ", "\[Lambda]", " ", 
     RowBox[{
      SuperscriptBox["\[Delta]\[Phi]fin", "\[Prime]",
       MultilineFunction->None], "[", "u", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["u", "2"], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]",
       MultilineFunction->None], "[", "u", "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Delta]\[Phi]fin", "\[Prime]",
       MultilineFunction->None], "[", "u", "]"}]}], "+", 
    RowBox[{
     RowBox[{"f", "[", "u", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", "u", " ", 
        RowBox[{
         SuperscriptBox["\[Delta]\[Phi]fin", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["u", "2"], " ", 
        RowBox[{
         SuperscriptBox["\[Delta]\[Phi]fin", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}]}], ")"}]}]}]}], 
  ";"}]], "Input",
 InitializationCell->False,
 CellLabel->"In[11]:=",
 CellID->1028919644],

Cell["\<\
Here we pretend that the (rescaled) blackening factor f is not known \
analytically. Let's create a numerical approximation:\
\>", "Text",
 CellID->2120240899],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fAnalytic", "[", "u_", "]"}], ":=", 
  RowBox[{"1", "-", 
   SuperscriptBox["u", "4"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fInterp", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", ",", 
        RowBox[{"fAnalytic", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "1", ",", 
       RowBox[{"1.", "/", "50"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->False,
 CellLabel->"In[12]:=",
 CellID->457136668],

Cell[TextData[{
 "This is the easiest way, knowing the values on a set of points, which \
doesn't need to have any relation to the grid used in the quasinormal mode \
computation, we let ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " create an interpolating function, and we can use this directly:"
}], "Text",
 CellID->668520111],

Cell[BoxData[
 RowBox[{
  RowBox[{"modesInterp", "=", 
   RowBox[{"GetModes", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"eq\[Phi]f", "/.", 
       RowBox[{"q", "\[Rule]", "1"}]}], "/.", 
      RowBox[{"f", "\[Rule]", "fInterp"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "0"}], "}"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->False,
 CellLabel->"In[14]:=",
 CellID->1930609016],

Cell["\<\
This works fine, however there is another option, when more precision is \
needed and the background happens to be known on a (sufficiently large) \
spectral grid as well.\
\>", "Text",
 CellID->1516312675],

Cell["First we create this data:", "Text",
 CellID->1713087072],

Cell[BoxData[{
 RowBox[{
  RowBox[{"grid", "=", 
   RowBox[{"Rescale", "[", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       FractionBox["\[Pi]", "50"], " ", 
       RowBox[{"N", "@", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "50"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fOnGrid", "=", 
   RowBox[{"fAnalytic", "/@", "grid"}]}], ";"}]}], "Input",
 InitializationCell->False,
 CellLabel->"In[15]:=",
 CellID->986185642],

Cell["\<\
Here grid is the same grid as is used internally by GetModes, for N = 50, and \
fOnGrid is a list of the values of the blackening function on this grid.\
\>", "Text",
 CellID->746321380],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"modesOnGrid", "=", 
    RowBox[{"GetModes", "[", 
     RowBox[{
      RowBox[{"eq\[Phi]f", "/.", 
       RowBox[{"q", "\[Rule]", "1"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"50", ",", "0"}], "}"}], ",", 
      RowBox[{"NumericalBackground", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"f", "\[Rule]", "fOnGrid"}], "}"}]}]}], "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 InitializationCell->False,
 CellLabel->"In[17]:=",
 CellID->830601699],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.006656`", ",", "Null"}], "}"}]], "Output",
 ImageSize->{116, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[17]=",
 CellID->1836969233]
}, Open  ]],

Cell["Note that we only have to specify f, not its derivatives.", "Text",
 CellID->2135755933],

Cell["\<\
In this very simple case the interpolating function is very accurate, but \
still we can see that it is more accurate to specify the values directly on \
the grid:\
\>", "Text",
 CellID->612186269],

Cell[BoxData[
 RowBox[{
  RowBox[{"modesAnalytic", "=", 
   RowBox[{"GetAccurateModes", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"eq\[Phi]f", "/.", 
       RowBox[{"f", "\[Rule]", "fAnalytic"}]}], "/.", 
      RowBox[{"q", "\[Rule]", "1"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"150", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"100", ",", "0"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[18]:=",
 CellID->834591619],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"modesInterp", "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"modesOnGrid", "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"modesAnalytic", "[", 
  RowBox[{"[", "1", "]"}], "]"}]}], "Input",
 CellLabel->"In[19]:=",
 CellID->1215656386],

Cell[BoxData[
 RowBox[{"1.199540619572396`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.318407276066388`", " ", "\[ImaginaryI]"}]}]], "Output",
 ImageSize->{136, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[19]=",
 CellID->1211833488],

Cell[BoxData[
 RowBox[{"1.199541728878968`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.3184022022383603`", " ", "\[ImaginaryI]"}]}]], "Output",
 ImageSize->{136, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[20]=",
 CellID->550524668],

Cell[BoxData[
 RowBox[{"1.19954172889499477427932561113266274333`10.135730474846278", "-", 
  RowBox[{
  "0.31840220231153709695703923898690845817`9.559691177305941", " ", 
   "\[ImaginaryI]"}]}]], "Output",
 ImageSize->{199, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[21]=",
 CellID->1308543800]
}, Open  ]],

Cell["\<\
Here the difference is only visible in the 6th decimal of the imaginary part, \
but for a nontrivial case one can expect a bigger difference.\
\>", "Text",
 CellID->1744795221]
}, Open  ]],

Cell[CellGroupData[{

Cell["Higher powers of the frequency", "Section",
 CellID->1672305947],

Cell[TextData[{
 "For this demonstration we need to move away from the simplest case, and we \
consider the sound channel in Schwarzschild ",
 Cell[BoxData[
  SubscriptBox["AdS", "5"]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1821465625],

Cell[BoxData[
 RowBox[{
  RowBox[{"soundAdS5", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox["q", "4"], " ", 
        SuperscriptBox["u", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          SuperscriptBox["u", "4"]}], ")"}]}], "+", 
       RowBox[{"9", " ", 
        SuperscriptBox["\[Lambda]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["u", "4"]}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "u", " ", "\[Lambda]"}]}], 
         ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "9"}], "+", 
          SuperscriptBox["u", "8"], "+", 
          RowBox[{"18", " ", "\[ImaginaryI]", " ", "u", " ", "\[Lambda]"}], 
          "+", 
          RowBox[{"10", " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["u", "5"], " ", "\[Lambda]"}], "+", 
          RowBox[{"12", " ", 
           SuperscriptBox["u", "2"], " ", 
           SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}]}], ")"}], " ", 
     RowBox[{"Z2", "[", "u", "]"}]}], "+", 
    RowBox[{"u", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", 
        SuperscriptBox["\[Lambda]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"7", " ", 
           SuperscriptBox["u", "4"]}], "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", "u", " ", "\[Lambda]"}]}], 
         ")"}]}], "-", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "9"}], "+", 
          RowBox[{"16", " ", 
           SuperscriptBox["u", "4"]}], "+", 
          SuperscriptBox["u", "8"], "-", 
          RowBox[{"12", " ", "\[ImaginaryI]", " ", "u", " ", "\[Lambda]"}], 
          "+", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["u", "5"], " ", "\[Lambda]"}]}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{
      SuperscriptBox["Z2", "\[Prime]",
       MultilineFunction->None], "[", "u", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["u", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["u", "4"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          SuperscriptBox["u", "4"]}], ")"}]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["\[Lambda]", "2"]}]}], ")"}], " ", 
     RowBox[{
      SuperscriptBox["Z2", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "u", "]"}]}]}]}], ";"}]], "Input",
 CellLabel->"In[22]:=",
 CellID->542588835],

Cell[TextData[{
 "Note that this is of third order in the frequency ",
 Cell[BoxData[
  RowBox[{"\[Lambda]", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Omega]", "/", "2"}], "\[Pi]", " ", "T"}]}]], "InlineFormula"],
 " (this can arise from a second order equation because we have to decouple \
the gauge-invariant functions from the gauge-dependent ones)."
}], "Text",
 CellID->374921743],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"soundModesAdS5", "=", 
    RowBox[{"GetAccurateModes", "[", 
     RowBox[{
      RowBox[{"soundAdS5", "/.", 
       RowBox[{"q", "\[Rule]", "1"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"100", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"150", ",", "0"}], "}"}]}], "]"}]}], ")"}], "//", 
  RowBox[{
   RowBox[{"ShowModes", "[", 
    RowBox[{"#", ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "0"}], "}"}]}], "}"}]}], ",", 
     RowBox[{
     "Name", "\[Rule]", 
      "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(n\)]\)/2\[Pi]T\>\""}]}], "]"}], 
   "&"}]}]], "Input",
 CellLabel->"In[23]:=",
 CellID->159997112],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, 
      {RGBColor[0, 0, 1], PointSize[Large], AbsoluteThickness[1.6], 
       StyleBox[PointBox[CompressedData["
1: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
Bvkglks=
         "]],
        FontSize->30]}, {}}, {}, {}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0.},
    BaseStyle->{FontSize -> 30},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox[
       "\"Im \\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(n\\)]\\)/2\[Pi]T\"", 
        TraditionalForm], None}, {
       FormBox[
       "\"Re \\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(n\\)]\\)/2\[Pi]T\"", 
        TraditionalForm], None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->600,
    LabelStyle->{FontSize -> 30},
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{-3, 3}, {-3, 0}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {0, 0}},
    Ticks->{Automatic, Automatic}], ",", 
   TagBox[GridBox[{
      {"\<\"n\"\>", "\<\"Re \\!\\(\\*SubscriptBox[\\(\[Omega]\\), \
\\(n\\)]\\)/2\[Pi]T\"\>", "\<\"Im \\!\\(\\*SubscriptBox[\\(\[Omega]\\), \
\\(n\\)]\\)/2\[Pi]T\"\>"},
      {"1", "\<\"\[PlusMinus] \
\\!\\(\\*FormBox[\\\"1.00000000000000377475828372553223744035`10.\\\", \
TraditionalForm]\\)\"\>", 
       "8.794731787536942259804`0.09473759717193138*^-17"},
      {"2", "\<\"\[PlusMinus] \
\\!\\(\\*FormBox[\\\"0.74142996547273865015625915475538931787`10.\\\", \
TraditionalForm]\\)\"\>", 
       RowBox[{"-", "0.28628000724849606006827684723248239607`10."}]},
      {"3", "\<\"\[PlusMinus] \
\\!\\(\\*FormBox[\\\"1.7335110921158709552`8.048426429634661\\\", \
TraditionalForm]\\)\"\>", 
       RowBox[{"-", "1.3430075270036954116`7.937578251455818"}]},
      {"4", "\<\"\[PlusMinus] \
\\!\\(\\*FormBox[\\\"2.7058538297379697291`4.027910139361327\\\", \
TraditionalForm]\\)\"\>", 
       RowBox[{"-", "2.3570032540114711495`3.967965989159424"}]}
     },
     AutoDelete->False,
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]}], "}"}]], "Output",
 ImageSize->{862, 400},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[23]=",
 CellID->1870126020]
}, Open  ]],

Cell["\<\
Again a message is printed temporarily to warn you that because the frequency \
occurs to power 3, we have to work with matrices which are 3 times as large.\
\>", "Text",
 CellID->295555418],

Cell[TextData[{
 "In general, if we have ",
 Cell[BoxData[
  StyleBox[
   SubscriptBox["N", "eq"],
   FontSlant->"Italic"]], "InlineFormula"],
 " coupled equations and the highest power of the frequency is ",
 Cell[BoxData[
  StyleBox["p",
   FontSlant->"Italic"]], "InlineFormula"],
 ", working with a base grid size of ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"(", 
    RowBox[{"N", "+", "1"}], ")"}],
   FontSlant->"Italic"]], "InlineFormula"],
 ", the total grid size will be ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["N", "tot"], "=", 
   RowBox[{
    SubscriptBox["N", "eq"], "p", 
    RowBox[{"(", 
     RowBox[{"N", "+", "1"}], ")"}]}]}]], "InlineFormula"],
 "."
}], "Text",
 CellID->450804115],

Cell[TextData[{
 "Further, the result can be compared to the table on page 26 of ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["0506184"]],"http://arxiv.org/pdf/hep-th/0506184.pdf"},
   "WebLink",
   BaseStyle->{"Text"}]]],
 " (our 2nd mode is the sound mode, shown in the text above the table, modes \
3 and 4 are their modes 1 and 2 in the table)."
}], "Text",
 CellID->208159310],

Cell[TextData[{
 "Note all the modes near ",
 Cell[BoxData[
  RowBox[{"\[Lambda]", " ", "=", " ", 
   RowBox[{"q", " ", "=", " ", "1"}]}]], "InlineFormula"],
 ", these are incorrect modes which are not filtered out by ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GetAccurateModes"]],"paclet:QNMspectral/ref/GetAccurateModes"},
   
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". Their origin comes from the asymptotics of the equation:"
}], "Text",
 CellID->177262027],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{"soundAdS5", ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", "3"}], "}"}]}], "]"}], "//", "Normal"}], "//",
   "Simplify"}]], "Input",
 CellLabel->"In[24]:=",
 CellID->1359185814],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["3", "2"]}], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["q", "2"], "-", 
    SuperscriptBox["\[Lambda]", "2"]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"3", "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["q", "2"], " ", 
        SuperscriptBox["u", "2"]}], "-", 
       RowBox[{"6", " ", "\[ImaginaryI]", " ", "u", " ", "\[Lambda]"}]}], 
      ")"}], " ", 
     RowBox[{"Z2", "[", "0", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["u", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"8", " ", 
        SuperscriptBox["q", "2"], " ", "u", " ", 
        RowBox[{
         SuperscriptBox["Z2", "\[Prime]",
          MultilineFunction->None], "[", "0", "]"}]}], "-", 
       RowBox[{"5", " ", 
        RowBox[{
         SuperscriptBox["Z2", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "0", "]"}]}], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Lambda]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"10", " ", 
           RowBox[{
            SuperscriptBox["Z2", "\[Prime]",
             MultilineFunction->None], "[", "0", "]"}]}], "+", 
          RowBox[{"7", " ", "u", " ", 
           RowBox[{
            SuperscriptBox["Z2", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "0", "]"}]}]}], ")"}]}], "-", 
       RowBox[{"4", " ", "u", " ", 
        RowBox[{
         SuperscriptBox["Z2", 
          TagBox[
           RowBox[{"(", "3", ")"}],
           Derivative],
          MultilineFunction->None], "[", "0", "]"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 ImageSize->{479, 51},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[24]=",
 CellID->1905709529]
}, Open  ]],

Cell[TextData[{
 "Note that up to third order in u near the boundary, the equation is \
satisfied if ",
 Cell[BoxData[
  RowBox[{"\[Lambda]", " ", "=", " ", "q"}]], "InlineFormula"],
 ". One can compute and inspect the eigenfunctions to determine that these \
are not sensible solutions."
}], "Text",
 CellID->1052422759],

Cell[TextData[{
 "This serves as a warning that ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GetAccurateModes"]],"paclet:QNMspectral/ref/GetAccurateModes"},
   
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " is not foolproof. We have to filter out these modes, requiring that they \
are finite, smooth and nonzero. This can be done in ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GetAccurateModes"]],"paclet:QNMspectral/ref/GetAccurateModes"},
   
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " by using the option ",
 Cell[BoxData[
  RowBox[{"FilterEigenfunctions", " ", "\[Rule]", " ", "True"}]], 
  "InlineFormula"],
 ". "
}], "Text",
 CellID->1055964951],

Cell[TextData[{
 "Of course to be able to do this we have to actually calculate the \
eigenfunctions, so this option automatically sets ",
 Cell[BoxData[
  RowBox[{"Eigenfunctions", " ", "\[Rule]", " ", "True"}]], "InlineFormula"],
 " as well. But in this case there is a faster way to do it, which is by \
setting  ",
 Cell[BoxData[
  RowBox[{"Eigenfunctions", " ", "\[Rule]", " ", "\"\<Later\>\""}]], 
  "InlineFormula"],
 ". Note that the former computes all the eigenfunctions, including those for \
the modes that have not converged and that we throw away anyway. The latter \
first checks which modes have converged and computes the eigenfunctions only \
for these."
}], "Text",
 CellID->572501216],

Cell["All this is illustrated below. ", "Text",
 CellID->1961674373],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"soundModesAdS5accurate", "=", 
    RowBox[{"GetAccurateModes", "[", 
     RowBox[{
      RowBox[{"soundAdS5", "/.", 
       RowBox[{"q", "\[Rule]", "1"}]}], ",", 
      RowBox[{"{", "80", "}"}], ",", 
      RowBox[{"{", "60", "}"}], ",", 
      RowBox[{"Eigenfunctions", "\[Rule]", "\"\<Later\>\""}], ",", 
      RowBox[{"Cutoff", "\[Rule]", "6"}], ",", 
      RowBox[{"FilterEigenfunctions", "\[Rule]", "True"}]}], "]"}]}], ";"}], "//",
   "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"soundModesAdS5accurate", "//", 
    RowBox[{
     RowBox[{"MakeTable", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Precision", "\[Rule]", "\[Infinity]"}], ",", 
       RowBox[{
       "Name", "\[Rule]", 
        "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(n\)]\)/2\[Pi]T\>\""}]}], 
      "]"}], "&"}]}], ",", 
   RowBox[{"soundModesAdS5accurate", "//", 
    RowBox[{
     RowBox[{"PlotEigenfunctions", "[", 
      RowBox[{"#", ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", "All"}], "}"}]}]}], "]"}], 
     "&"}]}]}], "}"}]}], "Input",
 CellLabel->"In[25]:=",
 CellID->496353076],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"286.449222`", ",", "Null"}], "}"}]], "Output",
 ImageSize->{108, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[25]=",
 CellID->161869123],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
LXXIRaNgD3ldTpeM0+mVR/16W2l5AfXcTZGyBqlSw/SQ5te/iS8ErP4c35Hd
OHNxQVc6qNwOI6RJ0AVL16SWZUDlQZMUU95sBc0uOdPZqLXCq5slxm2lJciP
SVldBm0Gg7N8v4b8mKilxY2WnwFeEeRqqWilvDqs1iBzUtPQuoJXWBzhw5if
7FWYGCiwKMJHmB3rLaQ4WGFfe268sB6vbWiyRBjxu8i77y5ZtNbdTT8vvbRa
Dr74RfLzne9ozLC0i4h9nn9eY4gSbr9dDv6DH9Ty6vGQP+k0H0l4dHbWk2RV
fvzj4tTPhReqemPaZ906OSNPP93wXAAAQAsJH3GVWoJWtgcT9D1XO4gK2YDb
X6u/T7Mxr8kZpPGBuGu7MGxJ08org9kdLfGeowXzLp4iKx230/q6TDJIL4ET
6cq1dhFnYZVULiJtPw7GM5l0KpWSvCZC/mA0lcvl4uIbY7/4gpvrKI0b3WEa
6sepCBY2ws0l/FabJ57O5nLZmLi13xfPqmQg4bLaAjGKNp0I0m5yj7y92iKb
/8rRDgKzL6uSlvTW2ugIZMT35GZ5WM6vWG4RclRb2USI3uQnmFDJZPXVYSrA
pIo/Lm2ij9tpbielllYm5qdJHZsvJVa3FGuMCuCS3tano155WK4SLa8Oa7Ow
IaWOVsoroK67yWuQKlUR97L2Yo+x9pYKm2kTkKqjGIPBQ7b10tLasMLdFJc4
Kte58Z+IYgEVD1pCnP6IpHMsMZ9olaKklZeoZk4rVXlMkmQeLULNJZuK2lnN
k5TgPib8tFSi5T4m/CJwW2mVOpRQNMh0yBegDGRTflYAo0tjM10k4SNeHepu
XxLhIwiT3cU0Xco056cjhemgwtakAvwukskJVmnf+pb802ajn06nauKvvy5P
rPz73xqzy5QC877DDhq9l8Akg7S154Mf1Bbgc58rqh722XvvOg4zrcnUlHDo
oXIKBx4oJFSmzaF9AABNpWWEj2hpSkHZgjdtXXPG77BarFabzcbKZeHaQ86T
S4UK70w9YYXlWHGlTbnwEQ0r5c2plSYp7n2W9xOUv6Au357PhijO4mp8Tnkj
HlvewejObznhOgpk/reQnMkblVYhxd1WU9FzxYqsQgZYFsIeeyH1oqlhcXSX
j8BWMKHMSUsgtWDPryqzuEI59Yrll8tlLq0tqkbtdciIyfaTCXO+CLy0yluX
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
XBYpV0aTOb/kJulkwysb7VlIheltv+IFeVlh+eUq+HUbaVgoe1QprPZysZYV
DgTjqXQ2k/TTrpeShXnKVkeTFEZPWlxu5ImnQ3aTJAHSUR+933c5xTJbQ8qC
iQu68gmVUNnU08mEgmRps9XaSitKrV7tFa2UW0C1UkuUPRHcGo7Sqi8L5Z0i
MQXlknEbCafaVcqV8VAgoycUTcTD4vq1QE6llfKLIKoYFls4loiFPOUrzSqe
dDVHIR1UCtsqDZJ7EzXeL5U6VI220pF7a1SeiCKLKXwiG7nmDqzt8rk/Y5PT
rWXijdNFfvCDNMgOhej7qafS98HBcj9MiqxdS7tQuNbeVHjtNXkAr3H0/s53
ivtvjn+FthF5vbRO7qKLaNLo3e8mq3CXXEJqobtb8PvJzvWbb2rPiQyLjSVg
t8vTKqw4L76oO5LGwQohbWhiH5aj118vXmLijAkiaTfQAw8sXRYBAC1PSwkf
NjqgTR9RTk+hEiTjtrm19SsZcU1Iud9spnKqiNabWXzxcmeRIBtqOct3qopz
E9ZEeUQZV8naJ34GyoQP82PPj65oAGb1F2KlGS56G+2WdhmIuyNKMLvKjnAo
y0C1IsTcJskx6jYXVxbRYI82GlRLKydVobyyKEPZK8MazQ/fyoUPr1yFOmUD
w2BenGgobI1ylRD3Kgex5a0uEzYazFG53jNOgzT3QZXpypckwgaoxnzDS0fE
nSWh8lREKgV7iOkQl4zT6S2V+NpbaUmpq1e7nM1CK+UWkF9qOf0qT4Rcw9mo
tSIH7kJBShuJ5FblYReKd1PSv3I7EFe10asAbitVL5cxnK+KkF1ePqpeLn5h
E0xkGYt/aqo2SP5NVJaLf79erVqH/GirpcVt/FzHilbaNOYnXLJZN1fPxm6+
zbe2Xs3b+hcDThd55JHFPS9vfzt9f/bZcj/S3p/TT9eV1k9+Ilsq00LisdS1
hh88Zzio5MydKp/168lW229+o0OLSaYb9t2XDMZJ0y0nnaRry1LDyeWoUg35
g35++9vipUcflS2Ls8811yxdFgEArU3LCJ9cRNr8HIxnMulUKlU21FPpmrMB
t7/mH3FxUVyCVtcHE/S9sCuDVl4ZzO7S95852ongKo4lkmS1KUJvZLOpqN1o
MIkjnLDbavOE0rlcLpsO0J5nh7hr289c4+ksc435yTibT5xw4WYgRwv0sgna
4O9IZDLi8J8NydmAyh7LCrlU2My+iYuEcsmILxDJ5HKZZNhabtyAiDjlxTYq
GeAWIeGy2gKxFCtBOhG0FKJNBWg4SlMDaWnVTU4lLRpK+wKUVjblZ5FW7IlQ
yhxuYauUS1wUV7blpzIDOsoVdtscPkorl016xX3+ktkHXqtLu1hUziCN1AOs
Ds1iW6ARpkU25pajzR1mHytDJuanFXQ2X0oMX7niUvuQUnMr5TdIbrVzW6lK
AbmO0s0reyJUWk6xJLSdKj95x20k3GrnlyshTutE0jn2SPhs4jIwQa2V8m+c
x2wwOgIZcdrFrBR05eVSdxS3Ghmd/LMhFQ2SexN13C+VOuS3DZ4j99bUul+L
KXxmx8QzfjrG8qbd5udmJjeNDQ/2b3R1yTKorbelpnw4XaS0o/6ll2gOZc0a
mtmpPEpTskd222260pIMCTBdVYPhYeH889/cZp08yt9tN+F97xPOPZemZn72
MzLI9s9/0rTH3XcLN9xA68A+/nHZUoH0WbdO+NjHSGVpOQVH2l3j89FmJSn4
rbdyPT7/PFmWvvdesrfQ2Sn8/vdNsLeQh5WscNAPK1yh+l9+uWgE+5hjdFjG
AwCsHlpE+Ih7AUooW9RRESTjd1gtVqvNZrOKNmbVl7pl3CZ+zBlxpU258BEN
RvmL8zfZiNdRCGu0eaRFKamoX7KmK2IJSHt8MnG3tZCY0S0vgOFnIOIyl7jK
lp3SPpscr9kZlMqUjvkKXs3iEK4MNvSSh3P8DHCLkA177MUCKGwCxwPOvFd7
pWXlYlpCsvja22ivXJ8lbamWIuAWtkq5xLCcHfqlGdBRrlTUV3xHb7KHJa8q
rS6XChU8e8LydENWHDQWEhOtJZffWVPF2NigdUipvZXyGyS32vmtVKWAXEcp
wbInQq3lKPwXBu2cRqJS7Wrlygac+WZidhaWjnJbKb8IaZIbcm5doVxJPpXl
UncUhKDdaKyYZJRQNEjuTdRxv1TqkBstPy3eral1vxZ1qdtMbzsJn1EVbTM7
MzU101r2rjldpDTmZqrn3/+mLwcdxAkmzQRFOctfq7DvvhToiivUfTBdYTRK
I/t5w1q/4ZM/+9yDWqdgnn1W+H//TzjlFFJqkjZgqu3znxdGR6uFuuMO8nna
acLkJM1Fse/bbvvG35/44Q9JbO26Ky0tK5x0yv0wmfWWtwiHHUarAlnRHnlE
V5WoMjUlz7xJyk95mg+TgJL7DjsIDz7YmOQAACuGFhE+zQiihSqLiErJ0SxF
ttxvNj95UeqXnLVFq5qrighyYlIaM8vNALcIOX6svBzwk+LWgA70lEs9Bo3l
yopedUTLjUFPeRvSbnmtlN8g1YLz8swtoEp74KDdp65Gwi8Xv0XzW6nqjVtQ
K1soOu5XY9LSc2cXUfgI4/1drNPp7FvsAzHrpryL/O9/5aE2409/ou8mU3kY
JjGYOxvu61wVJu1Seegh3rVXXhE+/Wl5QL/vvo9u+PbbDc8z/5s360pB5OWX
hZ//nEw0FA7CYd9HRvieZ2bIchzzMz7+ymXXShl4ynD0DoZspcZhimrHHcnC
APswQaQmhZhwPPRQ4ctfppmrBXLjjXKlsc9FFxXdf/3rYgaWYowDAGhdVrnw
AaCpoN2C1mdRW+nMWKe4os01MNpaUzsqlHeRkqiRZnkkq2qXXFIe5mc/I3em
U/Tw2GOyCuEwOCjsv7+8T4dF/uab73gH/TrlFF0pVPDii4LNJuy0k6wQTj+9
ZOIkzxvnX8qu3rbdNXsY0q8a1kue71hz1Ykn0qq3Bx4g+9Jq75MSCdqG873v
0dK/D31IeOtby6eHJBF02WVCnL+JsDYsYGF52z77FOev/vMfukuSO0uCqT0A
ABAgfABoJmi3oPVZQCudG9rY2bWxd2B4VNt2itm+dqUdg67+4dGJyenZJTVn
PT8/Nzc3r5aF8i7y0UdpJH3ccfT9W9+i752d5WEsFnL/8Y91ZcNup0B77lnq
OjcnXH21rBaYckjQ6uXxcXk8H64w3FIPqRSlvdtucqQnnyz8/e/SlVyOzHW/
f5vHmft/DevXG/7r2PEm9n2rQcxPIFBHaizOX/9a+NSnhP32KxdBTLZ85Sua
Nh5VctVVcmzs/6zCChR2Jq1bJ9x3Xz0xAwBWGBA+ADQPtFvQ+iyglU73yIbZ
2tS27ZQy29fBtWZtbe/o3NjbNxwZm1hcc9aTQ91SBjr6xrkeyrtINto3iMd6
CvnNJF5veRhpBuLJJ3XlRDr256STFE7//rfwnvfI8yJMXm3ZIjmffbYsExrJ
q6/SYaxveYssHi677M4bpwtG0oJrPsr+ea3dQSak3/pW2ZV9SWk7P1wFVqDf
/EY45xw6llSpgFj9tbfrNk0QicjZZ58DDiADDxJ+v7w5iX0uuGAh+QUArAQg
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
uh1HrZSmaID4HbAMPrpH5L/+xbV6aLH4AN2agWU8WLCgXi3hMA+AX7VKPbfb
bnQO2r4QLB/Arrs23WG2uUzv3t2hV69eLe+zj96dj8gAYzq/+hU/8/HH6/oR
K1i5OeUOKErbnCU9W5/gtPsAdQIlwfqAp3g88nPPdXJ2u/vu44NT/dn2359y
SjCgOb2BC99ibiA+qkcciBsYIRiuBQsW1idaivgk/HaoJUGPw5foUuJT8LsE
SbbNUCZ3d1vCXBFO+m2SK2I4mYGK4wgxPTTu4Rwn6bNJPqZGQl+DYuOp3iVA
a6uYBEXyVmYh49KUN1YM1/r1PSqlSRHy+d3QU7nBKRMizUqsCZcC1JFaraYU
dEhORsfkLFQff8VMhCHY/GTHKWshzwWobl62UqWkXbKnaqqrbctsXMLp0kHX
Fp+CFFrUFqWcQW+NFkfhSR1yUbfqzNNWB9qJ9WapbFNKddAmUyi6eqRQgHOB
Iskrn0xMvhQvtj3DgoUzO1mM4+aP5GgFxEJSokYj/L5lwlnvjqhty+yOKBQq
ttAkyjJ5EA1WLPylkAMzxA09CeWs2bjMqtWNQlvE+gKpF92Oo1ZKM/FIImdZ
ewjaI5Jloj7ySL43zb//TSe//56MF9Cw6xgY1q7lGnB1ejUWM/LEE+KLoLHj
2yuuaK638+ZxpfqZZ5q7sNPwyivU/NZby//5Dz/z1ltQ8ddtutmD570DDrLV
VvJo6d3vpD4o9pHEicH9m10/aPvy3nvT7E6YIF93HTmVvf66/OWXlDGOHSBV
6oHJXrGCImuefZbYx7XXyhMnUlgNSN/QoWQD0uejNhybb04E9IQT5Ftvld99
txNGvGgRhTep25tKijvkKafIH3xA3y5dSty2Tx/t2222kYcNq4oY6t+fEqJ/
+20ndMaCBQttonWITy7mlRRVNu131GhKnaZAlorFUjHjc/ky+H+hjbRF+VQs
6CcziiuYNC9VhG7oicRDXpfD4fQGKym9Syl6Z+r0RaNBu+Riin8KzM4ZYjpU
ir00rmg+hraU4GJ7XJm7YiZqr7aCFZPVal4xqaSVyJUzAfU8qUbOYCzidzoc
Lk8gmdc/l6nPtcSnQO+uVS5W8KmpKspZMDbJXa0h5yJQ0viKF5PMskPv3V2+
ZF4/r1VtmY5LNF2y4lwUDgbIv8nhr0oQqFAtTc8v4k9bKBbxOh1OlzsUz5qe
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
Bhm+8sou9pO0YKFjaB3iowO5kRheRLfAo7kYcAfqRyArsS5VcPi1TJulot5U
xLQjTizK9B5YdWAj3xhnWGM3KfKK4Sp9MRNWHdgIBSIIMaEHnqIH+lPGLpMD
my9RTAUkI1wVr7FihNIbeDJqd3W+drLiccRd4EilVMIWalrRE5+6bSnWNOps
gEeFUFuOFG+6CJoE4lN3YsvFYlHmrm7qSeMcdhe6l7DHQ36fn8PnCzFu2oyU
ViHmpsWoK7pyNuKWbDW3SZnVyh0Xy9kQBIDTLcU/TaEJVG3FeUzhra5IWfkp
UL0Zk+A7qLyUctXIUyBZrCOllbGpd4SwrSqw20Q/LXopNRmCAuMtKR5XnTlc
/2iBX9fuxcq5FUc4l+ueRdUbmvJHpOoHtuOOZGgA/enVy6iQQ+eTlAggc7D0
zFdfbTzPWM5ttyk8hCV8xnHBBZpRQwGzO6HxzjL3fP01d9/DcfvtnVNn01i8
mKe622GHKle/SIQMNzg/ZkxVHBDwySeU8ZmZw6ZNM0ZULVnCA4L0B4jV1Kly
pvsfCt0LTPDkyfKRRxIPEhp0IIqYKsg7GCf4NUgxW4RmDxAlNAGmf8cdgog2
Cxa6ES1CfMrZiMsdzBRK5XIprQSqh1vI4sNQigYijadeSvqqnIgK5PolOQLa
G0JSESV3slCWy/mwkrKAD7hMoRD6IG5KOGDzs7fahVRIH82teJRpfm6YRqfT
n86X6GOC6EaQrFNZv8sdTefL5XIhG3NK+kAJpRK9daaU9dO7aGciVygWCnme
z4FeUNu80aLy/t8hMfezcpLFq8cyxSJK5pnGXCZnwFKWQsK9WXCSoqklqJxL
hqPJYrlczCVcWq/Ixc7ui5GirISNJ6snXT+x2XgklqJxZRQrYUS1WtXMYXeh
BeS2HtqS0hylfUvStJbyKbBhu0KRTEVXCV2x+fTbahTi4Sjd16U8sWkWcpWP
grxHMizpW8ZDljqiAJkQZNMDgS3nEw6KoMkz1uDkydzKFJfkCFfJUylpV13d
RFJqckcI2xLfJmIpNRmCXHNLmrRVbw7XP1pcSrsaH8zW0Z75iwzf8kfkSSdx
fW7ECPm99+jDwQdXlfvnP+nkgAHm2agJzKFo3ryqk4sW8bqXJRfLhx/OPbV+
//vayzvX3IN2me8edNTHHuucOtuJYpHCTtjA9emsFyzgmbVBz958s+qSVatk
t5vbIex2IjsG/PnPpMGzmdVv84kZfuCBpvI1g2ZirpJJ2u4TvHbmTMqvcNdd
5Ig3aRIZOMARcEBScFx+OR2XXUYHPlxzDRENUFqfj1IyzJghP/00UbrXX6cK
0evujUZCH269lZK/YYKF0T2YuSFDyBPyxBOJgO66q3HL1AYPVA7Wf9xxxK8/
/LA7h2zBQosQH7mYCbgqDiWSLVDjftOtj+ZixOtyulxut9ul5Ok1c3XTAyql
Pmy8qPiD6YkPMSmfo/LO3acL6KFwGCVBmYo8T++swK+bHCUcWxdKU8rqS3rD
rLlSIuhRTzq9EcO7ZRbTzeNuAg6pChXeUUh5Kl5lTn+8zMM3quBLssj36hrs
Ve//9W0V0mG1qEPRVxnK+bhqkwgmjNYs/cQmg25NZvShT4I57B60uErZlpSW
kiGvupI2d7DCLE1EV5ZjHpvO7gbkNPuSzaMmkEuHtWodmkAWwm5bpVbupVlS
OIjag5r05kktxkcWSKnJHSFsS3ybmEmpyRBqbkmTcdWZw/WPFpfSLsXC+fdo
aa4nzapN3MsfkYyP4Dj1VB6Qc9FFVeWuvVZsy9EBujarw7DnDLvUvvVfufVl
992NHlwKoGl3ornn/ff5m3xopC+91AkVdhRr1hBJkHS5CxiWLZNPOIFOgjTe
e6/xqpdflgcNom/796d0zwaAVNx/P0/oDH39gAO4aY3N4/HHg4d8/tE34KF3
3ilffLF8yimUwHnffUnV79uXkki0GenfWQcIHMaHFkFFt9+eOrDPPuSBBrpx
3nlEr7D6TzxBdGnhwvrcukPIZCj/m8NB7oeG3ZP0JqE99qC53G8/4jLt40GY
fgg7CBdoV6I7E69a2BjRKsSHgVxixJ42G8CjWehEZD5icdFG9COlYG2l5BJW
6hgVKHW4hhqUi+JuNdzbJmawG9Dj5FYkpcpa1CxG4xNfrjH86U4baxAKb0lc
gxi1UmpyRwjbEgpePSlt8JYQdqFFhLfHSWlnYeF8v8Z6XFOTXwvK8EckSyiN
A39eeSV9+O1vtUJQsBlnAZ0wxyOPUBHokwZAxXVI80qbKrtLQtMtiN0eWeLi
k09uaohi/OMfXF8F96nb5fWOhx7iZOPcczV+uHYtGVeYcWfCBGMUfT4vn346
X51LLzU4BxKWLgWrWSfR5YU+Q+YNufLVrcatkrj/1mqp1zzJcY70zJbS9/WJ
CXR1cBPMWJ8+lBd6wACiXLvsQjxVf4AU4ABxwIEPu+5KicoHDiRmBgYG1gAB
6NWL5r/N1AH1+4Ma0A1QDzC1MWOIrVxxBTG4p56iNWW7+XQQqCQcJpE/9FDq
v7DD6AnGhW7svDNRtvb5xeFAJQcfLF9yCfW/cxN3WLBgQGsRn069xIKFbocl
txZaHxullK5aMHuqjvVMWbC0ZncfBa5qkKcOy4D22mtaoRdeoDPDh9dvkm1R
Cn3YgEmbTF8rKTrlZZeZeT5BG2T64eLFjY9RjI8+4kmPocC34rYsL7/M95sZ
NUr+6ivtfCTCbTdQ9GuDRsCYmIli772h9yeT8t1304ae++9Pthto7EdI770v
HcYm8WNpP6c06xLp8dekE9ZI3KizcpOt5/e/YMqIFy6cuPq668i49MwzZIxY
tqzLRwxm9uGH5Ec3Zw6NA+Tl2mspwOsnP6E5wHDBKcA7sF5gXo0kGVApCRYa
wwf5GjGCvDVBK1A5xgUZaJ+L3cKF5CcI9rnfftxPUnhgKdAuDnxovMP6A7Ru
6FCagdtuo7gkk32xLFhoFMZf8vUOi/hY2Ehgya2F1sdGJ6VrvpirJz1k6xGz
Hll9N6g69Dz6KE96pdfJzz6bzkybVr9Zlp369NN1p9auXTSOHN3WSZus9U41
vVLmkS4jRzYyvHqA4sreyffu3cKB/v/6l7zbbtRLqOz6hGyffsrTX2+9tfzH
P+qvgG487cJ//XtLyi9Rln50n3TdNlLRoEv32XLdNds/vWSLPdnf/9vz8NyT
MXJA9PvJxU0t16+f/H//R7nj1phKRfcCnOWTT4htT59OW9qCUJ9wAplLMGcD
BtDKNmhLQjGQqR13JG517LFUz5QpRLEx5Y3TInDDO+4gD9C99tIcCWsPUDaQ
IBxtbpZah0wNG0aGrd/8hkyWFiy0GxbxsWCh62DJrYXWx8YlpV9/cI+e9Eya
sajGN0oPekSuXMnVRPz7xBP0r34nnkKBuAS+/fzz+i2zN+R33135G8rlOefI
irfVL3YI1bnwrbe47pdM1inVNrJZbhXp1avlE23l8+S/JSneeJgy9Y3/d9/J
Tiebjn+OuHjc0f8bOFCzKWwhrbpXup4Zcb7cZPD1g0PjxlEut3ff1ZkMfviB
Ejez/Ho4wBmYt9+iRaRSs9R87NhhB/mqq2j2e+BmQBAuLPFzz9HkXXkl0e3D
DydrI5gRZrQRKwwkequtaJ4OOIAm6dJLKc5o3ry2rYSQUp+PzG3Dh5ONzqwt
FtbUEZc/RoUwNDAvrNLGtGmthQ7BIj4WLHQdLLm10PrYiKT066Te1DPJP18U
1lMFekQuWcLfWePf3/2O/h07VivBQndOPLF+PVC8mbbGGcfq1fTyWpKWb9L3
WOnN+s9hlux5r70aGKA5MAjoscyJqGdsa7Nqlfyzn/FZGz1a/ve/czlyfDrk
EPkXP3rwe4koXF7a4QLpKaZFg6ZgWaAD/2fuPzhpYiv10UeCykGgQHPUHWsm
TCAjCkM6Tc3su6+mYQ8ZIv/iFxvYdqjffkvGmscfpxzpEyfSRj/77ENz2Lt3
Q7QIUgRSM3QoWSHPPFO+7jq6D0AwhbFF4JSPPUaOnFjGnXaqFwfEYqna5x3H
eoX67XZK+DdnDvkQWrBQC4v4WLDQdbDk1kLrY2OR0hUf6FnP1NnJRjyZ6BH5
4YekVLGg+1/9iv7VZ2+Dao0zM2fWr4dZbaDUEUollr15bb8Bh0hJnK+T4Bf6
OFPqIpEGumuCL7/k9iawt9bKZtAWvp/3yrd9d0bXwXTc0v2bSOvYbOwpZd7Y
7Hg2NV+PPKlq81MADCUYpJwCbMzXXy8XRbsbFAq0Z2efPnx9QQD0TlT//Cex
gt13r2JAkybJb7+9wcecgL+AxYCt3HAD2W6OOIISNfTrx6PD2jQVbbkledAN
H06Z8y65hIxuzz1XtUTlsvzGG8RSQZrA6wcMaMMFrt1UCBdieffem14zgM6+
+qoxp6KFjRAW8bFgoetgya2F1sfGIaVLZ0zSWI//tYUNXkaPyHica1FQzi68
kD488gj/OpcjPa937zYTUXk8dB0UPNIpjzuO/hg48InrU5ISblMHxx7LyjbY
XwG+/ppnBYBqD222RwBM8IILyKMQ3d5OWh6ULmZL8M5mx5xz2H+mT6+kdnvi
CZpTScnUcM89xqicb76Rf/5zzlh32kmePVvc2BdfUEI0Vaf/yU+MewYtWEAE
gIUdsWPwYCK/YLMbOgMSAlL/0kuU/wE3x0knUdwV5mOrrRpyWsM9xExFhx1G
ZMTtJsdDTCRuINwZL79M9KRBNtTuA/3cemtyk0NDaA5jsfLIbVSwiI8FC10H
S24ttD42Bin9TLdfz6RZyVXympVirDKYgegR+fzzXGHaeWdytMKHv/yFf33/
/fTn+PFtdoBxnWMO+Zacipjm/PHHbHcg/GuGZcv4u+7f/a6dA1+9mmfahvr/
xhvtrGS9IRaTTzvNmC5siy0oKdlT5724ZqASmAMN+6GHqjb6qUT9ULnaLZD+
/ndysZIqnm9m3O/zz8lhS43PP+IICmgx+La9/z5tR7rHHlrnBg2iOKDXXqPQ
IQuKvCWTxEdvvplSko8ZQ4FF/fs3ZCqCqGOtwXf22otSJ06cSK8LZsyg1wx3
3SX/9KeU4w63IDhuuw1A9Vvv3Zvqt9vJrPf445rzo4UNDN1FfCxYsGDBQotg
/T8F1ivWfKbfsKc+Zn9cleyAHpEzZ3LdaORInh1g+XL+NaMu4XCbXRgyRO4t
lT7ZyU7ld9mFEpTJpGjhr9ptOVVMmEAFoIy3G8OHc6Vu/vz2V9LVmDNHPuYY
Y+gH+Noll1QH6BQKZAdiXx9/PAXjqHjlFe6TBoLndpOVSw/wlz/8gSJY2LUn
nSS/9564K2jC6+WmJklJUY7VryU1oFc33UQ6vdrdvn2Jf82d2zk76GygWLqU
bDr33UcWtpNPpkwSuC8g3o1sFMs86LCGw4bRywMQ5NNPp5UERdp/fzKJtnsL
oTbbBRMHFzvjDNpuFff6kiXdPY8WOgbL4mPBQtfBklsLrY8NXkpXLpzbMO8B
8anyeqFHpN/PdaATTuC0heE//6E/oRV9/32bfdjyRz+8KJ1K5XfaiUU7sMgh
HGZuNqtXc1efyZPbOfAf/5g3EQi0s4YuRSJBOSEMtoDddiPDS72w9Oee48E7
UJcvv5z8rhjAOG68kU/ZttvSjkuGmf3mG8rXzDYJkhSXtgULxE2gqunTKZk2
K4kPPp94R5+//520YZapnB3QzqEiB4Py//7XrlnZSLF2LeX9AAXGul14IZld
9t2X1rlPn4Y86Ji1qH9/YlJgwKCk+Be3Wr9+jaZraAch2mor8tnDrwLkDvxY
mEXDQguilYhPORX22ZXXjy5fOFdq5JIejEzE5wQc9J/d4U3XDbgrZqJuhw2T
YHN44tkiToQ9uMrJQE9rT5iFbhZy6VjY73JWV1jOBd3K1No9iTzP+VjKxj1O
Oml3+dO6uM9U2Kssgt0fy5h3gJqKBTw2paQ3mNBaK+VT8YjX5Qqna4JJS2mM
WXe+nOQrbveGkmoqSlFb1N2Q16l0zOGPpnpKeGJPl9vGpRTLHnA7JGXZAlH2
JtZUSrHELkV0nN4I26W+lIk41aJUFt8o4lfKBj1Urc3uiqQL5m0B+YjPpZx0
hpP5ykmxlNaOy7QDIoEUdiAd9tgd2midTm9KFE7dgujpUtommiI+cxfWWHyg
iqmqMv495RT+3a9/TX86nW12YNnStXOkc1F43YDt1UTSV1xBV+sTYxtwzTVU
YPPN25mnF5yA9brdvKmL8OWXlOALGqlehxw+nNyZGrWWgINcdRXnONCMb7lF
4zj//CdfJhzQg6dNM1ZaKBBVUd3psJpm6R4w71BnVVIDxfqCCzQvRwM+/ZQy
R48erSnZ4GVQ33/7W9o8yULHsHo1pZ148klirliEsWOJFu24Y6O0SGVGoCog
vjjwAX82Ymlq9mD7xkL0INJnnUVSHYlYRqLWQusQn2yElJZALJlOxaBARLLl
Ni9pWRTzhTafVKmAHSp8LB6PxWLRWLJQp2g+ZiN1P5LOpMNepzsERaucTsQU
xBPxkMJSEkrRUsRtt5GO5khoSleJptbuS2YyES94hofS8JfSyrloLp8J0cT7
mKaYj4P12EIJLIIfZ4OMpAg6IKeDUPxcsXQumwyjUle4oiWmgoqeKfmNYyoE
nVXniyk04YhlC4VMzEHnTdtCWcyWZPPGU5lk1G93+HNyz0DPkttaNCyl5Sik
yB1M53KpKElOgJR+EyktJUl0ArF0Ou7GqvqUk8UMGmBlowGSyBDVUApDZlwh
yEg6Csl0KIxX3FbMQxKSzOZSEWLu7AfETEoF4xJ3QHz3iTogF9KJSgVxhc97
LSndAKASItJpWKCOSiRYmumXXmqzkk+Ovgwll0vb6XfiYZ5Z48aZXsWSjf30
p+3pNtQtpoadfXZ7Lu8KgEb4fFU50pgt5Y47SK1tD0Ao2NaxkpI24v77tYre
eYdn25MUn7kHHqDk2Hp8/TXRJZX+nHaaIDiIYd06ORoltypVw7bZ5N//vpJe
oQbgdfj2pJO0TW9xDBtGdqw//9nabKYrwKxF4TClj7v0Upr7gw4iw+x221Ut
QpuEBTwIZBoHPnRRGBE4ESj/PvsQ4Qb/fuYZ6vlGmSGjG6B/wbX+Wxc8Z8sZ
qEDeuKli1aMezQW/y59vo0w54pS8iYbeCCf9Nsllmsk0F3VLNn/VxJVTdsmu
1V3Cn1KEdyiLefanisWkD/NduSrj4spbKeSQHCGuHCagP3oTph0oF4uVF+hp
qJHehO67UsAm+arV5ITfDr006HH4Evx8BkqtI8QeA3GP5AimzdoqZ0Kk9PbA
J0aPkttaNCGlOhQUwalafb2UKq84/KzScjogSc501cqWQFacQU54wSs8/GeB
xDhu7IvaFhNsLpEQJ5s/pTQglNL649J3oI27TzhYuRiHrEdyPUZee7iUdi3o
EXnRRVxxOeww+nfWLPrio4+4vt1mVPuNN6Lkd1KfCYPf0Z9merRZkmq2XxA0
pW++abrPTz/N+ztqVNPXdgU++YSMMPoMXdtuS+5Mpq/BwV8w7M8/J2rz4Yfk
TrZgAZla3nyT0gjMn0+zNneu/Oyz9O+0aZpRZocdaMOdP/2J2Oirr1L0lPoV
6M/tt8v//jcRkxUr+Kr9738UhK8mNDj6aNJEzRZ08WLiSixVhKS4OF51Vb1E
5MuXUx65Cy6gt//qyKGLn3MOiZDQcc5C1wA09623KEkCVvu88yhT4vDhlF8E
a9hs4jjckl3BiaRKENOgQcTazjqLtpl64QUSOgudjlYhPsUkVIVQLOJ1Opwu
dyhu3Bu4pzyaS9Czihmfy5fB/wtFc9Wn4FfMImSdsTmDNePVoQjNyxOJh7wu
h8PpDcaqdKxSyiFJwUy1B1IpqSc+pUwQKmG+mPbYnbFcASofqEcpjZP2uMKG
ipmonRtiqK1AOp/wu1zBZIGUUiirdTvAxmKTnCFdnKlyiZ745GJQD6lLab9D
0xJLKTd5O/mi0aBdcrHX7sK2SG12BmMRv9PhcHkCyXxP8XTrMXJrgsallFDO
p8LBAPlUOvxVBttqKU36bPZAqpAK2lGsgK/segpSIJujR7WVFJIQQskdiET8
Lrs7rHlJGtsqgMm7o0oPy1kfOuw2KJR6Ka03ruoOmAq/6WDBqlwVM1YPQQ+X
0q4FPSLPOIOrJrvsQv9CDweY/9tll7VxvUJgfpA2P1F65dRTtdPhMFd1zDBY
SWAGDa1ZvP02p1S77979b5Iff1zeY/d1/aWv95XSx0hvTdh07t37/iFz1X30
svvqq8lL8LTTKDr9wAMpVRp0PjCirnA/Eh5oCJRn4EDK5AVuohp0eveWDz2U
PBHvuIMc1R57jNjQK68Q+QIRy+XkUIgnGWfHEUdQlrk6RGbNGlqVm26qCgVC
c6NHkxS9954xC7eF9Q6sHpgRlhrUFpT8xz+WDz6Y4nf69SOPuC5iOs0SLpby
bp99qHtuN73f+Mc/2mst3bjRKsRHUY0kuzeRzqbjQdV7pN4lrYhS1O/xeFxQ
p9wej9vtrxMTkU3E4ukc6FFacSoLZcyKFoNKiEMwnspmEoqrWlTVs7Jhp2QP
Gq+sJj5k3LEFC/m4jZTPQtxjV2wu5bifhcxINrtD0hOfVDZMnjzRPDEmX6Fu
B8jFyGtTPeXUPuuJTykTIV+6eI4a9To8Ma5nFlJhMgL5fUo/XHF6Qy5uK+kn
zyGXP5LJZqIBcn7K9JC36T1EbuVCLquDFmDXsJQSSrm43+t12elGTumcPQ1S
itUE8clEwHrd6byB+BQDNoieynvKiQBYhMunBO/YPOGCeVuFZMjGU5TZKSLH
E9N1zSil5uMydMBU+M0GKxdiKG9uu25F9BQp7RbQI/KYY7jy8aMfkb7KUhkw
P7eXX6538bx5TJ2+vPcslL3rLu2bU5U8B3vtJb7u9dd5g82GSy9ezHMFQJFf
f9nF1q0jM8r771PagenT5cmTV5/j/HCnEz/Y5KAvpMFlqfm9WDCGvn0pNH3v
vWmeR4yg7HljxhDdOOEESgcGKjp+fNVx5pnkNXjIITztHqsE3A8X4oAWC9Kq
T6PQQV0WjGnHHUkNVWkaFnq//eSf/Uz+4x/JOPXJJ2ROqmWe//0vceGTTqrK
QQb1esIEUrs/+2x9rZmF5lAu05K+8AIJ+HXXUaptu534OsQKoorFbDDUqOsO
dICldwAzwl1yzTUUEpVMWlkGBWgV4lNM2CSbGnsc90jVrlM969FcDLgDzbgH
kT+P3lumVNSbipgmxlU2xTXIp5pMQg7JGdZSEFROVxEfZW5VP7GiT5JUZzO5
zJri/m+srYpnkaKvuiLleh0oRihw3FNDQ4qKqxvvQSrgNOTOdfiTbNSqb1Iy
6JRsmDRxW/mYB99WGkmDLjXtftVN6CFyW4qH/D4/h88Xygr4TX0prULMTUKm
FjRIaSrg0JzHiCbYk+pqFoiexyr8pJwNgeRynqx4w+ooibCtclHZn11xdVOD
KcykVDSu6g7UvfuEHZCzIHS2pm7/7kcPkdLuAT0iod+o6sWee9JZ6EBMX63j
55ZIcCV86lSmZX/wgfYl836CciIEa3DYsOa6uno138wT+k9XBVN/9RVp9bNm
kanipz8lY81uu7UZR1Heui8NBoVBTy65RL72WkoZDQ0S9Tz/PO0Pm0rJmQx3
QutgFMyqVWRnstl46717U5YHRiBB0ObPp+AKlfWMGkXxOJ9+Spmx//Y32ugI
/bn1ViJQqiKLpTr0UFJzR44kprr99k14R6GSgQOJux13HOnKkyZRFMqjjxIj
jsWI6YAogdzpLwF7crspqmjlyraGaqHlsHgxX9gpUyja6NRTScTARAYPJmMm
mHf3Go9A01lKcIgk7gMwuDlz6ObY2MxGrUJ8lDerNm+0qLxKdeiVc9NLWhal
aCBSX/MpZyMudzBTKJXLpbQSix2uvHMuJOkVtCOQUgtnlXfjyUJZLufD+OgM
86Jlis3xJ/VNkX9dMRezSfZYtlDxtSMnH7svRgxHiRBXrijEw1HqQClPamEl
/iITAknxpEtoKuGg8Iq8aQdKWT+9DHcmcmiokK/kc1Cc/bIU+BDL0ufqh1jS
p7q6kUrp5MncyhQB5KBqxW0p6mggQUpvhobg7Clp3XqU3BrRjJTmKF9fkox2
pXwKAmVXeUetlOajlDeDEq8VyLboDGsJ/ahazc9NKWmLZJRrSxkPmXHyZm1l
45FYKl8ulzOKEYeH2IiktM64jB0QC6T5YJWYIJsvKfco9Ggp7WrQI3LnnUlp
YCrL6afT2TvvpM/Q4c0ANZ7tGnP55e++y69W8c03XA8R7pC4aBH/FtpxU2B0
CQ29807bhdsGFG9wgSefJO8fEBbUvtVWphrVDjss32PE61ud8ZB0lUe660Jp
5hlbvOw98+/F9OfdplRBAcViqYrmj39MgT9sQ1KsDnS+vn35V4MGyb/6lZYW
m+Hzz0l5VSN6oC+efTZFD7HhFItknQGVfestsnNB0wVdArtRtwqSGjYqbbMN
kUdQqp12qrJJgV5BaUa1oGOGzAwbMTD9IMfLlhG1z2ZpJXETQXXHUiST8l//
SvvTvv02zRkOiACO11+n49VX6Xj5ZX7gMzuPAiiJZcSBC3E5KkFVqBDVovKF
C+mWBKMBL//6a8pp0UGJXruWeo52QdDvuEO+8kqyWB5zDN1hQ4fSuwvcZ1j8
7qJIaHfzzcmkOWQIvQA45xz5ttvohQH63O2us52FliE+5PnkqbiqOP3xciOX
tByKEa/L6XK53W6Xks/W1NWtmAm47BUDiC0Q06IMikpQg574EJPyOSrGEp/m
laNkx9KnvyumAtWmFW73KefjqtElmGCvr3OaHcbm0YXjFMJuW6WpWMm8A/Te
vtqMo+i2Svo1HQwpDkB8VEpbysY0U5DNXcmzLR5sLqEOzR5K9RhHoh4ityZo
QkpLyZBXt5hBLbK/RkplYq8+Vfb0Wc8p0Z/Nr2fy6bBWrYPnvha3lQy6ta7G
uQ4jltI646rpgEggzQcLbctj0xmbegZ6tpR2MegRyRR+FgJ/00109qCD6LNZ
Prfly+m9PQqcfLJcLkN1lRS7gQqWcq1PH/HVLBkz9J+mMHEi11seeaS5Czmg
WkPbgyrmdpMj1q67ihUvdGvkSGrsl7+kLUGhMmYyjz24ikUksQP6EqppFUBt
vfpqLX3B3nsTaVX2USIfoEcf1WxDm21GuwoFg9rutLKiZ4dClCBONQCBLl16
KamtZlogdHGos8OGaTPSrx9NKaiWzyd7PHQ5GBlIDfgO28K2EWV0++3JZ+/y
y6nPr7xCSnk70l50ATCLmE6QBVCJcFieMYP2J739dvmGG3DvUGqHceNo9JjC
0aNJkT7gAJqb3Xen1wnMWxAzCvKHmwzkcostSOtW86q1QnBN43wBB8SEpYbD
KMBiMRwMCkPDADFM/AhgGTFqcNxddqFJgDzipwIyiJmBRBx9NLFn/Gw4HMSz
MXv4F58xgcceSwUOPpjyeENwQNYhVowiddeQMViWpA79GTNGvvhiWnqQR8Pu
wS2IFiI+CmptBG1e0oNBnmYCfyGhE5FJ2SYaK9bMLZ0qCrgZNVXTVoc7IEZJ
1AfziemCHnQlNgS5bUJKFRkT3sC1EAqZSQ+KtbIrbKspGW2msKhsM4NtbWwI
Utpl4ImsmcYrKSndPv2UPmy3nfjNL/RhKC4ocOCBLOMx2/UUio2KQw+lM9AD
awE1kqnY+oCgNgGFmvXxiisavgbaCVTVu+8m7QrKaK3+BKUNQ2AvfOfMIVqk
ZwTKQPXbgeIYPpxeobci0PN77qH36aqSetRRtKsrU9HicRqmam3BwM88k0J1
9PvSfv451TBihDZakL1rrzXdAwgAGYD2r/dkA9eFFgtupc+EAP6SThOFnD2b
MnKDWV90EVEwzKaabdvsgFaN+kEqsIiTJ9NOu88+Sz6W6G2TCRNyObpu3jwi
zlOn0sjQC3QWdUN099mHFPWBA0nqMQhMVRclfG4H11AZByMdakpq9QAHqXMY
CrMaWG36+rt3pB2cHzaW7u0JZhU3Fn5E99iD+N1ll9H9h7unW0KQWo34dOIl
Fix0Oyy5tdD6sKS0DjTiw7TQv/2N8sxK5vvrXHcdfbvDDhTGrmDIEDpx+eVa
ERbXDiW3FmxXUxRoHPPnc61mzJi65aBhvP02pSmbOJEilQyqCfSS/fajVL8Y
3fPPE7kz15xBeW68UTNWoPUjj+wJ29ZjRK+8QqnkVJ89aPDjxhFZWLWKNjad
MUM+/njNuLP11kQoXnyxKpLrk0/IL26vvbSp2313Miq9/LKpQ9q//kU8dtSo
qr1NofyBr/7979z7zgyoE4IUjRKHwiUsiKuRY7PN1u6088oDj/h89IS/H+t+
Yey9Dx49x334X04/aPH++5RZHjtQGGj+HVeJmWqNqiASmFootxB/iD0mZt99
yUiBoR97LJG5008nEwYoFeQc3OqWW2hi7rtPfvhhshI+/TQxL0zkW28Ra4RE
LVpELm2giStWtFwcSrlMtxRo69Kl5AiXyVCHk0lylgOLffVVyoQAyXrqKRIr
DBD3O+6tO+6gUeP2mTSJLGIXX0z33Fln0cycdBKZe7DIhx/OTWOYPdyp4OuY
TNU6BqnEwjHTGONoPZSXtSlUBo+7u++muS11RpiDRXwsWOg6WHJrofVhSWkd
aMSHaRgrV5Kvl2SyAQ+0N6ZOx+PqOWZLgQrE8I9/8PqEG2CydAhQhxoE1C2W
WmCnnUS+V9ksKV5XXknONIY00VCejjqKNPbHHqMXr43pEwbKgyodDop96GHA
ImJafvITbU6YAxsYH3RZjMfvpyTV6lyBJIAuQS/XO/FANXe7Zb2TH5T+M84g
V7TPPxe3+8UX9Jr75JOrUrptv7187rm0Ctk29gvg+Oor+ZlnSq5J3+49Yu0m
VanElm/ad/EmQ7Ob7JaXtl9nrlOulTb9XBqSkEaFpQm/la69TrrvbOmPR0jv
7brpki17rYGqCQUbzGjYMFI4jzmGMo6D5UNRv+020t5nziSVPpEg2TPbxNVC
twBcDBIKOfrwQ+IIIF/42cF6gXaBNdx+O1kFccdD0sG2VBdESPqIEWRgBJvf
dVeSaIgkY1j4OcKPGUtm2SPoFTMt4QeKZbeD6E6bJgiltIiPBQtdB0tuLbQ+
LCmtA22nb0l5t79kCT1coeLWMgXogsxdasYM9RyKsyeyWvzyy+nPgQMFbUGr
ZARrxYqG+oY6mf8d9BPuPLVuHTGr6dPpDSkzNakH1BfoNxgIuvfBB826QoHy
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
pSoStFrq9Vdp5CObXfHbbabMGnh9ctAppS2qHcw23ZTseRdeSA5DiYT82Wek
4IJKgwwbbDrQNffZh5Rd8KAXX6SSeixdShdCvzzttKqccuzYbjt6af7znxNT
w3I28mYcXAmMCfzd46E61d2O9Ad6iGp/9jNKwAEqBCbeoKUJvf3b3yhDwvTp
NI8TJ5JUoQmWi7A+JwITxECYneiNN6iT+p2VWgm4wcFNMd/z5pFtApr/rbeS
tRDccfx4sowdeSS5Q0KEmIUFgrT11jx6pSvC/A1shXl/4dbebz9itFgBdOnM
M0kYr7pKvvlmmmP8qj39NNmTIZv4Vduw33VYFh8LFroOltxaaH1YUloHGvGB
vgI1AiqF+gK8VCJ/EXwFHVWEmTPpS3VTHmiLrCZDjAZ0DPa2lhjVqlX05vzy
y3mmA3ZAd5kwQX7iibVfLoUCIyn2pc6lJJkMaURqgxhWD9iXp1OxejWlGrjj
DlIIDziANH1D/m/9AX11wAD51L0+edD2yN8OvHj5kOHrqjNL05LZ7ZT9APJz
zjmkxveqCtuhJbTZKFJi2jRa8XicTB6/+AW9Q9fZ9fjRty/xjquvplzZCxZQ
Om4VX3xBPOj22+m1OxMOwzFkCGVXuOEGcnUDB9FfawYwdpDuRx6hFo891sjL
2IF7Aar8+efLXi+RplSquYge8HrcRxjLs8+SbeP66+kmAj3Y9f/buxe4Nups
D+D/vltb+7Ktz1prXVut4tuq1Vaq66Nquavr415Ru1eN2qsRdRsXldpititi
b41eBa8oe6ld3MV4hVXwiriIqKAbXVDDGlmKKCisUMEoaYnNPSeTzEySSQg0
lGTy+36ybsljMpn8M3PO/P//M4drXEs3KAWj7bZ6NW9Yeutnn+VE7OOP+TJM
w0LfO/0ebTbubKXI/8knfQPDpH4WSnhpw9O3RykDJQ7SjPv99+evaCRyFnXC
QiksJSz07S1axCc/Tj2Vvwr63FdeycMMMzJ81cXpW6Vsi3Iu+sFSlqlR0x5C
xEni099cmp6alu5DK5WeXdoc+SVJZqCxJCfVe27WkFPSHrE8T19zRUZaCj0z
JS2zprUv/J39FTkGaaOnpaVmbG+Untletz2dnyjSMvKbfK/29LfWZKbz+6ca
LPKdfHdT3facDEN2hWqNNO/sqcrP9C41NbuwTr6/3VZi8H6q1PTsmtZYXJgq
ziRZu422lfZ3NeZnpAlvc8yvaPLe11eSmSbvA7jcZGaJt6FptxxqZYWZvISU
VENpk++Qp9mcaN9i8O9Z6A22e5vvQFejxftUenlJY5e81OaKfOlXkllY06+8
lWbj148ka6VDoyQ+FG7Rf087TXmMYiPhHbjWp90srruOH6d4SWI0+mLYIBRf
TRXO6yb/iSNk9YyJI4/ksSNvvilfQJMiHyk6olgvVnbu5LhYHidDa1tbG7OF
xy2KdZ97jvNLyjMomg1KSoISFMpBKSukgNNs5tE72uXxqA385S88ZOuKK7iE
WtBS6A2kcF2aEL5kiUZaRZHu2WfzxIYnnuB4nv579908kGju3OBn0rdFCQIt
R5oURAmbnIx//TVPTdqyhatgU6y8334arz3sMB4dR29EcXN5OSe9g9Y2p+VT
YvD44/wqSugCh/wpS6YwndooxeWUzVFG87e/RZVnBZFzIquVL6i0fj2Pozrn
HG6aEcbOCTEwYcp3c49qPWKl7Zhry483FZ74mPnEkltT3rlk6Y7jF+9asIC/
x1mzfPPuYz6TRc5ZpCn28+ZxK6B9wwkncBs7/3we00c7hHXruGONmgmllSUl
/NU1NPDHjXnvLUQQJ4kPxeVVFVWspq4i30BP2N7YN8hL9KKvq2fQJt9aytsk
v8rW1FiVmZpW2hr+FV1VFLilWUqbmptKstMztjeFvbO/MV0IS2lVDW/3irom
Dv8GWkvojXIqGtvbG/Pp4bTtvI/vb6K3T82paO9q3s4rkuOLFPsbM1IIPWZR
zrZo3dlUSDGqoaqpvdVWQhGkocSb1Q400Ttkl9S1tzeXZPPdTbr77eu43YaK
upUOVNATMwqbqJFVWPgl/GMfaKqr8u0CarZzlmGp84RrOZ7+Emo6hu2tPT1N
FdnUTBv7wzanPhu9RXppjdTMq5r419aXT+0zc3tzO2X5GfRWdd6W2lWTQ+9b
WNPc3lRB75pWKP1MwjR+HUmqVurjdjl7e53ENUjIpyQ+xxzD/33oId8D27fz
n1OmcOAShjRI7bLLfH9SHiO8w+UUfX3ubX94aczlPwrVfHMKsrOz+RR6IMqB
pMcp/I4JirUoRJUD8AMO4OnyukRf0aOPcqcZfSMUlIY7UU+bggJjeg7FqBs3
hs9xokEJSFkZX9+HlrVokUaQTZv7pJO4O4FCesqJNHtVaG3OOIPHS1Gs/MAD
3C1CKQA9WTNPmz6ds3KKramJUuOsq+MSc5REUF7z8svcaCjBPu447dyBFkjN
Oy2NUy1KuF59lac1Rf7w333Hb1FYyKMx16zhVC5c9kiJ5fLlXHwjK4uzTUrk
d+yQU63vv+cVfPddrhVBD9LXdN99nB1cey3/cCjHos9E34ivt2XWniOmdi2b
+GHa2LLbxFNmcf/vxQ2V4ny7OKZXhMxUUt32iDH/FHP+Jk4oFxc/I27aJDbc
KvLWiNJTxQeHiq/GiwFqEpThSjPu6ZuhBI5+rbS16N1pHS69lLu2br2VS0r8
7nc8k4l+KchZEle8JD6Kfop00qWQI9qXJLQei8EySCg10EzBWXZNVD25NkuK
MARfUlzzTk+/LVWkBh9caYV6/KfKbRRScvLSZ6OAMNv/9s0GX6TqX7smCiwt
QWc8g+8c6Ovz70Sb8lNFdp0n+PmFQqTU6e50un7bbYihtFKVHmpk2XUBr2qv
yBAp/qxZu+X0UfPK9L1XIyU5NYEtR92c+hotIiU/6NBES/Xfo6yALSdF5Nik
e/sb+R3aB2v8+pBErZQynt6WsoJc9ZXsjKZca60jXJEpJfGR5vJIac7nn/v+
/O//jvBeU70z3bds4X/LhawpwOOpCiUl3DXgH9REgdmeM8/ii8WEGcG2bZtv
LSiOjolNm5QQmOK9nJzYLDYeUBRNYT5F8YsX87cU7sQ+bfv587mD4o47uDDA
yE5qoPj+vfe4tdx+Oyc7s2ZprBBF3ocfztH28cdzoD91qsZzKEA/4ggur0EZ
0Nq1nObQ56TkaM4c7Q9Jn//EE3meyfr1POvn9de54BclNRUV3JlCCcb55/NW
0NxGdOchh3AnFL3Lgw/ymCrKWajlBxZk27mTF/n2256XXvyp+Hc7im+stP48
7/Xj7/7gkDVfTD1m1xjtPpoBMb5FLHxTpD4r/v1BsfFX4rnzReXR4rP9xA9R
9rAEbRXaeAdM+v7kqX//l+lVxllFj8z+3fbZt78563L79GVdk+e7x0QcPkev
P+ggzkMvuYS7cSlBe+opnpdEX1lrKwrQ6U+8JT49NdlSvBH9SxJXP8V0fc05
hpxm+v+evrCnDfooQ0nZXlWanZ6WbsjYXtMafpF9lOJkltZszzakpaVnF1b1
hL2TF+sdQSS4c8aQY+sKfv+mwnSRWtjH57wpjEyt8aZnfc0VFGdabEqk6j2j
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
t/b1SZMxNO/09Lda+GR5el17T18PLZZP8Q+0lqanW5q6eF56ax13MBWG7fRK
VPptt6Gib6XtOenpJbb2AW95N2pQqRb/KMcBnkRjsal+EFotx9NVQe21tNn7
tP5myrEyq7rCNKdWiyGjoqmLmnlPa1W6v2RBX1Mpj/PMKOnytnJpnOlAu62k
gn8Rfe11Brm4QZjGrydJ0Up7bXJ3T3FDUD9Hd7G/48dUFDzgVkl8pk/3fPWV
r8o0BWwR7Nzpyc9vmHqmHPnsPmh+jjCliAZ1z85LL/kej9AlsWqV7zmlIXM0
o9TbyyN65J4RCgzjtmhbfz+HwBkZPK2E4sRwVY2nTeOz/pdf7nnkkXjpzaE1
p9SSYtjQzCUtjb/E00/nHqgjj/TVQ5av4TLswmLTRe9S8clFouJm8d/ZIqtQ
rH1DnPeZOPqHwZKXPWPGuMdN+Gns+D2Dvgdl99TmaXWlCs6Rq0zLqcehh/LX
c/LJ3KdJN8qx6ZNT7n/AAYOnRcJb/P2wwzjRveACzhEoOcrO5hrTL7zAIwOr
q/nkA/0YCgv5Ikd33MG9euecw9d1lebcRb5R5jxvHifJ557Lw/woObr/fv62
ioq4uh19f8O71qbLxYkrvZyab0EBr5jRyBUaKV+TLv4UzddMaR39OE87jecZ
Uaq/fj1nWHJW2NyceL2zcSy+Eh+ehqw5MUSXh+a+0mxDusGQkZHB9bvTsyNF
/T2NUklf7xieGvnkeZ93QJo68fEWqU7zPTUtxz9VQuPOrsYS3wgeHqGUWcdx
qDSjIUAOD+xpz5efmpIpj/SxWdICnprKXVeadzbmB94p0ji27W8tzEiV78ou
CS20kPD02G7Di7aV9tu2Z8vfe0pGYfuA8gg1FHU5OO2W4/E0lShLSMsu5Sap
3Zz66woz5TvTpWd6+vJTAxaa6q1p0NNUkqYss8K/I9Ju/HqSDK20o9riz3sK
OkMe7bYV+B/N6wh8SEl8KMSSLmCamqp96pjufO01PpXtL1nQJ/b/8IS1nqoq
w80cZs6ZE/B0qSvnhBPCrrNcxm3jxuF85IEBnqgtB5sUfz3//HCWM3IooKOP
dvHFHBeHXrtGDqUpHrzwQk4lKGWL8dwcWtyuXZ4ffvi2pbfpne53S7teeabj
+Ye/fMq04+Gbmzdc89mvV3+67pzGG0/+8Nolf73qiPpfHPTumtlvXzKtevXk
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
    "], {{0, 390}, {1107,
     0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1107, 390},
  PlotRange->{{0, 1107}, {0, 390}}]], "Output",
 ImageSize->{1111, 390},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[26]=",
 CellID->1208655185]
}, Open  ]],

Cell[TextData[{
 "Note that in addition we have set ",
 Cell[BoxData[
  RowBox[{"Cutoff", "\[Rule]", "6"}]], "InlineFormula"],
 ", taking only those modes which agree to 6 digits. This is because there \
are also spurious modes that seem to have converged, and have sensible \
looking eigenfunctions. Upon closer inspection however these modes do not \
actually converge, a more correct but slower way of seeing this would be to \
take more different grid sizes, with a larger difference between them."
}], "Text",
 CellID->1845248534],

Cell[TextData[{
 "We see that this combination of checking for convergence and checking \
whether the eigenfunctions are well behaved has left us with only physical \
modes (the table can be compared to ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["0506184"]],"https://arxiv.org/abs/hep-th/0506184"},
   "WebLink",
   BaseStyle->{"Text"}]]],
 ", page 26)."
}], "Text",
 CellID->2032271103]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Related Tutorials"
}], "RelatedTutorialsSection",
 WholeCellGroupOpener->True,
 CellID->415694126],

Cell["", "SectionHeaderSpacer"],

Cell[TextData[ButtonBox["Overview",
 BaseStyle->"Link",
 ButtonData->
  "paclet:QNMspectral/tutorial/QNMspectralOverview"]], "RelatedTutorials",
 CellID->261026728],

Cell[TextData[ButtonBox["Simple Example",
 BaseStyle->"Link",
 ButtonData->"paclet:QNMspectral/tutorial/SimpleExample"]], "RelatedTutorials",\

 CellID->498253685],

Cell[TextData[ButtonBox["Method",
 BaseStyle->"Link",
 ButtonData->"paclet:QNMspectral/tutorial/Method"]], "RelatedTutorials",
 CellID->145118313]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Extensions",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "TutorialColor", 
  "LinkTrails" -> GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:QNMspectral/guide/QNMspectral", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "ExampleCounter" -> 1, "NeedPlatMsgIn" -> None, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2017, 6, 26, 13, 34, 40.012582}", 
    "history" -> {"0.0", "", "", ""}, "context" -> "QNMSpectral`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Q N M Spectral Tutorial", "language" -> "en", "paclet" -> "QNMSpectral", 
    "status" -> "None", "summary" -> 
    "In this guide we discuss several extensions of the simple case of a \
massless scalar in AdS_5. We first show how to compute the eigenfunctions in \
addition to the modes. The package is directly applicable to coupled \
equations, perturbations on top of a numerical background, and equations of \
higher order in the frequency. We discuss all these generalizations below.", 
    "synonyms" -> {}, "tabletags" -> 
    DocumentationBuild`Make`Private`tabletaggingrules$7910, "title" -> 
    "Extensions", "titlemodifier" -> "", "windowtitle" -> "Extensions", 
    "type" -> "Tutorial", "uri" -> "QNMspectral/tutorial/Extensions"}, 
  "SearchTextTranslated" -> ""},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> 
  "11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, 2016)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "RasterizedOutput"->{
  Cell[38331, 819, 45781, 759, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->1050139078],
  Cell[92580, 1840, 42076, 698, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->1666872900],
  Cell[161770, 3362, 86603, 1428, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->1208655185]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"RasterizedOutput", 252707, 4916}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[582, 21, 3298, 77, 70, "AnchorBarGrid",
 CellID->1],
Cell[CellGroupData[{
Cell[3905, 102, 47, 1, 70, "Title",
 CellID->509267359],
Cell[3955, 105, 26869, 471, 70, "TutorialJumpBox"],
Cell[30827, 578, 307, 10, 70, "Text",
 CellID->502995283],
Cell[31137, 590, 117, 3, 70, "Text",
 CellID->135622400],
Cell[31257, 595, 245, 5, 70, "Text",
 CellID->1916731237],
Cell[31505, 602, 67, 1, 70, "MathCaption",
 CellID->1825449234],
Cell[31575, 605, 121, 3, 70, "Input",
 CellID->1373894796],
Cell[CellGroupData[{
Cell[31721, 612, 74, 1, 70, "Section",
 CellID->17448368],
Cell[31798, 615, 331, 11, 70, "Text",
 CellID->932219416],
Cell[32132, 628, 1191, 36, 70, "Input",
 InitializationCell->False,
 CellID->165628634],
Cell[33326, 666, 442, 15, 70, "Text",
 CellID->262088086],
Cell[CellGroupData[{
Cell[33793, 685, 506, 16, 70, "Input",
 InitializationCell->False,
 CellID->1911878601],
Cell[34302, 703, 215, 7, 70, "Output",
 CellID->148385296]
}, Open  ]],
Cell[34532, 713, 166, 4, 70, "Text",
 CellID->1547154726],
Cell[CellGroupData[{
Cell[34723, 721, 137, 4, 70, "Input",
 InitializationCell->False,
 CellID->657976911],
Cell[34863, 727, 2999, 71, 70, "Output",
 CellID->844144415]
}, Open  ]],
Cell[37877, 801, 79, 1, 70, "Text",
 CellID->815983778],
Cell[CellGroupData[{
Cell[37981, 806, 347, 11, 70, "Input",
 InitializationCell->False,
 CellID->1788956318],
Cell[38331, 819, 45781, 759, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->1050139078]
}, Open  ]],
Cell[84127, 1581, 354, 11, 70, "Text",
 CellID->2038277146]
}, Open  ]],
Cell[CellGroupData[{
Cell[84518, 1597, 57, 1, 70, "Section",
 CellID->1227182867],
Cell[84578, 1600, 214, 5, 70, "Text",
 CellID->1262710064],
Cell[84795, 1607, 439, 14, 70, "Input",
 InitializationCell->False,
 CellID->436716337],
Cell[85237, 1623, 240, 5, 70, "Text",
 CellID->1468183492],
Cell[85480, 1630, 130, 4, 70, "Text",
 CellID->1954203515],
Cell[CellGroupData[{
Cell[85635, 1638, 399, 13, 70, "Input",
 InitializationCell->False,
 CellID->1191201591],
Cell[86037, 1653, 216, 7, 70, "Output",
 CellID->1822410046]
}, Open  ]],
Cell[86268, 1663, 602, 13, 70, "Text",
 CellID->673335852],
Cell[86873, 1678, 79, 1, 70, "Text",
 CellID->833824238],
Cell[CellGroupData[{
Cell[86977, 1683, 145, 4, 70, "Input",
 InitializationCell->False,
 CellID->2076168276],
Cell[87125, 1689, 3660, 85, 70, "Output",
 CellID->2103020695]
}, Open  ]],
Cell[90800, 1777, 114, 3, 70, "Text",
 CellID->1550212365],
Cell[CellGroupData[{
Cell[90939, 1784, 460, 14, 70, "Input",
 InitializationCell->False,
 CellID->253589195],
Cell[91402, 1800, 216, 7, 70, "Output",
 CellID->1923651675]
}, Open  ]],
Cell[91633, 1810, 164, 4, 70, "Text",
 CellID->480644219],
Cell[CellGroupData[{
Cell[91822, 1818, 755, 20, 70, "Input",
 InitializationCell->False,
 CellID->1841952292],
Cell[92580, 1840, 42076, 698, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->1666872900]
}, Open  ]],
Cell[134671, 2541, 179, 4, 70, "Text",
 CellID->2092352079],
Cell[134853, 2547, 167, 4, 70, "Text",
 CellID->1656846637],
Cell[CellGroupData[{
Cell[135045, 2555, 237, 7, 70, "Input",
 CellID->260342505],
Cell[135285, 2564, 293, 9, 70, "Output",
 CellID->1152485965]
}, Open  ]],
Cell[135593, 2576, 481, 13, 70, "Text",
 CellID->497916690]
}, Open  ]],
Cell[CellGroupData[{
Cell[136111, 2594, 59, 1, 70, "Section",
 CellID->724119334],
Cell[136173, 2597, 211, 6, 70, "Text",
 CellID->291408648],
Cell[136387, 2605, 1800, 51, 70, "Input",
 InitializationCell->False,
 CellID->1028919644],
Cell[138190, 2658, 169, 4, 70, "Text",
 CellID->2120240899],
Cell[138362, 2664, 570, 18, 70, "Input",
 InitializationCell->False,
 CellID->457136668],
Cell[138935, 2684, 338, 8, 70, "Text",
 CellID->668520111],
Cell[139276, 2694, 401, 13, 70, "Input",
 InitializationCell->False,
 CellID->1930609016],
Cell[139680, 2709, 216, 5, 70, "Text",
 CellID->1516312675],
Cell[139899, 2716, 63, 1, 70, "Text",
 CellID->1713087072],
Cell[139965, 2719, 641, 21, 70, "Input",
 InitializationCell->False,
 CellID->986185642],
Cell[140609, 2742, 196, 4, 70, "Text",
 CellID->746321380],
Cell[CellGroupData[{
Cell[140830, 2750, 509, 16, 70, "Input",
 InitializationCell->False,
 CellID->830601699],
Cell[141342, 2768, 217, 7, 70, "Output",
 CellID->1836969233]
}, Open  ]],
Cell[141574, 2778, 94, 1, 70, "Text",
 CellID->2135755933],
Cell[141671, 2781, 207, 5, 70, "Text",
 CellID->612186269],
Cell[141881, 2788, 450, 14, 70, "Input",
 CellID->834591619],
Cell[CellGroupData[{
Cell[142356, 2806, 312, 8, 70, "Input",
 CellID->1215656386],
Cell[142671, 2816, 272, 7, 70, "Output",
 CellID->1211833488],
Cell[142946, 2825, 272, 7, 70, "Output",
 CellID->550524668],
Cell[143221, 2834, 340, 9, 70, "Output",
 CellID->1308543800]
}, Open  ]],
Cell[143576, 2846, 186, 4, 70, "Text",
 CellID->1744795221]
}, Open  ]],
Cell[CellGroupData[{
Cell[143799, 2855, 70, 1, 70, "Section",
 CellID->1672305947],
Cell[143872, 2858, 241, 7, 70, "Text",
 CellID->1821465625],
Cell[144116, 2867, 2841, 84, 70, "Input",
 CellID->542588835],
Cell[146960, 2953, 387, 9, 70, "Text",
 CellID->374921743],
Cell[CellGroupData[{
Cell[147372, 2966, 882, 29, 70, "Input",
 CellID->159997112],
Cell[148257, 2997, 6251, 126, 70, "Output",
 CellID->1870126020]
}, Open  ]],
Cell[154523, 3126, 200, 4, 70, "Text",
 CellID->295555418],
Cell[154726, 3132, 705, 26, 70, "Text",
 CellID->450804115],
Cell[155434, 3160, 389, 10, 70, "Text",
 CellID->208159310],
Cell[155826, 3172, 500, 14, 70, "Text",
 CellID->177262027],
Cell[CellGroupData[{
Cell[156351, 3190, 264, 9, 70, "Input",
 CellID->1359185814],
Cell[156618, 3201, 1804, 55, 70, "Output",
 CellID->1905709529]
}, Open  ]],
Cell[158437, 3259, 321, 8, 70, "Text",
 CellID->1052422759],
Cell[158761, 3269, 722, 22, 70, "Text",
 CellID->1055964951],
Cell[159486, 3293, 704, 15, 70, "Text",
 CellID->572501216],
Cell[160193, 3310, 68, 1, 70, "Text",
 CellID->1961674373],
Cell[CellGroupData[{
Cell[160286, 3315, 1260, 36, 70, "Input",
 CellID->496353076],
Cell[161549, 3353, 218, 7, 70, "Output",
 CellID->161869123],
Cell[161770, 3362, 86603, 1428, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->1208655185]
}, Open  ]],
Cell[248388, 4793, 535, 10, 70, "Text",
 CellID->1845248534],
Cell[248926, 4805, 397, 11, 70, "Text",
 CellID->2032271103]
}, Open  ]],
Cell[CellGroupData[{
Cell[249360, 4821, 287, 12, 70, "RelatedTutorialsSection",
 CellID->415694126],
Cell[249650, 4835, 31, 0, 70, "SectionHeaderSpacer"],
Cell[249684, 4837, 164, 4, 70, "RelatedTutorials",
 CellID->261026728],
Cell[249851, 4843, 163, 4, 70, "RelatedTutorials",
 CellID->498253685],
Cell[250017, 4849, 146, 3, 70, "RelatedTutorials",
 CellID->145118313]
}, Open  ]]
}, Open  ]],
Cell[250190, 4856, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)
