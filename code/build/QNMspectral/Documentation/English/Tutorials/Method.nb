(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    151746,       3364]
NotebookOptionsPosition[    143366,       3100]
NotebookOutlinePosition[    146204,       3172]
CellTagsIndexPosition[    146123,       3167]
WindowTitle->Method
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["Q N M SPECTRAL TUTORIAL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Overview\"\>":>Documentation`HelpLookup[
       "paclet:QNMspectral/tutorial/QNMspectralOverview"], "\<\"Simple \
Example\"\>":>Documentation`HelpLookup[
       "paclet:QNMspectral/tutorial/SimpleExample"], "\<\"Extensions\"\>":>
       Documentation`HelpLookup["paclet:QNMspectral/tutorial/Extensions"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"RelatedTutorialsSection"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"QNMspectral/tutorial/Method\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["QNMspectral/tutorial/Method"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/QNMspectral/tutorial/\
Method.html"], StandardForm]], "Input", TextClipboardType -> "PlainText"]}, 
            Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$8589], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "QNMspectral/tutorial/Method", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[CellGroupData[{

Cell["Method", "Title",
 CellID->509267359],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{
     Cell["Boundary Conditions and Eddington-Finkelstein coordinates"],
      "paclet:QNMspectral/tutorial/Method#13864819",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> 
            Association[{
              "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
               "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> \
<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.0-c060 61.134777, \
2010/02/12-17:32:00> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmp:CreatorTool=Adobe Photoshop CS5 Macintosh \
xmpMM:InstanceID=xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A \
xmpMM:DocumentID=xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A \
stRef:documentID=xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
     Cell["Extension: coupled equations, higher powers of \[Omega]"],
      "paclet:QNMspectral/tutorial/Method#1904411934",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> 
            Association[{
              "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
               "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> \
<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.0-c060 61.134777, \
2010/02/12-17:32:00> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmp:CreatorTool=Adobe Photoshop CS5 Macintosh \
xmpMM:InstanceID=xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A \
xmpMM:DocumentID=xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A \
stRef:documentID=xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
     Cell["Discretization: Pseudospectral Methods"],
      "paclet:QNMspectral/tutorial/Method#1267753975",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> 
            Association[{
              "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
               "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> \
<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.0-c060 61.134777, \
2010/02/12-17:32:00> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmp:CreatorTool=Adobe Photoshop CS5 Macintosh \
xmpMM:InstanceID=xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A \
xmpMM:DocumentID=xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A \
stRef:documentID=xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
     Cell["References"],"paclet:QNMspectral/tutorial/Method#558260947",
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> 
            Association[{
              "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
               "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> \
<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.0-c060 61.134777, \
2010/02/12-17:32:00> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmp:CreatorTool=Adobe Photoshop CS5 Macintosh \
xmpMM:InstanceID=xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A \
xmpMM:DocumentID=xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A \
stRef:documentID=xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
     Cell["Generalized Eigenvalue Equation"],
      "paclet:QNMspectral/tutorial/Method#543512774",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> 
            Association[{
              "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
               "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> \
<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.0-c060 61.134777, \
2010/02/12-17:32:00> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmp:CreatorTool=Adobe Photoshop CS5 Macintosh \
xmpMM:InstanceID=xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A \
xmpMM:DocumentID=xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A \
stRef:documentID=xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], ""}
  }]], "TutorialJumpBox"],

Cell[CellGroupData[{

Cell["Boundary Conditions and Eddington-Finkelstein coordinates", "Section",
 CellID->13864819],

Cell["\<\
To find the quasinormal mode spectrum, we have to solve for a linearized \
perturbation on top of a black hole/black brane, with ingoing boundary \
conditions at the horizon, and normalizability at the boundary. \
\>", "Text",
 CellID->1685543347],

Cell["\<\
It turns out that Eddington-Finkelstein coordinates are perfectly suited for \
this problem. By Eddington-Finkelstein coordinates we mean more specifically \
a metric of the form\
\>", "Text",
 CellID->65355837],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["ds", "2"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"f", "(", "r", ")"}]}], " ", 
      SuperscriptBox["dt", "2"]}], "+", 
     RowBox[{"2", 
      RowBox[{"g", "(", "r", ")"}], " ", "dt", " ", "dr"}]}]}], 
   TraditionalForm]], "InlineMath"],
 " (+ spatial part), where f(r) is the blackening factor, and g(r) depends on \
the gauge of the radial variable."
}], "Text",
 CellID->374829256],

Cell["\<\
Consider the simple example of a massless scalar field in a 5-dimensional \
Schwarschild-AdS black brane, which can be written as\
\>", "Text",
 CellID->1617778002],

Cell[BoxData[
 RowBox[{
  RowBox[{"eq\[Phi]", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "6"}], " ", "\[ImaginaryI]", " ", "\[Lambda]", " ", 
     RowBox[{"\[Delta]\[Phi]", "[", "u", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "3"}], "-", 
       SuperscriptBox["u", "4"], "+", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "u", " ", "\[Lambda]"}]}], 
      ")"}], " ", 
     RowBox[{
      SuperscriptBox["\[Delta]\[Phi]", "\[Prime]",
       MultilineFunction->None], "[", "u", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"u", "-", 
       SuperscriptBox["u", "5"]}], ")"}], " ", 
     RowBox[{
      SuperscriptBox["\[Delta]\[Phi]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "u", "]"}]}]}]}], ";"}]], "Input",
 InitializationCell->False,
 CellLabel->"In[1]:=",
 CellID->77585105],

Cell[TextData[{
 "Here u=0 is the boundary and u=1 the horizon, corresponding to a gauge \
where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "u", ")"}], "=", 
    RowBox[{
     RowBox[{"-", "1"}], "/", 
     SuperscriptBox["u", "2"]}]}], TraditionalForm]], "InlineMath"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Lambda]", "=", 
    RowBox[{
     RowBox[{"\[Omega]", "/", "4"}], "\[Pi]", " ", "T"}]}], TraditionalForm]],
   "InlineMath"],
 ", with \[Omega] the frequency of the perturbation and T the temperature of \
the black brane."
}], "Text",
 Deletable->True,
 CellID->660767926],

Cell["Near the horizon there are two solutions,", "Text",
 CellID->205460912],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "u"}], ")"}], 
       RowBox[{"-", "p"}]], "eq\[Phi]"}], "/.", 
     RowBox[{"\[Delta]\[Phi]", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"u", "\[Function]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "u"}], ")"}], "^", "p"}]}], ")"}]}]}], "//", 
    "Expand"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "1", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Normal", "[", "%", "]"}], "\[Equal]", "0"}], ",", "p"}], 
  "]"}]}], "Input",
 InitializationCell->False,
 CellLabel->"In[1]:=",
 CellID->2112883632],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      SuperscriptBox["p", "2"]}], "+", 
     RowBox[{"4", " ", "\[ImaginaryI]", " ", "p", " ", "\[Lambda]"}]}], 
    RowBox[{"u", "-", "1"}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"u", "-", "1"}], "]"}], "0"],
    SeriesData[$CellContext`u, 1, {}, -1, 0, 1],
    Editable->False]}],
  SeriesData[$CellContext`u, 
   1, {(-4) $CellContext`p^2 + 
    Complex[0, 4] $CellContext`p $CellContext`\[Lambda]}, -1, 0, 1],
  Editable->False]], "Output",
 ImageSize->{157, 35},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->1846454863],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", "\[Rule]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Lambda]"}]}], "}"}]}], "}"}]], "Output",\

 ImageSize->{129, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->80699644]
}, Open  ]],

Cell[TextData[{
 "One goes to a constant, and the other behaves as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Delta]\[Phi]", "(", "u", ")"}], "~", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "u"}], ")"}], 
     RowBox[{"i", " ", "\[Lambda]"}]]}], TraditionalForm]], "InlineMath"],
 "."
}], "Text",
 Deletable->True,
 CellID->1101258113],

Cell[TextData[{
 "Including time dependence, this last solution behaves as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Delta]\[Phi]", "(", 
     RowBox[{"t", ",", "u"}], ")"}], "=", " ", 
    SuperscriptBox["e", 
     RowBox[{
      RowBox[{"-", "i"}], " ", "\[Lambda]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", "\[Pi]", " ", "t", " ", "T"}], "-", 
        RowBox[{"log", "(", 
         RowBox[{"1", "-", "u"}], ")"}]}], " ", ")"}]}]]}], TraditionalForm]],
   "InlineMath"],
 ", so as t increases, 1-u has to increase as well to keep a constant phase, \
meaning u has to decrease, so this solution corresponds to an outgoing wave. \
The other solution going to a constant must then correspond to an ingoing \
wave."
}], "Text",
 Deletable->True,
 CellID->967003255],

Cell["\<\
Notice that the solution that we want, the ingoing one, is perfectly smooth, \
while the one we want to discard, the outgoing one, oscillates more and more \
rapidly as we approach the horizon. These properties will help us pick out \
the correct solution, as we will see in the next section.\
\>", "Text",
 CellID->1933901115],

Cell["\<\
The boundary is more straightforward, again there are two solutions, now \
corresponding to a normalizable and a non-normalizable mode:\
\>", "Text",
 CellID->489084805],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", "u", ")"}], 
       RowBox[{"-", "p"}]], "eq\[Phi]"}], "/.", 
     RowBox[{"\[Delta]\[Phi]", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"u", "\[Function]", 
        RowBox[{"u", "^", "p"}]}], ")"}]}]}], "//", "Expand"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Normal", "[", "%", "]"}], "\[Equal]", "0"}], ",", "p"}], 
  "]"}]}], "Input",
 InitializationCell->False,
 CellLabel->"In[3]:=",
 CellID->569349032],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", "p"}], "+", 
     SuperscriptBox["p", "2"]}], "u"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "u", "]"}], "0"],
    SeriesData[$CellContext`u, 0, {}, -1, 0, 1],
    Editable->False]}],
  SeriesData[$CellContext`u, 0, {(-4) $CellContext`p + $CellContext`p^2}, -1, 
   0, 1],
  Editable->False]], "Output",
 ImageSize->{107, 35},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->1085863252],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", "\[Rule]", "4"}], "}"}]}], "}"}]], "Output",
 ImageSize->{119, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[4]=",
 CellID->787644158]
}, Open  ]],

Cell[TextData[{
 "The solution going to a constant is the non-normalizable mode, while the \
one going like  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Delta]\[Phi]", "(", "u", ")"}], "~", 
    SuperscriptBox["u", "4"]}], TraditionalForm]], "InlineMath"],
 " is the normalizable mode."
}], "Text",
 Deletable->True,
 CellID->489426323],

Cell[TextData[{
 "This boundary condition can be easily dealt with by rescaling the \
fluctuation ",
 Cell[BoxData[
  FormBox["\[Delta]\[Phi]", TraditionalForm]], "InlineMath"],
 " with a power of the radial variable in such a way that the \
non-normalizable mode becomes divergent, while the normalizable one remains \
finite. In this case we could for example rescale ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Delta]\[Phi]", "(", "u", ")"}], " ", "=", " ", 
    RowBox[{
     SuperscriptBox["u", "4"], 
     RowBox[{"\[Delta]\[Psi]", "(", "u", ")"}]}]}], TraditionalForm]], 
  "InlineMath"],
 ", so that the normalizable mode goes to a constant while the \
non-normalizable one diverges with a fourth power of u. "
}], "Text",
 Deletable->True,
 CellID->1754192859],

Cell["We will see in the next section how this helps.", "Text",
 CellID->592404874],

Cell[CellGroupData[{

Cell["Different asymptotics", "Subsection",
 CellID->354031387],

Cell[TextData[{
 "The current example of an asymptotically anti-de Sitter black brane is \
perhaps the simplest case, but after suitable rescalings the method can be \
applied to a wide range of asymptotics. The cases of global anti-de Sitter, \
de Sitter and flat asymptotics are worked out in detail in ",
 StyleBox["add paper reference",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellID->1966554627]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discretization: Pseudospectral Methods", "Section",
 CellID->1267753975],

Cell["\<\
The pseudospectral method solves a (differential) equation by replacing a \
continuous variable, the radial one in our application, by a discrete set of \
points, also called collocation points. The collection of these points is \
usually called the grid.\
\>", "Text",
 CellID->1713154644],

Cell["\<\
A function can then be represented as the values the function takes on the \
gridpoints. An equivalent and useful way of looking at this set of numbers \
representing a particular function is as coefficients of the so called \
cardinal functions.\
\>", "Text",
 CellID->780243156],

Cell[TextData[{
 "For a grid ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["x", "i"], "|", " ", "i"}], " ", "=", " ", "0"}], ",", "...",
      ",", " ", "N"}], "}"}], TraditionalForm]], "InlineMath"],
 " the corresponding cardinal functions are polynomials of order (at most) \
N+1, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["C", "j"], "|", " ", "j"}], " ", "=", "0"}], ",", " ", "...",
      ",", " ", "N"}], "}"}], TraditionalForm]], "InlineMath"],
 " that satisfy ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["C", "j"], "(", 
     SubscriptBox["x", "i"], ")"}], "=", 
    SubscriptBox["\[Delta]", "ij"]}], TraditionalForm]], "InlineMath"],
 ". "
}], "Text",
 Deletable->True,
 CellID->225188045],

Cell[TextData[{
 "Using the cardinal functions one can construct the matrix ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["D", "ij"], 
    RowBox[{"(", "1", ")"}]], TraditionalForm]], "InlineMath"],
 " that represents the first derivative as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["D", "ij"], 
     RowBox[{"(", "1", ")"}]], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["C", "i"], "'"}], 
     RowBox[{"(", 
      SubscriptBox["x", "j"], ")"}]}]}], TraditionalForm]], "InlineMath"],
 ", and similarly for higher derivatives."
}], "Text",
 Deletable->True,
 CellID->667655692],

Cell["\<\
Solving the resulting linear equation will give a function which solves the \
original equation exactly at the collocation points. The hope is that as the \
number of gridpoints is increased, it will also solve the equation at other \
points.\
\>", "Text",
 CellID->2034219487],

Cell["\<\
For this to work, the choice of collocation points is crucial. The choice \
which tends to work best and is therefore most often used is the Chebyshev \
grid:\
\>", "Text",
 CellID->1991738820],

Cell[TextData[{
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "i"], "=", 
    RowBox[{"cos", "(", 
     RowBox[{
      FractionBox["i", "N"], "\[Pi]"}], ")"}]}], TraditionalForm]], 
  "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"i", "=", " ", "0"}], ",", "...", ",", " ", "N"}], 
   TraditionalForm]], "InlineMath"]
}], "Text",
 Deletable->True,
 CellID->1421600843],

Cell[TextData[{
 "For this grid it has been proven that convergence is exponential in ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]], "InlineMath"],
 ". As given these points lie in the interval [-1,1], but this can be \
rescaled without problems. (In fact in the code it defaults to the interval \
[0,1], but the horizon can be changed using the option Horizon.)"
}], "Text",
 Deletable->True,
 CellID->616759975],

Cell[TextData[{
 "For this grid, the cardinal functions are linear combinations of Chebyshev \
polynomials ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", "n"], "(", "x", ")"}], TraditionalForm]], 
  "InlineMath"],
 ":"
}], "Text",
 Deletable->True,
 CellID->988872173],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["C", "j"], "(", "x", ")"}], "=", 
    RowBox[{
     FractionBox["2", 
      RowBox[{"N", " ", 
       SubscriptBox["p", "j"]}]], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"m", "=", "0"}], "N"], 
      RowBox[{
       FractionBox["1", 
        SubscriptBox["p", "m"]], 
       RowBox[{
        SubscriptBox["T", "m"], "(", 
        SubscriptBox["x", "j"], ")"}], 
       RowBox[{
        SubscriptBox["T", "m"], "(", "x", ")"}]}]}]}]}], TraditionalForm]], 
  "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "0"], "=", 
    RowBox[{
     SubscriptBox["p", "N"], "=", "2"}]}], TraditionalForm]], "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "j"], "=", "1"}], TraditionalForm]], "InlineMath"]
}], "Text",
 Deletable->True,
 CellID->1630184905],

Cell[TextData[{
 "Below we show what these cardinal functions look like for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", "=", "6"}], TraditionalForm]], "InlineMath"],
 ", dashed lines indicate the gridpoints, where all but one of the functions \
vanish, and the remaining one equals 1."
}], "Text",
 Deletable->True,
 CellID->1087114798],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"\[Pi]", "/", "n"}], " ", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "n"}], "]"}]}], "]"}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "[", "i_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"i", "\[Equal]", "0"}], "||", 
     RowBox[{"i", "\[Equal]", "n"}]}], ",", "2", ",", "1"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "[", 
   RowBox[{"j_Integer", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["2", 
    RowBox[{"n", "  ", 
     RowBox[{"p", "[", "j", "]"}]}]], 
   RowBox[{"(", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"m", "=", "0"}], "n"], 
     RowBox[{
      FractionBox["1", 
       RowBox[{"p", "[", "m", "]"}]], 
      RowBox[{"ChebyshevT", "[", 
       RowBox[{"m", ",", " ", 
        RowBox[{"x", "\[LeftDoubleBracket]", 
         RowBox[{"j", "+", "1"}], "\[RightDoubleBracket]"}]}], "]"}], " ", 
      RowBox[{"ChebyshevT", "[", 
       RowBox[{"m", ",", " ", "y"}], "]"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"c", "[", 
       RowBox[{"i", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "//", "Evaluate"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", "Dashed", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"#", ",", "2"}], "}"}]}], "}"}], "]"}], "&"}], "/@", 
       "x"}]}], "}"}]}]}], "]"}]}], "Input",
 CellLabel->"In[5]:=",
 CellID->1104739231],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvWdUHNm593vue8671l3rrrvWXffD/eBw7OPjOGMfe6QZWZM04/F4cp7x
2J6xNEESo0koo4gSCgiEBAgBkshBICEQOefU5Jxz00ADnXNu7lPdqNVqmg5V
e1cVMr8lj6Gp2rW7qvtfu/b+P8/zX1/u/sDnf/3bv/3b/v8T/vPBF4f+tG/f
F0c+/H/gl7/67v/6K9+dO173PbDzq537Nn/57/Dipv/j3/5NCf8jfl5aZ51/
DXzuw3RH1llnnXXWQca6qq+zjg0ejzc/P4+v/dnZ2bm5OXztrwnMZnN7ezvT
vXj0+ec//wmfN6Z78egDH2b4SDPdC4YBWcP6YQNZBnGm0sLBgwcvXryIqj8r
OX78+JkzZ/C1vybQ6/X/8R//wXQvHn02btx44sQJpnvx6PO///f/1ul0TPeC
YQICAo4dO4av/aCgoAMHDlBpYV3baWBd2+lhXdvpYV3bl9a1fV3bLaxrOz2s
azs9rGv70lrQ9vDw8KSkJFT9WUl0dHRMTAy+9tcERqNx8+bNTPfi0WfLli3X
r19nuhePPk8//bTBYGC6FwwTGxsbFRWFr/3k5OSwsDB87a+zzhpi3Sezzjrr
rPPosa7t66yzzjqPHuvavs46Ntb97TSw7m+nh3V/Oz2s+9uX1v3t6z4ZC+s+
GXrYuHHjhg0b1kfvuFn3ySytBZ/MurbTwLq208O6B5Ie1rV9aV3b17Xdwrq2
08O6ttPDurYvrQVtX/e308C6v50e1v3t9LDub19a97evsw6NrM+0r7MOU0hH
GoYTvm45sbHB9wfNhx8fu31YOdPPdKfWeURY1/Z1EKITDYrqT0wn/I4b+6uZ
9C2Cyj2auSamO8VGDCrpUOxOkPTGvT/tCX2/9cRTbaf+CL/Cv9Fb+40aBdMd
XGfNs67t6yDBpFMIa49wY34O/3ipm2fvvDyf/wk37jH4dbH8O5NWxnQHPYIe
f7tOyu84twVkHAbqeoXQ9leNYAqG8fA6/FUj5OLrBrOs+9spoMz190nqfvjb
pJ1O8rMUWPKLmdY+eHnd304Pj7a/3SCfns14FWRcULnbIHsgSka1UFTvD6/P
3n3NqFpY97cfP378pP+xjvMvNuz58WJrptNtFlvuwmC+5fgT6sUJfD1hkHWf
DEmU05n+hIRnDijtX+5O8vONqtcuaetjfH2TBmyvr/tk6OER9snoZVMzt56B
Ibpy9J7TDZSj2dzYX81lvn765HGW+2Ro0Pbv3/kDjMwXWjJcbCYZruPs/1nb
qU062SK+zjCFvbZrVDqJWCURKVUK7SM8+EHCSGZwcFpusI9P2oD9uF2Z5uOT
ZFF77Qj8mGb727q2Iwc+oiqtWKrkSVWzWv3yxOmjqu1GtWAm/YXp+Mc1s40u
NlOMZMHo/fBnT7Jc2/+x49tv/DB+HfZse2fH5v97IuuU2y1FvaUNu3/Uc/kd
k1GPrz+MMDst/Pf/9e9xYTUXDufZ/ws6XhAXXlOa0zs+tGA0mpjuJjvRZvqC
kttruyzNz6/Z+oKy3c83VTQzpu2o0VRn2eJSrZi0Gma6vMYxmvST8w2V3RdT
qj4Jz918JXuD7V9kwYsZ9V/9+3/8+6zgUbNAmI06fu5H3NhfqrkVbjcWc87t
f+//PfDVu/j68+2+Y3/f9hWVFl7efuj9vedR9ccBrWTO7y//34kPfm0yeHSX
nym/BiP8yewATP2hGZPJ3NvBi79ae84v+8c/+FVoQEn42dJ7qW2NlSOc6tGq
4sGctPYbl6usOh96priycEAuW5cjB5RpK7Q9ydevcXhclRsjCdi53+fTiS+f
Elj+bdmyJeSZnwju/yrYsVlyYSdsZpgdZ6z7awqFerG2LzSq8CWrkidWfFjY
erS+P6JlJL55OLamNySnac/1or/85Ff/16XMJ1KrPh2YLjCZjUz3Gg0g1zAa
l/V4FIwDN4KQb3537rMfGpS4Fis/2O7/8l+/p9LChaL+vXc6UPXHgeGk70Cr
5ZOeLiPCA+BA9FbYRTJYg6lLtDE6OH8jhNDtsICSqqKBhblV19aVcm1n81Ti
tTpiJH+soDy/T6N+BB94yWKv7VrhgkBZfbfkW58jO14F9e78drvPd3vExcna
zlr9RD+M1Q1zk/CDuqFQGrZXeuk70b43rDovPvVPTW22Wa91c7R/VTQ6GUi3
dZSeVvNZz2SmUiNcbeNF6Uhdf3h04Z9h44Ty9yf4tXR2FQfqmTrCA1PqxThZ
u9BBrLdW78fUpX1hlYFJlCyXkdUjXyZiMW0qeD2g0iNJ3t169ApRy7H/aT35
pFGrdL81K1ErdTA4J4biASWtDRMGg6cDmxmuOC2GY92xv3MGayfXDspMP0Lb
zXqdOj/se5+ddV8+Jdzz0YXleZdgeweNUw+kgTukzIgQ7nlNQOz4mroszWx4
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
1d7TOiVc9o3n3GQyz9D5tcUjWOMpUe0wfejWMQk2RMfoVeg8So2zJckP0a3R
hb5J3KoXT8HNVEx4mHHdCjabTSq8CL1aL/OkKvda1FlqMLHEq77Ttfp2Yu8c
3O3FOZG7LYPp1T9542bDq3Cfc9s/psyVAM/75JrtsLJinuf3Vw8egy9KqHkO
pg/Xi2matEr8qf+mpe+9v8F19e2qimSwkQzTG+/WybWG20PM/XnIDRKYVdBW
HqgVOdtYfCgwmMxDCyKw5L/LJcB1+peMVIywBC7brnDnUW2CrN+zC3dpefbb
FhhybvTGhzbrHfl/1tO36wzKlIbdDnfE7lh8ksTAPw8c/yW79Ybr3nWeSFXa
Rj8W2w6Uvi+8Caz0YRrPsAUo3Q4K1vhg+D9ggNee2HU2NL2kja5wocCZnk5C
itwqx/VA1+rbkeY2+0mzztWlrpCvqL5NigxEhnppNmFuanmTZBWwxBsemE+L
6YQvir3U1NVM98BRg6UMHZkptH3TVt/OFSq9qbVkB5N6Gbh9uiXMe3372a9f
h0dvNvnG9GUsK2BQt06u2l1rdTLZiT3JV9vcepQwNsGcxli9pPf7OV7Pg4l4
AjO+cfhCfM0OeDWPhLi43zqd/yMQha0Qej2djFmjFB39mzRig+WezmiqorAP
5iO/x6WsrO6czxWT+Vs85kupM0IfuFBNxXzyUc004rzIRc28lkuw5Bb+A/zM
tZ9OT6DquvhuBwE762kgCVMop988r3ftR+yWxIGAx4aCn3YxyBQM9aFJbmQe
HvOlX8zoaxtaUGkeWlCYK1gxmzndmQMnf9vv/4vks/sOX62v7mboNvJ4SMP2
in58Y0XrYIPbTieD0ltlPylod0lZCsv2+jIKsHpUYH1dKdlXhrpzwGBh0Pj5
qf3Qc65fbOxtndK5szcEJkdG89u3u++L6rLVyWApwugLbturjr/ObABuv/zD
m95rIE9/tpNw9vc+uSqA0Wzen09M7FhdNdtxO8zXcHu7mlw1OM1mI2WuOLXx
DcTqPXsfSl1LsWKhcTgQ89LA0t5o2sAKxap12KaFXI/b1Y15KMqb3LNeU9An
+2cFmBDxQm5ZV+a/lpu+80m9rQeGOaEyq38O89XAD4FlndKFYWVUcnk1H0MP
F3WfsctjBvckM6E7IazFoLc3kh1yu96oTsW9Xtj1H7v3TTo1iv3x///GEz92
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
vYYa+y8Yj4LhKvhvmyU3/tpx5DCB0gRlCYsHgb9VMzXYfr3HQXNm8wqQbdfU
cs7AfGj9+MH7K3seKRoOrqWCAQOfgs2PRZrDvMDgK5giFdjbywqtUKmDl0Ch
5cu1S1L1vFBJ48nJLEn/rKB5ggszSEwL7Yfbw+cqR61+Iez1XS7hfNVochej
dnSJwpKIHcnqPAZvSRZ/pTn2YuPi/H0LZDClOKVvzBf8XWtwMKhR577rmpHF
/ACdH4YA9t+OYSYWo6HW3jfeofMLKfUTNz6/W3LoNVZTnJo/48PfYgcgEMUC
CRYOwyE7UMaA47+ayvaTMfqdnAJ0hGWqt31TptTtvYLLqHHMPEDIqY1v5LZ/
YvbUhwxrdujV0LfXfOKAQ9yFgCeHUdBSM+bZ6TW3UYwDrmJd1gXbBrpow9h9
XuUVo1F2/SiKaeqtcd4+KvY3ns2t/gDjWyB5cV+QeqHVrPNNrASMd1gXSAhX
OeVv3SsmNZLoMCWvWr/qimmnrxL7il4rufCp6OjfTKINSkYCuL05iKlI9jVS
ueKxlIbdNxt2c8SblVcNCBYrGthCWChsnjyd1HXkWiuY93ud5pfY8AWsHpzW
CwyfXEG+UTYyROOJ1pRj8AywOp5M/dpSROnWHcsMCEMAZxG022G95HjlucTI
wHo2E5md0IXQZN1ywCf7ONYIoMZxTgFhIa5tKqiGalvKx7PXHkt9WJgjCgkL
LZNcYHKYCDajgiSGJaYk7lJTfGgzZ1Fi9xGYNCheaSJ3w0ZMQq7oh79ZPDOr
ngOY96FjXM7sd7iNohUyF3Ex90oUhb8K9Culd5v0volVN6qlotHG2ZKzwyHP
Yl8xGvMPTleGQbmBd1drWYMAKQE12b7fhJ+HnzM5v24tgNH5MuiZ5Nnbnl1w
BzUKThfKfTbNsdlI3279b0kWISYYp1K47WhXKXVxl5sSw1uM968NMX079jcM
hFPl5DMV9rnjzBqV5NLXKKaJ6mwytcIgZ8pGU3lIuvy4hYQf51a+J+4LVtJL
wJ639Zk4B5C5XjihZFSJB6/waj+FBftqEdjKd6XD1/XC8fVO1CBiH7d1xQCU
hdFohhpwkFgDJRwYGbF9BzowMfDPlGtvrT14WTaV1vhGcv3LXm/NuAegDrBM
2MsKuiXLxMDYEqyswYxv6J8Fmx971ffPQg9vH2b2jbKHaavZJ8RyzeYpw+HW
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
    "], {{0, 310}, {500, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{500, 310},
  PlotRange->{{0, 500}, {0, 310}}]], "Output",
 CellContext->"Notebook$$105$777225`",
 ImageSize->{504, 310},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[9]=",
 CellID->17803236]
}, Open  ]],

Cell[CellGroupData[{

Cell["Boundary Conditions", "Subsection",
 CellID->2116007790],

Cell["\<\
Assuming one has done the rescaling in the previous section, there are now \
two solutions near the boundary, where the one we want remains finite and the \
other diverges. Since we represent the function as a sum of the cardinal \
functions (shown above), and these functions are all finite, this condition \
is implemented automatically by the choice of this set of basis functions.\
\>", "Text",
 CellID->10743530],

Cell["\<\
Near the horizon the solution we want (the ingoing one) goes smoothly to a \
constant, while the one we do not want oscillates more and more rapidly \
closer to the horizon. Luckily, again our basis functions match the behaviour \
of the solution we want: they go smoothly to a constant. So the correct \
solution is automatically picked up.\
\>", "Text",
 CellID->1738386601],

Cell["\<\
Hence writing the equation in Eddington-Finkelstein coordinates and working \
with a Chebyshev grid will implicitly solve both boundary conditions, we do \
not have to worry about them further.\
\>", "Text",
 CellID->1886024033]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generalized Eigenvalue Equation", "Section",
 CellID->543512774],

Cell["\<\
The simplest type of quasinormal mode equation is of the form\
\>", "Text",
 CellID->1528765870],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["c", "0"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Phi]", "(", "u", ")"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["c", "1"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Phi]", "'"}], 
      RowBox[{"(", "u", ")"}]}], "+", 
     RowBox[{
      RowBox[{
       SubscriptBox["c", "2"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Phi]", "''"}], 
      RowBox[{"(", "u", ")"}]}]}], "=", "0"}], TraditionalForm]], 
  "InlineMath"],
 ","
}], "Text",
 Deletable->True,
 CellID->1636640841],

Cell[TextData[{
 "where each of the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "i"], TraditionalForm]], "InlineMath"],
 " are linear in ",
 Cell[BoxData[
  FormBox["\[Omega]", TraditionalForm]], "InlineMath"],
 ": ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["c", "i"], "(", 
     RowBox[{"u", ",", "\[Omega]"}], ")"}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", 
       RowBox[{"i", ",", "0"}]], "(", "u", ")"}], "+", 
     RowBox[{"\[Omega]", " ", 
      RowBox[{
       SubscriptBox["c", 
        RowBox[{"i", ",", "1"}]], "(", "u", ")"}]}]}]}], TraditionalForm]], 
  "InlineMath"],
 "."
}], "Text",
 Deletable->True,
 CellID->1395168574],

Cell[TextData[{
 "When we discretize the radial variable using the spectral methods as above, \
",
 Cell[BoxData[
  FormBox["u", TraditionalForm]], "InlineMath"],
 " becomes a vector and the derivatives are represented by matrices."
}], "Text",
 Deletable->True,
 CellID->721735607],

Cell[TextData[{
 "Very concretely what we do to discretize the equation is first to collect \
the powers of the frequency ",
 Cell[BoxData[
  FormBox["\[Omega]", TraditionalForm]], "InlineMath"],
 " in the equation. For each of the coefficients we compute the discretized \
coefficient of each derivative of the function ",
 Cell[BoxData[
  FormBox["\[Phi]", TraditionalForm]], "InlineMath"],
 ", then multiply it with the corresponding derivative matrix and add them."
}], "Text",
 Deletable->True,
 CellID->1310912195],

Cell["This brings the equation in the form", "Text",
 Deletable->True,
 CellID->739824142],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["M", "0"], "+", 
      RowBox[{"\[Omega]", " ", 
       SubscriptBox["M", "1"]}]}], ")"}], "\[Phi]"}], "=", "0"}], 
  TraditionalForm]], "InlineMath"]], "Text",
 Deletable->True,
 CellID->544592701],

Cell[TextData[{
 "where the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "i"], TraditionalForm]], "InlineMath"],
 " are now purely numerical matrices. Explicitly,"
}], "Text",
 Deletable->True,
 CellID->1659568876],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["M", 
    RowBox[{"0", ",", "ij"}]], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["c", "0"], "(", 
      SubscriptBox["x", "i"], ")"}], 
     SubscriptBox["\[Delta]", "ij"]}], "+", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "1"], "(", 
      SubscriptBox["x", "i"], ")"}], 
     SuperscriptBox[
      SubscriptBox["D", "ij"], 
      RowBox[{"(", "1", ")"}]]}], "+", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "2"], "(", 
      SubscriptBox["x", "i"], ")"}], 
     SuperscriptBox[
      SubscriptBox["D", "ij"], 
      RowBox[{"(", "2", ")"}]]}]}]}], 
  TraditionalForm]], "InlineMath"]], "Text",
 Deletable->True,
 CellID->1698227968],

Cell[TextData[{
 "and similarly for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "1"], TraditionalForm]], "InlineMath"],
 "."
}], "Text",
 Deletable->True,
 CellID->1446509982],

Cell[TextData[{
 "In this form the equation has become a generalized eigenvalue equation, \
which can be solved using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s built in function Eigenvalues (or Eigensystem to get the eigenfunctions \
as well)."
}], "Text",
 Deletable->True,
 CellID->1307832486]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extension: coupled equations, higher powers of \[Omega]", "Section",
 CellID->1904411934],

Cell["The above can be easily extended in a few directions.", "Text",
 CellID->2121721600],

Cell["Firstly, if we have a coupled system of equations, say:", "Text",
 CellID->378303749],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["c", "0"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Phi]", "(", "u", ")"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["c", "1"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Phi]", "'"}], 
      RowBox[{"(", "u", ")"}]}], "+", 
     RowBox[{
      RowBox[{
       SubscriptBox["c", "2"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Phi]", "''"}], 
      RowBox[{"(", "u", ")"}]}], "+", 
     RowBox[{
      RowBox[{
       SubscriptBox["d", "0"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Psi]", "(", "u", ")"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["d", "1"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Psi]", "'"}], 
      RowBox[{"(", "u", ")"}]}], "+", 
     RowBox[{
      RowBox[{
       SubscriptBox["d", "2"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Psi]", "''"}], 
      RowBox[{"(", "u", ")"}]}]}], "=", "0"}], TraditionalForm]], 
  "InlineMath"],
 ","
}], "Text",
 Deletable->True,
 CellID->141532321],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["e", "0"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Psi]", "(", "u", ")"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["e", "1"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Psi]", "'"}], 
      RowBox[{"(", "u", ")"}]}], "+", 
     RowBox[{
      RowBox[{
       SubscriptBox["e", "2"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Psi]", "''"}], 
      RowBox[{"(", "u", ")"}]}], "+", 
     RowBox[{
      RowBox[{
       SubscriptBox["f", "0"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Phi]", "(", "u", ")"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["f", "1"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Phi]", "'"}], 
      RowBox[{"(", "u", ")"}]}], "+", 
     RowBox[{
      RowBox[{
       SubscriptBox["f", "2"], "(", 
       RowBox[{"u", ",", "\[Omega]"}], ")"}], 
      RowBox[{"\[Phi]", "''"}], 
      RowBox[{"(", "u", ")"}]}]}], "=", "0"}], TraditionalForm]], 
  "InlineMath"],
 ","
}], "Text",
 CellID->1425289929],

Cell[TextData[{
 "we may simply join the two functions ",
 Cell[BoxData[
  FormBox["\[Phi]", TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox["\[Psi]", TraditionalForm]], "InlineMath"],
 " into a single vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"\[Phi]", ",", "\[Psi]"}], ")"}], TraditionalForm]], "InlineMath"],
 " of twice the size."
}], "Text",
 Deletable->True,
 CellID->21938408],

Cell[TextData[{
 "We split the equation into coefficients of ",
 Cell[BoxData[
  FormBox["\[Omega]", TraditionalForm]], "InlineMath"],
 " as before, but now the matrix ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "0"], TraditionalForm]], "InlineMath"],
 " above becomes"
}], "Text",
 Deletable->True,
 CellID->236731165],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"\\!\\(\\*SubscriptBox[\\(M\\), \\(0, 1\\)]\\)(\[Phi])\"\>", \
"\<\"\\!\\(\\*SubscriptBox[\\(M\\), \\(0, 1\\)]\\)(\[Psi])\"\>"},
     {"\<\"\\!\\(\\*SubscriptBox[\\(M\\), \\(0, 2\\)]\\)(\[Phi])\"\>", \
"\<\"\\!\\(\\*SubscriptBox[\\(M\\), \\(0, 2\\)]\\)(\[Psi])\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 ImageSize->{120, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellID->1629887900],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["M", 
     RowBox[{"0", ",", "1"}]], "(", "\[Phi]", ")"}], TraditionalForm]], 
  "InlineMath"],
 " is the coefficient of ",
 Cell[BoxData[
  FormBox["\[Phi]", TraditionalForm]], "InlineMath"],
 " in the part of the first equation that contains no ",
 Cell[BoxData[
  FormBox["\[Omega]", TraditionalForm]], "InlineMath"],
 ". The matrix ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "1"], TraditionalForm]], "InlineMath"],
 " above gets a similar modification, and we can solve the same generalized \
eigenvalue problem, but now with matrices of twice the size."
}], "Text",
 Deletable->True,
 CellID->224534168],

Cell[TextData[{
 "Further, we can generalize it to an equation which instead of linear in ",
 Cell[BoxData[
  FormBox["\[Omega]", TraditionalForm]], "InlineMath"],
 " is an arbitrary polynomial in ",
 Cell[BoxData[
  FormBox["\[Omega]", TraditionalForm]], "InlineMath"],
 ". Whether coupled or not, the procedure above will bring such a (system of) \
equation(s) in the form"
}], "Text",
 Deletable->True,
 CellID->1378548966],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["M", "0"], "+", 
        RowBox[{
         SubscriptBox["M", "1"], "\[Omega]"}], "+", 
        RowBox[{
         SubscriptBox["M", "2"], 
         SuperscriptBox["\[Omega]", "2"]}], "+"}], "..."}], "+", " ", 
      RowBox[{
       SubscriptBox["M", "p"], 
       SuperscriptBox["\[Omega]", "p"]}]}], ")"}], "\[Phi]"}], "=", "0"}], 
  TraditionalForm]], "InlineMath"]], "Text",
 Deletable->True,
 CellID->1077128890],

Cell[TextData[{
 "We can rewrite this into an equation that is linear in ",
 Cell[BoxData[
  FormBox["\[Omega]", TraditionalForm]], "InlineMath"],
 " and acts on the vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      RowBox[{"(", "0", ")"}]], ",", 
     SuperscriptBox["\[Phi]", 
      RowBox[{"(", "1", ")"}]], ",", "...", ",", " ", 
     SuperscriptBox["\[Phi]", 
      RowBox[{"(", 
       RowBox[{"p", "-", "1"}], ")"}]]}], ")"}], TraditionalForm]], 
  "InlineMath"],
 ", with a matrix that looks like, for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "=", "3"}], TraditionalForm]], "InlineMath"],
 ":"
}], "Text",
 Deletable->True,
 CellID->61825957],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SubscriptBox["M", "0"], 
      SubscriptBox["M", "1"], 
      RowBox[{
       SubscriptBox["M", "2"], "+", 
       RowBox[{"\[Omega]", " ", 
        SubscriptBox["M", "3"]}]}]},
     {
      RowBox[{"-", "\[Omega]"}], "1", "0"},
     {"0", 
      RowBox[{"-", "\[Omega]"}], "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 ImageSize->{119, 48},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellID->1959208299],

Cell[TextData[{
 "The first row represents the actual equation, while the other rows enforce \
that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Phi]", 
     RowBox[{"(", "i", ")"}]], "=", 
    RowBox[{
     SuperscriptBox["\[Omega]", "i"], "\[Phi]"}]}], TraditionalForm]], 
  "InlineMath"],
 "."
}], "Text",
 Deletable->True,
 CellID->1227876],

Cell[TextData[{
 "Note that ",
 Cell[BoxData[
  FormBox["\[Phi]", TraditionalForm]], "InlineMath"],
 " here might already be a combination of several functions, in the case of a \
coupled system of equations."
}], "Text",
 Deletable->True,
 CellID->2029057168],

Cell[TextData[{
 "This generlizes straightforwardly to arbitrary powers of ",
 Cell[BoxData[
  FormBox["\[Omega]", TraditionalForm]], "InlineMath"],
 ", with the first row representing the actual equations, and apart from that \
identity matrices on the main diagonal and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "\[Omega]"}], TraditionalForm]], "InlineMath"],
 " on the diagonal below the main diagonal setting ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Phi]", 
     RowBox[{"(", "i", ")"}]], "=", 
    RowBox[{
     SuperscriptBox["\[Omega]", "i"], "\[Phi]"}]}], TraditionalForm]], 
  "InlineMath"],
 "."
}], "Text",
 Deletable->True,
 CellID->323162344]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellID->558260947],

Cell["Some excellent reviews on numerical relativity are:", "Text",
 CellID->1460668628],

Cell[TextData[Cell[BoxData[
 TemplateBox[{Cell[
    TextData[
    "P. M. Chesler and L. G. Yaffe, Numerical solution of gravitational \
dynamics in asymptotically anti-de Sitter spacetimes, JHEP 07 (2014) 086"]],
   "https://arxiv.org/abs/1309.1439"},
  "WebLink",
  BaseStyle->{"Text"}]]]], "Text",
 CellID->1140688258],

Cell[TextData[Cell[BoxData[
 TemplateBox[{Cell[
    TextData[
    "O. J. C. Dias, J. E. Santos and B. Way, Numerical Methods for Finding \
Stationary Gravitational Solutions, (2015)"]],
   "https://arxiv.org/abs/1510.02804"},
  "WebLink",
  BaseStyle->{"Text"}]]]], "Text",
 CellID->682858425],

Cell[TextData[Cell[BoxData[
 TemplateBox[{Cell[
    TextData[
    "P. Grandclement and J. Novak, Spectral Methods for Numerical Relativity, \
Living Rev. Relativity\[NonBreakingSpace]12 (2009)"]],
   "https://link.springer.com/article/10.12942/lrr-2009-1"},
  "WebLink",
  BaseStyle->{"Text"}]]]], "Text",
 CellID->1001425676],

Cell["and the standard reference on spectral methods is", "Text",
 CellID->2096338536],

Cell[TextData[Cell[BoxData[
 TemplateBox[{Cell[
    TextData[
    "J. P. Boyd, Chebyshev & Fourier Spectral Methods, Courier Dover \
Publications (2001)"]],"http://www.springer.com/us/book/9783540514879"},
  "WebLink",
  BaseStyle->{"Text"}]]]], "Text",
 CellID->1979089624]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Related Tutorials"
}], "RelatedTutorialsSection",
 WholeCellGroupOpener->True,
 CellID->415694126],

Cell["", "SectionHeaderSpacer"],

Cell[TextData[ButtonBox["Overview",
 BaseStyle->"Link",
 ButtonData->
  "paclet:QNMspectral/tutorial/QNMspectralOverview"]], "RelatedTutorials",
 CellID->261026728],

Cell[TextData[ButtonBox["Simple Example",
 BaseStyle->"Link",
 ButtonData->"paclet:QNMspectral/tutorial/SimpleExample"]], "RelatedTutorials",\

 CellID->498253685],

Cell[TextData[{
 ButtonBox["Extensions",
  BaseStyle->"Link",
  ButtonData->"paclet:QNMspectral/tutorial/Extensions"],
 " "
}], "RelatedTutorials",
 CellID->1415367576]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Method",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "TutorialColor", 
  "LinkTrails" -> GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:QNMspectral/guide/QNMspectral", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "ExampleCounter" -> 1, "NeedPlatMsgIn" -> None, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2017, 6, 7, 17, 8, 41.649081}", 
    "history" -> {"0.0", "", "", ""}, "context" -> "QNMSpectral`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Q N M Spectral Tutorial", "language" -> "en", "paclet" -> "QNMSpectral", 
    "status" -> "None", "summary" -> 
    "To find the quasinormal mode spectrum, we have to solve for a linearized \
perturbation on top of a black hole/black brane, with ingoing boundary \
conditions at the horizon, and normalizability at the boundary. It turns out \
that Eddington-Finkelstein coordinates are perfectly suited for this problem. \
By Eddington-Finkelstein coordinates we mean more specifically a metric of \
the form ds^2=-f(r) dt^2+2g(r) dt dr (+ spatial part), where f(r) is the \
blackening factor, and g(r) depends on the gauge of the radial variable.", 
    "synonyms" -> {}, "tabletags" -> 
    DocumentationBuild`Make`Private`tabletaggingrules$8487, "title" -> 
    "Method", "titlemodifier" -> "", "windowtitle" -> "Method", "type" -> 
    "Tutorial", "uri" -> "QNMspectral/tutorial/Method"}, 
  "SearchTextTranslated" -> ""},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> 
  "11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, 2016)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "RasterizedOutput"->{
  Cell[54635, 1298, 71690, 1184, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->17803236]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"RasterizedOutput", 145997, 3160}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[578, 21, 3288, 77, 70, "AnchorBarGrid",
 CellID->1],
Cell[CellGroupData[{
Cell[3891, 102, 43, 1, 70, "Title",
 CellID->509267359],
Cell[3937, 105, 33623, 589, 70, "TutorialJumpBox"],
Cell[CellGroupData[{
Cell[37585, 698, 95, 1, 70, "Section",
 CellID->13864819],
Cell[37683, 701, 257, 5, 70, "Text",
 CellID->1685543347],
Cell[37943, 708, 221, 5, 70, "Text",
 CellID->65355837],
Cell[38167, 715, 491, 16, 70, "Text",
 CellID->374829256],
Cell[38661, 733, 174, 4, 70, "Text",
 CellID->1617778002],
Cell[38838, 739, 860, 26, 70, "Input",
 InitializationCell->False,
 CellID->77585105],
Cell[39701, 767, 614, 21, 70, "Text",
 CellID->660767926],
Cell[40318, 790, 77, 1, 70, "Text",
 CellID->205460912],
Cell[CellGroupData[{
Cell[40420, 795, 784, 27, 70, "Input",
 InitializationCell->False,
 CellID->2112883632],
Cell[41207, 824, 745, 24, 70, "Output",
 CellID->1846454863],
Cell[41955, 850, 361, 13, 70, "Output",
 CellID->80699644]
}, Open  ]],
Cell[42331, 866, 369, 13, 70, "Text",
 CellID->1101258113],
Cell[42703, 881, 804, 22, 70, "Text",
 CellID->967003255],
Cell[43510, 905, 337, 6, 70, "Text",
 CellID->1933901115],
Cell[43850, 913, 179, 4, 70, "Text",
 CellID->489084805],
Cell[CellGroupData[{
Cell[44054, 921, 688, 23, 70, "Input",
 InitializationCell->False,
 CellID->569349032],
Cell[44745, 946, 584, 20, 70, "Output",
 CellID->1085863252],
Cell[45332, 968, 314, 11, 70, "Output",
 CellID->787644158]
}, Open  ]],
Cell[45661, 982, 348, 11, 70, "Text",
 CellID->489426323],
Cell[46012, 995, 781, 20, 70, "Text",
 CellID->1754192859],
Cell[46796, 1017, 83, 1, 70, "Text",
 CellID->592404874],
Cell[CellGroupData[{
Cell[46904, 1022, 63, 1, 70, "Subsection",
 CellID->354031387],
Cell[46970, 1025, 401, 9, 70, "Text",
 CellID->1966554627]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47420, 1040, 78, 1, 70, "Section",
 CellID->1267753975],
Cell[47501, 1043, 300, 6, 70, "Text",
 CellID->1713154644],
Cell[47804, 1051, 290, 6, 70, "Text",
 CellID->780243156],
Cell[48097, 1059, 853, 31, 70, "Text",
 CellID->225188045],
Cell[48953, 1092, 641, 22, 70, "Text",
 CellID->667655692],
Cell[49597, 1116, 287, 6, 70, "Text",
 CellID->2034219487],
Cell[49887, 1124, 203, 5, 70, "Text",
 CellID->1991738820],
Cell[50093, 1131, 414, 18, 70, "Text",
 CellID->1421600843],
Cell[50510, 1151, 418, 9, 70, "Text",
 CellID->616759975],
Cell[50931, 1162, 284, 11, 70, "Text",
 CellID->988872173],
Cell[51218, 1175, 919, 36, 70, "Text",
 CellID->1630184905],
Cell[52140, 1213, 337, 9, 70, "Text",
 CellID->1087114798],
Cell[CellGroupData[{
Cell[52502, 1226, 2130, 70, 70, "Input",
 CellID->1104739231],
Cell[54635, 1298, 71690, 1184, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->17803236]
}, Open  ]],
Cell[CellGroupData[{
Cell[126362, 2487, 62, 1, 70, "Subsection",
 CellID->2116007790],
Cell[126427, 2490, 427, 7, 70, "Text",
 CellID->10743530],
Cell[126857, 2499, 386, 7, 70, "Text",
 CellID->1738386601],
Cell[127246, 2508, 238, 5, 70, "Text",
 CellID->1886024033]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[127533, 2519, 70, 1, 70, "Section",
 CellID->543512774],
Cell[127606, 2522, 106, 3, 70, "Text",
 CellID->1528765870],
Cell[127715, 2527, 708, 26, 70, "Text",
 CellID->1636640841],
Cell[128426, 2555, 689, 27, 70, "Text",
 CellID->1395168574],
Cell[129118, 2584, 282, 8, 70, "Text",
 CellID->721735607],
Cell[129403, 2594, 520, 12, 70, "Text",
 CellID->1310912195],
Cell[129926, 2608, 90, 2, 70, "Text",
 CellID->739824142],
Cell[130019, 2612, 310, 11, 70, "Text",
 CellID->544592701],
Cell[130332, 2625, 219, 8, 70, "Text",
 CellID->1659568876],
Cell[130554, 2635, 736, 27, 70, "Text",
 CellID->1698227968],
Cell[131293, 2664, 181, 8, 70, "Text",
 CellID->1446509982],
Cell[131477, 2674, 310, 9, 70, "Text",
 CellID->1307832486]
}, Open  ]],
Cell[CellGroupData[{
Cell[131824, 2688, 95, 1, 70, "Section",
 CellID->1904411934],
Cell[131922, 2691, 90, 1, 70, "Text",
 CellID->2121721600],
Cell[132015, 2694, 91, 1, 70, "Text",
 CellID->378303749],
Cell[132109, 2697, 1248, 43, 70, "Text",
 CellID->141532321],
Cell[133360, 2742, 1231, 42, 70, "Text",
 CellID->1425289929],
Cell[134594, 2786, 427, 15, 70, "Text",
 CellID->21938408],
Cell[135024, 2803, 325, 11, 70, "Text",
 CellID->236731165],
Cell[135352, 2816, 938, 23, 70, "Output",
 CellID->1629887900],
Cell[136293, 2841, 697, 22, 70, "Text",
 CellID->224534168],
Cell[136993, 2865, 426, 11, 70, "Text",
 CellID->1378548966],
Cell[137422, 2878, 560, 19, 70, "Text",
 CellID->1077128890],
Cell[137985, 2899, 707, 24, 70, "Text",
 CellID->61825957],
Cell[138695, 2925, 953, 30, 70, "Output",
 CellID->1959208299],
Cell[139651, 2957, 362, 14, 70, "Text",
 CellID->1227876],
Cell[140016, 2973, 260, 8, 70, "Text",
 CellID->2029057168],
Cell[140279, 2983, 680, 21, 70, "Text",
 CellID->323162344]
}, Open  ]],
Cell[CellGroupData[{
Cell[140996, 3009, 49, 1, 70, "Section",
 CellID->558260947],
Cell[141048, 3012, 88, 1, 70, "Text",
 CellID->1460668628],
Cell[141139, 3015, 320, 8, 70, "Text",
 CellID->1140688258],
Cell[141462, 3025, 293, 8, 70, "Text",
 CellID->682858425],
Cell[141758, 3035, 326, 8, 70, "Text",
 CellID->1001425676],
Cell[142087, 3045, 86, 1, 70, "Text",
 CellID->2096338536],
Cell[142176, 3048, 274, 7, 70, "Text",
 CellID->1979089624]
}, Open  ]],
Cell[CellGroupData[{
Cell[142487, 3060, 287, 12, 70, "RelatedTutorialsSection",
 CellID->415694126],
Cell[142777, 3074, 31, 0, 70, "SectionHeaderSpacer"],
Cell[142811, 3076, 164, 4, 70, "RelatedTutorials",
 CellID->261026728],
Cell[142978, 3082, 163, 4, 70, "RelatedTutorials",
 CellID->498253685],
Cell[143144, 3088, 168, 6, 70, "RelatedTutorials",
 CellID->1415367576]
}, Open  ]]
}, Open  ]],
Cell[143339, 3098, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)
